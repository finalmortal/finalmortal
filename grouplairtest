<!doctype html> 
<html lang="en"> 
<head> 
    <meta charset="UTF-8" />
    <title>kombatlairtest</title>
    <script src="phaser.js"></script>
    <style type="text/css">
        body {
            margin: 0;
        }
    </style>
</head>
<body>
<script type="text/javascript">

var config = {
    type: Phaser.AUTO,
    width: 1360,
    height: 768,
    physics: {
        default: 'arcade',
        arcade: {
            gravity: { y: 0 },
            debug: false
        }
    },
    scene: {
        preload: preload,
        create: create,
        update: update
    }
};
//varstuff
var player;
var cursors;
var text;
var scrollright = false
var game = new Phaser.Game(config);
var rosaspelltime;
var mogspelltime;

var battlemode = false
var subzerobattle = false
var scorpionbattle = false


var leader1x = 450
var leader1y = 375
var leader2x = 450
var leader2y = 450
var fighter1x = 380
var fighter1y = 350
var fighter2x = 360
var fighter2y = 360
var fighter3x = 340
var fighter3y = 370
var fighter4x = 340
var fighter4y = 450
var fighter5x = 360
var fighter5y = 460
var fighter6x = 380
var fighter6y = 470
var support1x = 260
var support1y = 370
var support2x = 260
var support2y = 450

var support1alive = true
var support2alive = true
var leader1alive = true
var leader2alive = true
var fighter1alive = true
var fighter2alive = true
var fighter3alive = true
var fighter4alive = true
var fighter5alive = true
var fighter6alive = true

var currentplayerdamage = 0
var autotarget = true

var enemy1x = 1800
var enemy1y = 350
var enemy1health = 100000
var enemy1attackready = false
var enemy1targetname = ''

var support1action = 100
var support1focustime = 0
var support1focuscharge = 0
var support1focuschargeon = false
var support2action = 100
var support2focustime = 0
var support2focuscharge = 0
var support2focuschargeon = false
var leader1action = 100
var leader1focustime = 0
var leader1focuscharge = 0
var leader1focuschargeon = false
var leader2action = 100
var leader2focustime = 0
var leader2focuscharge = 0
var leader2focuschargeon = false
var fighter1action = 100
var fighter1focustime = 0
var fighter1focuscharge = 0
var fighter1focuschargeon = false
var fighter2action = 100
var fighter2focustime = 0
var fighter2focuscharge = 0
var fighter2focuschargeon = false
var fighter3action = 100
var fighter3focustime = 0
var fighter3focuscharge = 0
var fighter3focuschargeon = false
var fighter4action = 100
var fighter4focustime = 0
var fighter4focuscharge = 0
var fighter4focuschargeon = false
var fighter5action = 100
var fighter5focustime = 0
var fighter5focuscharge = 0
var fighter5focuschargeon = false
var fighter6action = 100
var fighter6focustime = 0
var fighter6focuscharge = 0
var fighter6focuschargeon = false

var actionquenumber = 0
var actionquetimenumber = 0
var actionqueeffectnumber = 0
var actionquecountdown = false

var leader1damagefloatup = false
var leader2damagefloatup = false
var fighter1damagefloatup = false
var fighter2damagefloatup = false
var fighter3damagefloatup = false
var fighter4damagefloatup = false
var fighter5damagefloatup = false
var fighter6damagefloatup = false

var support1damagetakenfloatup = false
var support2damagetakenfloatup = false
var leader1damagetakenfloatup = false
var leader2damagetakenfloatup = false
var fighter1damagetakenfloatup = false
var fighter2damagetakenfloatup = false
var fighter3damagetakenfloatup = false
var fighter4damagetakenfloatup = false
var fighter5damagetakenfloatup = false
var fighter6damagetakenfloatup = false


var lairstatscreenshowbasicstatsoff = false
var lairstatscreenselected = false
var lairstatscreenshow = false
var lairstatscreenname = 'testname'
var lairstatscreenmaxhealth = '0'
var lairstatscreenactionregen = '0'
var lairstatscreenattackrating = '0'
var lairstatscreendefenserating = '0'
var lairstatscreensupportrating = '0'
var statbuttoninfo = ''


var lairstatbuttoninfo1 = ''
var lairstatbuttoninfo2 = ''
var lairstatbuttoninfo3 = ''
var lairstatbuttoninfo4 = ''
var lairstatbuttoninfo5 = ''
var lairstatbuttoninfo6 = ''
var lairstatbuttoninfo7 = ''
var lairstatbuttoninfo8 = ''
var lairstatbuttoninfo9 = ''



var leader1health
var leader1maxhealth
var leader2health
var leader2maxhealth
var fighter1health
var fighter1maxhealth
var fighter2health
var fighter2maxhealth
var fighter3health
var fighter3maxhealth
var fighter4health
var fighter4maxhealth
var fighter5health
var fighter5maxhealth
var fighter6health
var fighter6maxhealth
var support1health
var support1maxhealth
var support2health
var support2maxhealth


var support1currentdamage = 0
var support1totaldamage  = 0 
var support1currentdamagetaken = 0
var support2currentdamage = 0
var support2totaldamage  = 0 
var support2currentdamagetaken = 0
var leader1currentdamage = 0
var leader1totaldamage  = 0 
var leader1currentdamagetaken = 0
var leader2currentdamage = 0
var leader2totaldamage = 0
var leader2currentdamagetaken = 0
var fighter1currentdamage = 0
var fighter1totaldamage = 0
var fighter1currentdamagetaken = 0
var fighter2currentdamage = 0
var fighter2totaldamage = 0
var fighter2currentdamagetaken = 0
var fighter3currentdamage = 0
var fighter3totaldamage = 0
var fighter3currentdamagetaken = 0
var fighter4currentdamage = 0
var fighter4totaldamage = 0
var fighter4currentdamagetaken = 0
var fighter5currentdamage = 0
var fighter5totaldamage = 0
var fighter5currentdamagetaken = 0
var fighter6currentdamage = 0
var fighter6totaldamage = 0
var fighter6currentdamagetaken = 0


var support1currenthealing
var support1totalhealing
var support2currenthealing
var support2totalhealing

var kangflykickcooltime
var kangfireballcooltime
var kangbicyclecooltime
var kangdragoncooltime

var support1backx = 35
var support1backy = 0
var support2backx = 105
var support2backy = 0
var leader1backx = 175
var leader1backy = 0
var leader2backx = 245
var leader2backy = 0
var fighter1backx = 315
var fighter1backy = 0
var fighter2backx = 385
var fighter2backy = 0
var fighter3backx = 455
var fighter3backy = 0
var fighter4backx = 525
var fighter4backy = 0
var fighter5backx = 595
var fighter5backy = 0
var fighter6backx = 665
var fighter6backy = 0

var support1actionregen = 0
var support2actionregen = 0
var leader1actionregen = 0
var leader2actionregen = 0
var fighter1actionregen = 0
var fighter2actionregen = 0
var fighter3actionregen = 0
var fighter4actionregen = 0
var fighter5actionregen = 0
var fighter6actionregen = 0

var support1attackrating = 0
var support2attackrating = 0
var leader1attackrating = 0
var leader2attackrating = 0
var fighter1attackrating = 0
var fighter2attackrating = 0
var fighter3attackrating = 0
var fighter4attackrating = 0
var fighter5attackrating = 0
var fighter6attackrating = 0
var support1supportrating = 0
var support2supportrating = 0
var leader1supportrating = 0
var leader2supportrating = 0
var fighter1supportrating = 0
var fighter2supportrating = 0
var fighter3supportrating = 0
var fighter4supportrating = 0
var fighter5supportrating = 0
var fighter6supportrating = 0
var support1defenserating = 0
var support2defenserating = 0
var leader1defenserating = 0
var leader2defenserating = 0
var fighter1defenserating = 0
var fighter2defenserating = 0
var fighter3defenserating = 0
var fighter4defenserating = 0
var fighter5defenserating = 0
var fighter6defenserating = 0
var support1bonusheal = 0
var support2bonusheal = 0
var leader1bonusheal = 0
var leader2bonusheal = 0
var fighter1bonusheal = 0
var fighter2bonusheal = 0
var fighter3bonusheal = 0
var fighter4bonusheal = 0
var fighter5bonusheal = 0
var fighter6bonusheal = 0
var support1nochargeactive = true
var support1charge1active = false
var support1charge2active = false
var support1charge3active = false
var support1charge4active = false
var support1charge5active = false
var support2nochargeactive = true
var support2charge1active = false
var support2charge2active = false
var support2charge3active = false
var support2charge4active = false
var support2charge5active = false
var leader1charge0active = true
var leader1charge1active = false
var leader1charge2active = false
var leader1charge3active = false
var leader1charge4active = false
var leader1charge5active = false
var leader2charge0active = true
var leader2charge1active = false
var leader2charge2active = false
var leader2charge3active = false
var leader2charge4active = false
var leader2charge5active = false
var fighter1charge0active = true
var fighter1charge1active = false
var fighter1charge2active = false
var fighter1charge3active = false
var fighter1charge4active = false
var fighter1charge5active = false
var fighter2charge0active = true
var fighter2charge1active = false
var fighter2charge2active = false
var fighter2charge3active = false
var fighter2charge4active = false
var fighter2charge5active = false
var fighter3charge0active = true
var fighter3charge1active = false
var fighter3charge2active = false
var fighter3charge3active = false
var fighter3charge4active = false
var fighter3charge5active = false
var fighter4charge0active = true
var fighter4charge1active = false
var fighter4charge2active = false
var fighter4charge3active = false
var fighter4charge4active = false
var fighter4charge5active = false
var fighter5charge0active = true
var fighter5charge1active = false
var fighter5charge2active = false
var fighter5charge3active = false
var fighter5charge4active = false
var fighter5charge5active = false
var fighter6charge0active = true
var fighter6charge1active = false
var fighter6charge2active = false
var fighter6charge3active = false
var fighter6charge4active = false
var fighter6charge5active = false


var support1frozen = false
var support2frozen = false
var leader1frozen = false
var leader2frozen = false
var fighter1frozen = false
var fighter2frozen = false
var fighter3frozen = false
var fighter4frozen = false
var fighter5frozen = false
var fighter6frozen = false

var support1spear = false
var support2spear = false
var leader1spear = false
var leader2spear = false
var fighter1spear = false
var fighter2spear = false
var fighter3spear = false
var fighter4spear = false
var fighter5spear = false
var fighter6spear = false

var support1status = 'normal'
var support1selected = false
var support2status = 'normal'
var support2selected = false
var leader1status = 'normal'
var leader1selected = false
var leader2status = 'normal'
var leader2selected = false
var fighter1status = 'normal'
var fighter1selected = false
var fighter2status = 'normal'
var fighter2selected = false
var fighter3status = 'normal'
var fighter3selected = false
var fighter4status = 'normal'
var fighter4selected = false
var fighter5status = 'normal'
var fighter5selected = false
var fighter6status = 'normal'
var fighter6selected = false

var attackbuffbonus = 0

//kangstats
var kangdead = false
var kanghealth = 8000
var kangmaxhealth = 8000
var kangactionregen = 1
var kangattackrating = 500
var kangsupportrating = 100
var kangdefenserating = 50
var kangcurrentdamage = 0
var kangbuttonselected = false
var kangaction = 100
var iskangselected
var kangcurrenttargetx
var kangcurrenttargety
var kangattacktargetx = 0
var kangattacktargety = 0
var kangtarget
var iskangattackingnow = false
var iskangattacking = false
var iskangtargetpicked = false
var iskangpickingtarget = false
var kangcanattacknow = false
var iskangattackingflykick = false
var iskangattackingfireball = false
var iskangfireballexplode = false
var kangfireballexplodenumber = 5
var iskangattackingbicycle = false
var iskangattackingdragon = false
var iskangattackingprayer = false
var kangprayerboltstrikenumber = 4
var iskangprayerboltstrike = false
var kangattackdamage = 5000
var kangflykickdamage = 1000
var kangfireballdamage = 1100
var kangbicycledamage = 1150
var kangdragondamage = 2500
var kangbonusdamage = 250
var endkangattacknumber = 0
var kangfrozen = false
var kangspear = false
var kangstatus = 'normal'

//spinalstats
var spinaldead = false
var spinalhealth = 9000
var spinalmaxhealth = 9000
var spinalactionregen = 1
var spinalattackrating = 500
var spinalsupportrating = 100
var spinaldefenserating = 50
var spinalcurrentdamage = 0
var spinalbuttonselected = false
var spinalaction = 100
var isspinalselected 
var spinalcurrenttargetx
var spinalcurrenttargety
var spinalattacktargetx = 0
var spinalattacktargety = 0
var spinaltarget
var isspinalattackingnow = false
var isspinalattacking = false
var isspinaltargetpicked = false
var isspinalpickingtarget = false
var spinalcanattacknow = false
var isspinalattackingslice = false
var isspinalattackingslash = false
var isspinalattackingbash = false
var isspinalattackingspike = false
var isspinalattackingblock = false
var spinalattackdamage = 5000
var spinalslicedamage = 1000
var spinalslashdamage = 1100
var spinalbashdamage = 1150
var spinalspikedamage = 2500
var spinalbonusdamage = 250
var endspinalattacknumber = 0
var spinalfrozen = false
var spinalspear = false
var spinalstatus = 'normal'

//combostats
var combodead = false
var combohealth = 8000
var combomaxhealth = 8000
var comboactionregen = 1
var comboattackrating = 500
var combosupportrating = 100
var combodefenserating = 50
var combocurrentdamage = 0
var combobuttonselected = false
var comboaction = 100
var iscomboselected
var combocurrenttargetx
var combocurrenttargety
var comboattacktargetx = 0
var comboattacktargety = 0
var combotarget
var iscomboattackingnow = false
var iscomboattacking = false
var iscombotargetpicked = false
var iscombopickingtarget = false
var combocanattacknow = false
var iscomboattackingpunch = false
var iscomboattackingjumpkick = false
var iscomboattackinggun = false
var iscomboattackingslam = false
var iscomboattackingmuscle = false
var comboattackdamage = 5000
var combopunchdamage = 1000
var combojumpkickdamage = 1100
var combogundamage = 1150
var comboslamdamage = 2500
var combobonusdamage = 250
var endcomboattacknumber = 0
var combofrozen = false
var combospear = false
var combostatus = 'normal'

//kanostats
var kanodead = false
var kanohealth = 6000
var kanomaxhealth = 6000
var kanoactionregen = 1
var kanoattackrating = 1000
var kanosupportrating = 50
var kanodefenserating = 20
var kanocurrentdamage = 0
var kanobuttonselected = false
var kanoaction = 100
var iskanoselected
var kanocurrenttargetx
var kanocurrenttargety
var kanoattacktargetx = 0
var kanoattacktargety = 0
var kanotarget
var iskanoattackingnow = false
var iskanoattacking = false
var iskanotargetpicked = false
var iskanopickingtarget = false
var kanocanattacknow = false
var iskanoattackingblades = false
var iskanobladebleed = false
var kanobladebleednumber = 5
var iskanoattackingcut = false
var iskanoattackinglaser = false
var iskanoattackinghell = false
var iskanoattackingkick = false
var kanoattackdamage = 5000
var kanobladesdamage = 1000
var kanocutdamage = 1100
var kanolaserdamage = 1150
var kanohelldamage = 2500
var kanokickdamage = 2500
var kanobonusdamage = 250
var endkanoattacknumber = 0
var kanofrozen = false
var kanospear = false
var kanostatus = 'normal'

//orchidstats
var orchiddead = false
var orchidhealth = 6500
var orchidmaxhealth = 6500
var orchidactionregen = 1
var orchidattackrating = 1000
var orchidsupportrating = 50
var orchiddefenserating = 20
var orchidcurrentdamage = 0
var orchidbuttonselected = false
var orchidaction = 100
var isorchidselected
var orchidcurrenttargetx
var orchidcurrenttargety
var orchidattacktargetx = 0
var orchidattacktargety = 0
var orchidtarget
var isorchidattackingnow = false
var isorchidattacking = false
var isorchidtargetpicked = false
var isorchidpickingtarget = false
var orchidcanattacknow = false
var isorchidattackingwheel = false
var isorchidattackingfireba = false
var orchidfirebaexplodenumber = 5
var isorchidfirebaexplode = false
var isorchidattackingbaton = false
var isorchidattackingcat = false
var isorchidattackingfit = false
var orchidattackdamage = 5000
var orchidwheeldamage = 1000
var orchidfirebadamage = 1100
var orchidbatondamage = 1150
var orchidcatdamage = 2500
var orchidfitdamage = 2500
var orchidbonusdamage = 250
var endorchidattacknumber = 0
var orchidfrozen = false
var orchidspear = false
var orchidstatus = 'normal'

//jagostats
var jagodead = false
var jagohealth = 6500
var jagomaxhealth = 6500
var jagoactionregen = 1
var jagoattackrating = 1000
var jagosupportrating = 50
var jagodefenserating = 20
var jagocurrentdamage = 0
var jagobuttonselected = false
var jagoaction = 100
var isjagoselected
var jagocurrenttargetx
var jagocurrenttargety
var jagoattacktargetx = 0
var jagoattacktargety = 0
var jagotarget
var isjagoattackingnow = false
var isjagoattacking = false
var isjagotargetpicked = false
var isjagopickingtarget = false
var jagocanattacknow = false
var isjagoattackingsword = false
var isjagoattackingplasma = false
var isjagoattackingrkick = false
var isjagoattackingfocus = false
var isjagoattackingstab = false
var jagoattackdamage = 5000
var jagosworddamage = 1000
var jagoplasmadamage = 1100
var jagorkickdamage = 1150
var jagofocusdamage = 2500
var jagostabdamage = 2500
var jagobonusdamage = 250
var endjagoattacknumber = 0
var jagofrozen = false
var jagospear = false
var jagostatus = 'normal'

//kunglaostats
var kunglaodead = false
var kunglaohealth = 7000
var kunglaomaxhealth = 7000
var kunglaoactionregen = 1
var kunglaoattackrating = 1000
var kunglaosupportrating = 50
var kunglaodefenserating = 20
var kunglaocurrentdamage = 0
var kunglaobuttonselected = false
var kunglaoaction = 100
var iskunglaoselected
var kunglaocurrenttargetx
var kunglaocurrenttargety
var kunglaoattacktargetx = 0
var kunglaoattacktargety = 0
var kunglaotarget
var iskunglaoattackingnow = false
var iskunglaoattacking = false
var iskunglaotargetpicked = false
var iskunglaopickingtarget = false
var kunglaocanattacknow = false
var iskunglaoattackinghatthrow = false
var iskunglaoattackingpalmkick = false
var iskunglaoattackingwhirl = false
var iskunglaoattackingbrim = false
var iskunglaoattackingkick = false
var kunglaoattackdamage = 5000
var kunglaohatthrowdamage = 1000
var kunglaopalmkickdamage = 1100
var kunglaowhirldamage = 1150
var kunglaobrimdamage = 2500
var kunglaokickdamage = 2500
var kunglaobonusdamage = 250
var endkunglaoattacknumber = 0
var kunglaofrozen = false
var kunglaospear = false
var kunglaostatus = 'normal'


//sonjastats
var sonjadead = false
var sonjahealth = 6500
var sonjamaxhealth = 6500
var sonjaactionregen = 1
var sonjaattackrating = 1000
var sonjasupportrating = 50
var sonjadefenserating = 20
var sonjacurrentdamage = 0
var sonjabuttonselected = false
var sonjaaction = 100
var issonjaselected 
var sonjacurrenttargetx
var sonjacurrenttargety
var sonjaattacktargetx = 0
var sonjaattacktargety = 0
var sonjatarget
var issonjaattackingnow = false
var issonjaattacking = false
var issonjatargetpicked = false
var issonjapickingtarget = false
var sonjacanattacknow = false
var issonjaattackingblaster = false
var issonjablasterexplode = false
var sonjablasterexplodenumber = 5
var issonjaattackinghandst= false
var issonjaattackingkiss = false
var issonjaattackingdancer = false
var issonjaattackingkicks = false
var sonjaattackdamage = 5000
var sonjahandstdamage = 1000
var sonjablasterdamage = 1100
var sonjakissdamage = 1150
var sonjakicksdamage = 2500
var sonjadancedamage = 2500
var sonjabonusdamage = 250
var endsonjaattacknumber = 0
var sonjafrozen = false
var sonjaspear = false
var sonjastatus = 'normal'


//terrastats
var terradead = false
var terrahealth = 5000
var terramaxhealth = 5000
var terradefenserating = 10
var terraattackrating = 1000
var terrasupportrating = 100
var terraactionregen = 1
var terracurrentdamage = 0
var terrabuttonselected = false
var terraaction = 100
var isterraselected
var terracurrenttargetx
var terracurrenttargety
var terraspelltargetx = 0
var terraspelltargety = 0
var terratarget
var isterracastingnow = false
var isterracasting = false
var isterratargetpicked = false
var isterrapickingtarget = false
var terracancastnow = false
var isterracastingfire = false
var terrafiredamage = 1000
var terraicedamage = 1000
var terrawinddamage = 1000
var terraearthdamage = 1000
var isterracastingice = false
var isterracastingwind = false
var isterracastingearth = false
var terrabonusdamage = 250
var endterracastnumber = 0
var terrafrozen = false
var terraspear = false
var terrastatus = 'normal'

//golbezstats
var golbezdead = false
var golbezhealth = 4000
var golbezmaxhealth = 4000
var golbezdefenserating = 10
var golbezattackrating = 1000
var golbezsupportrating = 100
var golbezactionregen = 1
var golbezcurrentdamage = 0
var golbezbuttonselected = false
var golbezaction = 100
var isgolbezselected
var golbezcurrenttargetx
var golbezcurrenttargety
var golbezspelltargetx = 0
var golbezspelltargety = 0
var golbeztarget
var isgolbezcastingnow = false
var isgolbezcasting = false
var isgolbeztargetpicked = false
var isgolbezpickingtarget = false
var golbezcancastnow = false
var isgolbezcastingfire = false
var golbezshadowdamage = 1000
var golbezwaterdamage = 1000
var golbezwinddamage = 1000
var golbezearthdamage = 1000
var isgolbezcastingice = false
var isgolbezcastingwind = false
var isgolbezcastingearth = false
var golbezbonusdamage = 250
var endgolbezcastnumber = 0
var golbezfrozen = false
var golbezstatus = 'normal'


//rosastats
var rosadead = false
var rosahealth = 5000
var rosamaxhealth = 5000
var rosaactionregen = 1
var rosaattackrating = 100
var rosasupportrating = 1000
var rosadefenserating = 10
var rosabuttonselected = false
var rosaaction = 100
var isrosaselected
var rosacurrenttargetx
var rosacurrenttargety
var rosaspelltargetx = 0
var rosaspelltargety = 0
var rosatarget
var isrosacastingnow = false
var isrosacasting = false
var isrosatargetpicked = false
var isrosapickingtarget = false
var rosacancastnow = false
var isrosacastingcure = false
var isrosacastingheal = false
var isrosacastingfast = false
var isrosacastingshell = false
var rosabonushealamount = 25
var endrosacastnumber = 0
var rosafrozen = false
var rosaspear = false
var rosastatus = 'normal'
var rosafastbufftime = 10
var rosafastbufftimeamount = 10
var rosafastbuffactive = false
var rosafastbuffstat = ''
var rosashellbufftime = 10
var rosashellbufftimeamount = 10
var rosashellbuffactive = false
var rosashellbuffstat = ''
var rosabasehealingamount = 0
var rosacharge0healingamount = 0
var rosacharge1healingamount = 0
var rosacharge2healingamount = 0
var rosacharge3healingamount = 0
var rosacharge4healingamount = 0
var rosacharge5healingamount = 0


//mogstats 
var mogdead = false
var moghealth = 5500
var mogmaxhealth = 5500
var mogactionregen = 1
var mogattackrating = 100
var mogsupportrating = 1000
var mogdefenserating = 10
var mogbuttonselected = false
var mogaction = 100
var ismogselected
var mogcurrenttargetx
var mogcurrenttargety
var mogspelltargetx = 0
var mogspelltargety = 0
var mogtarget
var ismogcastingnow = false
var ismogcasting = false
var ismogtargetpicked = false
var ismogpickingtarget = false
var mogcancastnow = false
var ismogcastingmoon = false
var ismogcastingpower = false
var ismogcastingdream = false
var ismogcastingdance = false
var ismogcastingbull = false
var mogbonushealamount = 25
var endmogcastnumber = 0
var mogfrozen = false
var mogspear = false
var mogstatus = 'normal'
var mogpowerbufftime = 10
var mogpowerbufftimeamount = 10
var mogpowerbuffactive = false
var mogpowerbuffstat = ''
var mogmoonbufftime = 10
var mogmoonbufftimeamount = 10
var mogmoonbuffactive = false
var mogmoonbuffstat = ''
var mogdancebufftime = 10
var mogdancebufftimeamount = 10
var mogdancebuffactive = false
var mogdancebuffstat = ''
var mogdreambufftime = 10
var mogdreambufftimeamount = 10
var mogbasehealingamount = 0
var mogcharge0healingamount = 0
var mogcharge1healingamount = 0
var mogcharge2healingamount = 0
var mogcharge3healingamount = 0
var mogcharge4healingamount = 0
var mogcharge5healingamount = 0


var mogdreambuffactive = false
var mogdreambuffstat = ''

//subzerostats
var subzeromaxhealth = 25000
var subzerohealth = 25000
var subzerostatus = 'ready'
var enemy1name = 'Subzero'
var randomnumber
var randomnumber2
var subzeroalive = true
var enemy1action = 0
var subzeroiceblast = false
var subzeroslide = false
var subzerocurrentdamage = 0
var issubzeroattackingnow = false
var issubzeroattacking = false
var issubzerotargetpicked = false
var issubzeropickingtarget = true
var issubzeroattackmovepicked = false
var subzeroselectedmove
var subzerotarget 
var subzerotargetx 
var subzerotargety

//scorpionstats
var scorpiontargetis = ''
var scorpionpunchnumber = 7
var scorpionspearnumber = 7
var scorpionmaxhealth = 250000
var scorpionhealth = 250000
var scorpionstatus = 'ready'
var scorpionalive = true
var scorpionspear = false
var scorpionpunch = false
var scorpioncurrentdamage = 0
var isscorpionattackingnow = false
var isscorpionattacking = false
var isscorpiontargetpicked = false
var isscorpionpickingtarget = true
var isscorpionattackmovepicked = false
var scorpionselectedmove
var scorpiontarget 
var scorpiontargetx 
var scorpiontargety

var kangidle = true
var spinalidle = true
var comboidle = true
var glaciusidle = true
var kanoidle = true
var sindelidle = true
var kabalidle = true
var jagoidle = true
var cyraxidle = true
var cecilidle = true
var rosaidle = true
var cyanidle = true
var golbezidle = true
var kainidle = true
var terraidle = true
var mogidle = true
var kunglaoidle = true
var sonjaidle = true
var sektoridle = true
var comboidle = true
var orchididle = true

var kangactive = false
var spinalactive = false
var comboactive = false
var glaciusactive = false
var kanoactive = false
var sindelactive = false
var kabalactive = false
var jagoactive = false
var cyraxactive = false
var cecilactive = false
var rosaactive = false
var cyanactive = false
var golbezactive = false
var kainactive = false
var terraactive = false
var mogactive = false
var kunglaoactive = false
var sonjaactive = false
var sektoractive = false
var comboactive = false
var orchidactive = false
var activeleader1name = ''
var activeleader2name = ''
var activefighter1name = ''
var activefighter2name = ''
var activefighter3name = ''
var activefighter4name = ''
var activefighter5name = ''
var activefighter6name = ''
var activesupport1name = ''
var activesupport2name = ''





//preloadstuff
function preload ()
{
    var progress = this.add.graphics();

    this.load.on('progress', function (value) {
        
        progress.clear();
        progress.fillStyle(0xff0000, 1);
        progress.fillRect(0, 270, 1224 * value, 60);
       

    });

    this.load.on('complete', function () {

        progress.destroy();

    });
    //loadimages
this.load.image('kombatbackground', 'assets/lair/kombat/kombatlairback.png');
this.load.image('kombatbackground2', 'assets/lair/kombat/kombatlairback2.png');
this.load.image('frozenuiicon', 'assets/ui/frozenuiicon.png');
this.load.spritesheet('torch', 'assets/lair/kombat/purpletorch1.png', { frameWidth: 58, frameHeight: 113 });
this.load.spritesheet('backdragon', 'assets/lair/kombat/backdragon1.png', { frameWidth: 368, frameHeight: 220 });
this.load.image('uibox', 'assets/ui/uibox.png');
this.load.image('aquibox', 'assets/ui/aquibox.png');
this.load.image('focusboostimage', 'assets/ui/focusboostimg.png');
this.load.image('enemytargetplate', 'assets/ui/enemytargetplate.png');
this.load.image('statscreenuibox', 'assets/ui/statscreenuibox.png');
this.load.image('statscreenback', 'assets/ui/statscreen1.png');
this.load.spritesheet('lowhealthnote', 'assets/ui/lowhealthnote.png', { frameWidth: 127, frameHeight: 172 });
this.load.spritesheet('nohealthnote', 'assets/ui/nohealthnote.png', { frameWidth: 127, frameHeight: 172 });
this.load.spritesheet('deadnote', 'assets/ui/deadnote.png', { frameWidth: 126, frameHeight: 168 });
this.load.spritesheet('actionbar10gr', 'assets/ui/actionbar/actionbar10.png', { frameWidth: 125, frameHeight: 15 });
this.load.spritesheet('actionbar20gr', 'assets/ui/actionbar/actionbar20.png', { frameWidth: 125, frameHeight: 15 });
this.load.spritesheet('actionbar30gr', 'assets/ui/actionbar/actionbar30.png', { frameWidth: 125, frameHeight: 15 });
this.load.spritesheet('actionbar40gr', 'assets/ui/actionbar/actionbar40.png', { frameWidth: 125, frameHeight: 15 });
this.load.spritesheet('actionbar50gr', 'assets/ui/actionbar/actionbar50.png', { frameWidth: 125, frameHeight: 15 });
this.load.spritesheet('actionbar60gr', 'assets/ui/actionbar/actionbar60.png', { frameWidth: 125, frameHeight: 15 });
this.load.spritesheet('actionbar70gr', 'assets/ui/actionbar/actionbar70.png', { frameWidth: 125, frameHeight: 15 });
this.load.spritesheet('actionbar80gr', 'assets/ui/actionbar/actionbar80.png', { frameWidth: 125, frameHeight: 15 });
this.load.spritesheet('actionbar90gr', 'assets/ui/actionbar/actionbar90.png', { frameWidth: 125, frameHeight: 15 });
this.load.spritesheet('actionbar100gr', 'assets/ui/actionbar/actionbar100.png', { frameWidth: 125, frameHeight: 15 });
this.load.spritesheet('enemyactionbar10gr', 'assets/ui/actionbar/enemyactionbar10.png', { frameWidth: 377, frameHeight: 46 });
this.load.spritesheet('enemyactionbar20gr', 'assets/ui/actionbar/enemyactionbar20.png', { frameWidth: 377, frameHeight: 46 });
this.load.spritesheet('enemyactionbar30gr', 'assets/ui/actionbar/enemyactionbar30.png', { frameWidth: 377, frameHeight: 46 });
this.load.spritesheet('enemyactionbar40gr', 'assets/ui/actionbar/enemyactionbar40.png', { frameWidth: 377, frameHeight: 46 });
this.load.spritesheet('enemyactionbar50gr', 'assets/ui/actionbar/enemyactionbar50.png', { frameWidth: 377, frameHeight: 46 });
this.load.spritesheet('enemyactionbar60gr', 'assets/ui/actionbar/enemyactionbar60.png', { frameWidth: 377, frameHeight: 46 });
this.load.spritesheet('enemyactionbar70gr', 'assets/ui/actionbar/enemyactionbar70.png', { frameWidth: 377, frameHeight: 46 });
this.load.spritesheet('enemyactionbar80gr', 'assets/ui/actionbar/enemyactionbar80.png', { frameWidth: 377, frameHeight: 46 });
this.load.spritesheet('enemyactionbar90gr', 'assets/ui/actionbar/enemyactionbar90.png', { frameWidth: 377, frameHeight: 46 });
this.load.spritesheet('enemyactionbar100gr', 'assets/ui/actionbar/enemyactionbar100.png', { frameWidth: 377, frameHeight: 46 });
this.load.spritesheet('enemyhealthbar10gr', 'assets/ui/actionbar/enemyhealthbar10.png', { frameWidth: 377, frameHeight: 46 });
this.load.spritesheet('enemyhealthbar20gr', 'assets/ui/actionbar/enemyhealthbar20.png', { frameWidth: 377, frameHeight: 46 });
this.load.spritesheet('enemyhealthbar30gr', 'assets/ui/actionbar/enemyhealthbar30.png', { frameWidth: 377, frameHeight: 46 });
this.load.spritesheet('enemyhealthbar40gr', 'assets/ui/actionbar/enemyhealthbar40.png', { frameWidth: 377, frameHeight: 46 });
this.load.spritesheet('enemyhealthbar50gr', 'assets/ui/actionbar/enemyhealthbar50.png', { frameWidth: 377, frameHeight: 46 });
this.load.spritesheet('enemyhealthbar60gr', 'assets/ui/actionbar/enemyhealthbar60.png', { frameWidth: 377, frameHeight: 46 });
this.load.spritesheet('enemyhealthbar70gr', 'assets/ui/actionbar/enemyhealthbar70.png', { frameWidth: 377, frameHeight: 46 });
this.load.spritesheet('enemyhealthbar80gr', 'assets/ui/actionbar/enemyhealthbar80.png', { frameWidth: 377, frameHeight: 46 });
this.load.spritesheet('enemyhealthbar90gr', 'assets/ui/actionbar/enemyhealthbar90.png', { frameWidth: 377, frameHeight: 46 });
this.load.spritesheet('enemyhealthbar100gr', 'assets/ui/actionbar/enemyhealthbar100.png', { frameWidth: 377, frameHeight: 46 });
this.load.image('battlebackdrop1', 'assets/ui/battlemodebackdropA.png');
this.load.image('battlebackdrop2', 'assets/ui/battlemodebackdropB.png');
this.load.image('battlebackdrop3', 'assets/ui/battlemodebackdropC.png');
this.load.image('battlebackdrop4', 'assets/ui/battlemodebackdropD.png');
this.load.image('focusbox', 'assets/ui/focusboxui.png');
this.load.image('focuschargebox', 'assets/ui/focuschargeboxui.png');
this.load.image('supportbackbox', 'assets/ui/supportbackbox.png');
this.load.image('xoutbutton', 'assets/ui/xoutbutton.png');
this.load.image('kangname', 'assets/ui/kangnameplate.png');
this.load.image('spinalname', 'assets/ui/spinalnameplate.png');
this.load.image('glaciusname', 'assets/ui/glaciusnameplate.png');
this.load.image('kanoname', 'assets/ui/kanonameplate.png');
this.load.image('sindelname', 'assets/ui/sindelnameplate.png');
this.load.image('kabalname', 'assets/ui/kabalnameplate.png');
this.load.image('jagoname', 'assets/ui/jagonameplate.png');
this.load.image('cyraxname', 'assets/ui/cyraxnameplate.png');
this.load.image('cecilname', 'assets/ui/cecilnameplate.png');
this.load.image('cyanname', 'assets/ui/cyannameplate.png');
this.load.image('golbezname', 'assets/ui/golbeznameplate.png');
this.load.image('kainname', 'assets/ui/kainnameplate.png');
this.load.image('terraname', 'assets/ui/terranameplate.png');
this.load.image('rosaname', 'assets/ui/rosanameplate.png');
this.load.image('mogname', 'assets/ui/mognameplate.png');
this.load.image('kunglaoname', 'assets/ui/kunglaonameplate.png');
this.load.image('sonjaname', 'assets/ui/sonjanameplate.png');
this.load.image('sektorname', 'assets/ui/sektornameplate.png');
this.load.image('comboname', 'assets/ui/combonameplate.png');
this.load.image('orchidname', 'assets/ui/orchidnameplate.png');
this.load.image('rosahealbox', 'assets/ui/rosa/rosahealbox.png');
this.load.image('rosacurebox', 'assets/ui/rosa/rosacurebox.png');
this.load.image('rosafastbox', 'assets/ui/rosa/rosafastbox.png');
this.load.image('rosashellbox', 'assets/ui/rosa/rosashellbox.png');
this.load.image('rosabowbox', 'assets/ui/rosa/rosabowbox.png');
this.load.image('mogmoonbox', 'assets/ui/mog/mogmoonbox.png');
this.load.image('mogpowerbox', 'assets/ui/mog/mogpowerbox.png');
this.load.image('mogdreambox', 'assets/ui/mog/mogdreambox.png');
this.load.image('mogdancebox', 'assets/ui/mog/mogdancebox.png');
this.load.image('mogbullbox', 'assets/ui/mog/mogbullbox.png');
this.load.image('kangflykickbox', 'assets/ui/kang/kangflykickbox.png');
this.load.image('kangfireballbox', 'assets/ui/kang/kangfireballbox.png');
this.load.image('kangbicyclebox', 'assets/ui/kang/kangbicyclebox.png');
this.load.image('kangdragonbox', 'assets/ui/kang/kangdragonbox.png');
this.load.image('kangprayerbox', 'assets/ui/kang/kangprayerbox.png');
this.load.image('spinalslicebox', 'assets/ui/spinal/spinalslicebox.png');
this.load.image('spinalslashbox', 'assets/ui/spinal/spinalslashbox.png');
this.load.image('spinalbashbox', 'assets/ui/spinal/spinalbashbox.png');
this.load.image('spinalspikebox', 'assets/ui/spinal/spinalspikebox.png');
this.load.image('spinalblockbox', 'assets/ui/spinal/spinalblockbox.png');
this.load.image('kanobladesbox', 'assets/ui/kano/kanobladesbox.png');
this.load.image('kanolaserbox', 'assets/ui/kano/kanolaserbox.png');
this.load.image('kanocutbox', 'assets/ui/kano/kanocutbox.png');
this.load.image('kanohellbox', 'assets/ui/kano/kanohellbox.png');
this.load.image('kanokickbox', 'assets/ui/kano/kanokickbox.png');
this.load.image('orchidwheelbox', 'assets/ui/orchid/orchidwheelbox.png');
this.load.image('orchidcatbox', 'assets/ui/orchid/orchidcatbox.png');
this.load.image('orchidbatonbox', 'assets/ui/orchid/orchidbatonbox.png');
this.load.image('orchidfirebabox', 'assets/ui/orchid/orchidfirebabox.png');
this.load.image('orchidfitbox', 'assets/ui/orchid/orchidfitbox.png');
this.load.image('sonjablasterbox', 'assets/ui/sonja/sonjablasterbox.png');
this.load.image('sonjahandstbox', 'assets/ui/sonja/sonjahandstbox.png');
this.load.image('sonjakissbox', 'assets/ui/sonja/sonjakissbox.png');
this.load.image('sonjadancerbox', 'assets/ui/sonja/sonjadancerbox.png');
this.load.image('sonjakicksbox', 'assets/ui/sonja/sonjakicksbox.png');
this.load.image('jagoswordbox', 'assets/ui/jago/jagoswordbox.png');
this.load.image('jagoplasmabox', 'assets/ui/jago/jagoplasmabox.png');
this.load.image('jagorkickbox', 'assets/ui/jago/jagorkickbox.png');
this.load.image('jagofocusbox', 'assets/ui/jago/jagofocusbox.png');
this.load.image('jagostabbox', 'assets/ui/jago/jagostabbox.png');
this.load.image('kunglaohatthrowbox', 'assets/ui/kunglao/kunglaohatthrowbox.png');
this.load.image('kunglaopalmkickbox', 'assets/ui/kunglao/kunglaopalmkickbox.png');
this.load.image('kunglaowhirlbox', 'assets/ui/kunglao/kunglaowhirlbox.png');
this.load.image('kunglaobrimbox', 'assets/ui/kunglao/kunglaobrimbox.png');
this.load.image('kunglaokickbox', 'assets/ui/kunglao/kunglaokickbox.png');
this.load.image('terrafirebox', 'assets/ui/terra/terrafirebox.png');
this.load.image('terraicebox', 'assets/ui/terra/terraicebox.png');
this.load.image('terrawindbox', 'assets/ui/terra/terrawindbox.png');
this.load.image('terraearthbox', 'assets/ui/terra/terraearthbox.png');
this.load.image('terracallbox', 'assets/ui/terra/terracallbox.png');
this.load.image('combopunchbox', 'assets/ui/combo/combopunchbox.png');
this.load.image('combojumpkickbox', 'assets/ui/combo/combojumpkickbox.png');
this.load.image('combogunbox', 'assets/ui/combo/combogunbox.png');
this.load.image('comboslambox', 'assets/ui/combo/comboslambox.png');
this.load.image('combomusclebox', 'assets/ui/combo/combomusclebox.png');

this.load.spritesheet('rosacurespell', 'assets/char/rosa/rosacure.png', { frameWidth: 192, frameHeight: 192 });
this.load.spritesheet('rosahealspell', 'assets/char/rosa/rosaheal.png', { frameWidth: 192, frameHeight: 192 });
this.load.spritesheet('rosafastspell', 'assets/char/rosa/rosafast.png', { frameWidth: 192, frameHeight: 192 });
this.load.spritesheet('rosashellspell', 'assets/char/rosa/rosashell.png', { frameWidth: 192, frameHeight: 192 });

this.load.spritesheet('mogdreamspell', 'assets/char/mog/mogdream.png', { frameWidth: 200, frameHeight: 200 });
this.load.spritesheet('mogdancespell', 'assets/char/mog/mogdance.png', { frameWidth: 500, frameHeight: 500 });
this.load.spritesheet('mogpowerspell', 'assets/char/mog/mogpower.png', { frameWidth: 250, frameHeight: 250 });
this.load.spritesheet('mogmoonspell', 'assets/char/mog/mogmoon.png', { frameWidth: 500, frameHeight: 500 });
this.load.spritesheet('mogbullspell', 'assets/char/mog/mogbull.png', { frameWidth: 213, frameHeight: 175 });

this.load.spritesheet('terrafirespell', 'assets/char/terra/terrafirespell.png', { frameWidth: 183, frameHeight: 257 });
this.load.spritesheet('terrawindspell', 'assets/char/terra/terrawindspell.png', { frameWidth: 335, frameHeight: 298 });
this.load.spritesheet('terraicespell', 'assets/char/terra/terraicespell.png', { frameWidth: 200, frameHeight: 150 });
this.load.spritesheet('terraearthspell', 'assets/char/terra/terraearthspell.png', { frameWidth: 247, frameHeight: 219 });

this.load.spritesheet('kangspear', 'assets/char/kang/kangspear.png', { frameWidth: 48, frameHeight: 110 });
this.load.spritesheet('kangdead', 'assets/char/kang/kangdead.png', { frameWidth: 82, frameHeight: 25 });
this.load.spritesheet('kang', 'assets/char/kang/kangidle.png', { frameWidth: 45, frameHeight: 104 });
this.load.spritesheet('kangwalk', 'assets/char/kang/kangwalk.png', { frameWidth: 55, frameHeight: 102 });
this.load.spritesheet('kangrun', 'assets/char/kang/kangrun.png', { frameWidth: 40, frameHeight: 110 });
this.load.spritesheet('kangflykick', 'assets/char/kang/kangflykick.png', { frameWidth: 68, frameHeight: 110 });
this.load.spritesheet('kangdragon', 'assets/char/kang/kangdragon.png', { frameWidth: 108, frameHeight: 140 });
this.load.spritesheet('kangprayer', 'assets/char/kang/kangprayer.png', { frameWidth: 62, frameHeight: 129 });
this.load.spritesheet('kangprayerbolt', 'assets/char/kang/kangprayerbolt.png', { frameWidth: 200, frameHeight: 500 });
this.load.spritesheet('kangbicycle', 'assets/char/kang/kangbicycle.png', { frameWidth: 65, frameHeight: 110 });
this.load.spritesheet('kangfireball', 'assets/char/kang/kangfireball.png', { frameWidth: 45, frameHeight: 110 });
this.load.spritesheet('kangfireballgr', 'assets/char/kang/kangfireballgr.png', { frameWidth: 75, frameHeight: 30 });
this.load.spritesheet('kangfireballexplode', 'assets/char/kang/kangfireballexplode.png', { frameWidth: 100, frameHeight: 146 });

this.load.spritesheet('spinalspear', 'assets/char/spinal/spinalspear.png', { frameWidth: 87, frameHeight: 173 });
this.load.spritesheet('spinaldead', 'assets/char/spinal/spinaldead.png', { frameWidth: 131, frameHeight: 55 });
this.load.spritesheet('spinal', 'assets/char/spinal/spinalidle.png', { frameWidth: 100, frameHeight: 155 });
this.load.spritesheet('spinalwalk', 'assets/char/spinal/spinalwalk.png', { frameWidth: 112, frameHeight: 155 });
this.load.spritesheet('spinalrun', 'assets/char/spinal/spinalrun.png', { frameWidth: 120, frameHeight: 160 });
this.load.spritesheet('spinalslice', 'assets/char/spinal/spinalslashup.png', { frameWidth: 165, frameHeight: 180 });
this.load.spritesheet('spinalslash', 'assets/char/spinal/spinaldoubleslash.png', { frameWidth: 150, frameHeight: 170 });
this.load.spritesheet('spinalbash', 'assets/char/spinal/spinalshieldbash.png', { frameWidth: 135, frameHeight: 180 });
this.load.spritesheet('spinalspike', 'assets/char/spinal/spinalshieldspike.png', { frameWidth: 135, frameHeight: 155 });
this.load.spritesheet('spinalblock', 'assets/char/spinal/spinalblock.png', { frameWidth: 85, frameHeight: 155 });

this.load.spritesheet('kanospear', 'assets/char/kano/kanospear.png', { frameWidth: 48, frameHeight: 110 });
this.load.spritesheet('kanodead', 'assets/char/kano/kanodead.png', { frameWidth: 76, frameHeight: 33 });
this.load.spritesheet('kano', 'assets/char/kano/kanoidle.png', { frameWidth: 55, frameHeight: 103 });
this.load.spritesheet('kanowalk', 'assets/char/kano/kanowalk.png', { frameWidth: 55, frameHeight: 103 });
this.load.spritesheet('kanorun', 'assets/char/kano/kanorun.png', { frameWidth: 50, frameHeight: 105 });
this.load.spritesheet('kanoblades', 'assets/char/kano/kanoblades.png', { frameWidth: 54.9, frameHeight: 116 });
this.load.spritesheet('kanobladebleed', 'assets/char/kano/kanobladebleed.png', { frameWidth: 150, frameHeight: 150 });
this.load.spritesheet('kanocut', 'assets/char/kano/kanocut.png', { frameWidth: 85, frameHeight: 155 });
this.load.spritesheet('kanolaser', 'assets/char/kano/kanolaser.png', { frameWidth: 45, frameHeight: 105 });
this.load.spritesheet('kanolasergr', 'assets/char/kano/kanolasergr.png', { frameWidth: 86, frameHeight: 7 });
this.load.spritesheet('kanolasersmokegr', 'assets/char/kano/kanolasersmokegr.png', { frameWidth: 30, frameHeight: 35 });
this.load.spritesheet('kanohell', 'assets/char/kano/kanohell.png', { frameWidth: 35, frameHeight: 54 });
this.load.spritesheet('kanokick', 'assets/char/kano/kanokick.png', { frameWidth: 65, frameHeight: 112 });
this.load.spritesheet('kanobladesgr', 'assets/char/kano/kanobladesgr.png', { frameWidth: 60, frameHeight: 39 });
this.load.spritesheet('kanohellheadbreathgr', 'assets/char/kano/kanohellheadbreathgr.png', { frameWidth: 100, frameHeight: 58 });

this.load.spritesheet('sonjaspear', 'assets/char/sonja/sonjaspear.png', { frameWidth: 43, frameHeight: 120 });
this.load.spritesheet('sonjadead', 'assets/char/sonja/sonjadead.png', { frameWidth: 93, frameHeight: 37 });
this.load.spritesheet('sonja', 'assets/char/sonja/sonjaidle.png', { frameWidth: 50, frameHeight: 100 });
this.load.spritesheet('sonjawalk', 'assets/char/sonja/sonjawalk.png', { frameWidth: 50, frameHeight: 100 })
this.load.spritesheet('sonjarun', 'assets/char/sonja/sonjarun.png', { frameWidth: 59.9, frameHeight: 96 });
this.load.spritesheet('sonjablaster', 'assets/char/sonja/sonjablaster.png', { frameWidth: 65, frameHeight: 120 });
this.load.spritesheet('sonjablastergr', 'assets/char/sonja/sonjablastergr.png', { frameWidth: 25, frameHeight: 23 });
this.load.spritesheet('sonjablasterexplode', 'assets/char/sonja/sonjablasterexplode.png', { frameWidth: 150, frameHeight: 52 });
this.load.spritesheet('sonjahandst', 'assets/char/sonja/sonjahandst.png', { frameWidth: 65, frameHeight: 120 });
this.load.spritesheet('sonjakiss', 'assets/char/sonja/sonjakiss.png', { frameWidth: 50, frameHeight: 120 });
this.load.spritesheet('sonjakissgr', 'assets/char/sonja/sonjakissgr.png', { frameWidth: 80, frameHeight: 40 });
this.load.spritesheet('sonjakicks', 'assets/char/sonja/sonjakicks.png', { frameWidth: 55, frameHeight: 120 });
this.load.spritesheet('sonjadancer', 'assets/char/sonja/sonjadancer.png', { frameWidth: 43, frameHeight: 120 });

this.load.spritesheet('orchidspear', 'assets/char/orchid/orchidspear.png', { frameWidth: 72, frameHeight: 117 });
this.load.spritesheet('orchiddead', 'assets/char/orchid/orchiddead.png', { frameWidth: 115, frameHeight: 57 });
this.load.spritesheet('orchid', 'assets/char/orchid/orchididle.png', { frameWidth: 80, frameHeight: 135 });
this.load.spritesheet('orchidwalk', 'assets/char/orchid/orchidwalk.png', { frameWidth: 90, frameHeight: 135 });
this.load.spritesheet('orchidwheel', 'assets/char/orchid/orchidwheel.png', { frameWidth: 155, frameHeight: 151 });
this.load.spritesheet('orchidfireba', 'assets/char/orchid/orchidfireba.png', { frameWidth: 100, frameHeight: 150 });
this.load.spritesheet('orchidfirebaexplode', 'assets/char/orchid/orchidfirebaexplode.png', { frameWidth: 128, frameHeight: 128 });
this.load.spritesheet('orchidbaton', 'assets/char/orchid/orchidbaton.png', { frameWidth: 120, frameHeight: 131 });
this.load.spritesheet('orchidcat', 'assets/char/orchid/orchidcat.png', { frameWidth: 185, frameHeight: 120 });
this.load.spritesheet('orchidfit', 'assets/char/orchid/orchidfit.png', { frameWidth: 90, frameHeight: 140 });
this.load.spritesheet('orchidfirebagr', 'assets/char/orchid/orchidfirebagr.png', { frameWidth: 70, frameHeight: 80 });

this.load.spritesheet('jagospear', 'assets/char/jago/jagospear.png', { frameWidth: 70, frameHeight: 98 });
this.load.spritesheet('jagodead', 'assets/char/jago/jagodead.png', { frameWidth: 88, frameHeight: 51 });
this.load.spritesheet('jago', 'assets/char/jago/jagoidle.png', { frameWidth: 60, frameHeight: 100 });
this.load.spritesheet('jagowalk', 'assets/char/jago/jagowalk.png', { frameWidth: 60, frameHeight: 100 });
this.load.spritesheet('jagosword', 'assets/char/jago/jagosword.png', { frameWidth: 79.7, frameHeight: 120 });
this.load.spritesheet('jagostab', 'assets/char/jago/jagostab.png', { frameWidth: 107, frameHeight: 87 });
this.load.spritesheet('jagoplasma', 'assets/char/jago/jagoplasma.png', { frameWidth: 70, frameHeight: 100 });
this.load.spritesheet('jagoplasmagr', 'assets/char/jago/jagoplasmagr.png', { frameWidth: 45, frameHeight: 35 });
this.load.spritesheet('jagorkick', 'assets/char/jago/jagorkick.png', { frameWidth: 85, frameHeight: 100 });
this.load.spritesheet('jagofocus', 'assets/char/jago/jagofocus.png', { frameWidth: 65, frameHeight: 95 });

this.load.spritesheet('kunglaospear', 'assets/char/kunglao/kunglaospear.png', { frameWidth: 48, frameHeight: 112 });
this.load.spritesheet('kunglaodead', 'assets/char/kunglao/kunglaodead.png', { frameWidth: 88, frameHeight: 44 });
this.load.spritesheet('kunglao', 'assets/char/kunglao/kunglaoidle.png', { frameWidth: 50, frameHeight: 110 });
this.load.spritesheet('kunglaowalk', 'assets/char/kunglao/kunglaowalk.png', { frameWidth: 50, frameHeight: 108 });
this.load.spritesheet('kunglaorun', 'assets/char/kunglao/kunglaorun.png', { frameWidth: 52, frameHeight: 111 });
this.load.spritesheet('kunglaohatthrow', 'assets/char/kunglao/kunglaohatthrow.png', { frameWidth: 65, frameHeight: 115 });
this.load.spritesheet('kunglaopalmkick', 'assets/char/kunglao/kunglaopalmkick.png', { frameWidth: 75, frameHeight: 105 });
this.load.spritesheet('kunglaowhirl', 'assets/char/kunglao/kunglaowhirl.png', { frameWidth: 45, frameHeight: 110 });
this.load.spritesheet('kunglaokick', 'assets/char/kunglao/kunglaokick.png', { frameWidth: 70, frameHeight: 110 });
this.load.spritesheet('kunglaobrim', 'assets/char/kunglao/kunglaobrim.png', { frameWidth: 45, frameHeight: 100 });
this.load.spritesheet('kunglaohatthrowgr', 'assets/char/kunglao/kunglaohatthrowgr.png', { frameWidth: 45, frameHeight: 45 });

this.load.spritesheet('glaciusdead', 'assets/char/glaciusdead.png', { frameWidth: 148, frameHeight: 62 });
this.load.spritesheet('glacius', 'assets/char/glaciusidle.png', { frameWidth: 90, frameHeight: 145 });
this.load.spritesheet('glaciuswalk', 'assets/char/glaciuswalk.png', { frameWidth: 100, frameHeight: 140 });


this.load.spritesheet('sindel', 'assets/char/sindel/sindelidle.png', { frameWidth: 55, frameHeight: 103 });
this.load.spritesheet('sindelwalk', 'assets/char/sindel/sindelwalk.png', { frameWidth: 55, frameHeight: 103 });
this.load.spritesheet('sindelflamebreath', 'assets/char/sindel/sindelflamebreath.png', { frameWidth: 50, frameHeight: 110 });
this.load.spritesheet('sindelflyup', 'assets/char/sindel/sindelflyup.png', { frameWidth: 65, frameHeight: 110 });
this.load.spritesheet('sindelscream', 'assets/char/sindel/sindelscream.png', { frameWidth: 50, frameHeight: 110 });
this.load.spritesheet('sindelhairwhip', 'assets/char/sindel/sindelhairwhip.png', { frameWidth: 140, frameHeight: 130 });
this.load.spritesheet('sindelflymove', 'assets/char/sindel/sindelflymove.png', { frameWidth: 60, frameHeight: 110 });
this.load.spritesheet('sindelflamebreathgr', 'assets/char/sindel/sindelflamebreathgr.png', { frameWidth: 80, frameHeight: 22 });
this.load.spritesheet('sindelflybreathgr', 'assets/char/sindel/sindelflybreathgr.png', { frameWidth: 60, frameHeight:75 });
this.load.spritesheet('sindelscreamgr', 'assets/char/sindel/sindelscreamgr.png', { frameWidth: 50, frameHeight:85 });

this.load.spritesheet('kabaldead', 'assets/char/kabaldead.png', { frameWidth: 97, frameHeight: 37 });
this.load.spritesheet('kabal', 'assets/char/kabalidle.png', { frameWidth: 45, frameHeight: 110 });
this.load.spritesheet('kabalwalk', 'assets/char/kabalwalk.png', { frameWidth: 45, frameHeight: 110 });

this.load.spritesheet('cyrax', 'assets/char/cyraxidle.png', { frameWidth: 51, frameHeight: 103 });
this.load.spritesheet('cyraxwalk', 'assets/char/cyraxwalk.png', { frameWidth: 59, frameHeight: 103 });
this.load.spritesheet('cecil', 'assets/char/spritesheets/cecilsprite.png', { frameWidth: 95, frameHeight: 95 });

this.load.spritesheet('rosaspear', 'assets/char/rosa/rosaspear.png', { frameWidth: 75, frameHeight: 105 });
this.load.spritesheet('rosa', 'assets/char/rosa/rosasprite.png', { frameWidth: 95, frameHeight: 95 });

this.load.spritesheet('cyan', 'assets/char/spritesheets/cyansprite.png', { frameWidth: 95, frameHeight: 95 });
this.load.spritesheet('golbez', 'assets/char/spritesheets/golbezsprite.png', { frameWidth: 95, frameHeight: 95 });
this.load.spritesheet('kain', 'assets/char/spritesheets/kainsprite.png', { frameWidth: 95, frameHeight: 95 });

this.load.spritesheet('terraspear', 'assets/char/terra/terraspear.png', { frameWidth: 75, frameHeight: 105 });
this.load.spritesheet('terra', 'assets/char/terra/terrasprite.png', { frameWidth: 95, frameHeight: 95 });

this.load.spritesheet('mogspear', 'assets/char/mog/mogspear.png', { frameWidth: 75, frameHeight: 105 });
this.load.spritesheet('mog', 'assets/char/mog/mogsprite.png', { frameWidth: 95, frameHeight: 95 });

this.load.spritesheet('sektordead', 'assets/char/sektordead.png', { frameWidth: 87, frameHeight: 41 });
this.load.spritesheet('sektor', 'assets/char/sektoridle.png', { frameWidth: 55, frameHeight: 103 });
this.load.spritesheet('sektorwalk', 'assets/char/sektorwalk.png', { frameWidth: 55, frameHeight: 103 });

this.load.spritesheet('combodead', 'assets/char/combo/combodead.png', { frameWidth: 156, frameHeight: 65 });
this.load.spritesheet('combo', 'assets/char/combo/comboidle.png', { frameWidth: 70, frameHeight: 135 });
this.load.spritesheet('combowalk', 'assets/char/combo/combowalk.png', { frameWidth: 70, frameHeight: 135 });
this.load.spritesheet('comborun', 'assets/char/combo/comborun.png', { frameWidth: 120, frameHeight: 135 });
this.load.spritesheet('combopunch', 'assets/char/combo/combopunch.png', { frameWidth: 125, frameHeight: 141 });
this.load.spritesheet('combojumpkick', 'assets/char/combo/combojumpkick.png', { frameWidth: 120, frameHeight: 113 });
this.load.spritesheet('combogun', 'assets/char/combo/combogun.png', { frameWidth: 120, frameHeight: 180 });
this.load.spritesheet('comboslam', 'assets/char/combo/comboslam.png', { frameWidth: 120, frameHeight: 120 });
this.load.spritesheet('combomuscle', 'assets/char/combo/combomuscle.png', { frameWidth: 110, frameHeight: 155 });

// subzero
this.load.image('subzeronameplate', 'assets/lair/kombat/subzero/subzeronameplate.png');
this.load.spritesheet('subzeroready', 'assets/lair/kombat/subzero/subzeroready.png', { frameWidth: 189, frameHeight: 385 });
this.load.spritesheet('subzeroiceblast', 'assets/lair/kombat/subzero/subzeroiceblast.png', { frameWidth: 330, frameHeight: 415 });
this.load.spritesheet('subzerowalk', 'assets/lair/kombat/subzero/subzerowalk.png', { frameWidth: 318, frameHeight: 415 });
this.load.spritesheet('subzeroslide', 'assets/lair/kombat/subzero/subzeroslide.png', { frameWidth: 377, frameHeight: 415 });
this.load.spritesheet('subzeroiceblastgr', 'assets/lair/kombat/subzero/subzeroiceblastgr.png', { frameWidth: 100, frameHeight: 100 });
//

// scorpion
   this.load.image('scorpionnameplate', 'assets/lair/kombat/scorpion/scorpionnameplate.png');
   this.load.spritesheet('scorpionwalk', 'assets/lair/kombat/scorpion/scorpionwalk2.png', { frameWidth: 222, frameHeight: 355 });
    this.load.spritesheet('scorpionready', 'assets/lair/kombat/scorpion/scorpionready.png', { frameWidth: 248, frameHeight: 385 });
    this.load.spritesheet('scorpionspear', 'assets/lair/kombat/scorpion/scorpionspear.png', { frameWidth: 410, frameHeight: 428 });
    this.load.spritesheet('scorpionspeargr', 'assets/lair/kombat/scorpion/scorpionspeargr.png', { frameWidth: 584, frameHeight: 104 });
    this.load.spritesheet('scorpionpunch', 'assets/lair/kombat/scorpion/scorpionpunch.png', { frameWidth: 410, frameHeight: 467 });
    

//loadsounds
//sounds
     this.load.audio('storms', [
        'assets/sound/storms.mp3'
    ]);

    this.load.audio('rosacuresound', [
        'assets/sound/rosa-curesound.mp3'
    ]);
    this.load.audio('rosahealsound', [
        'assets/sound/rosa-healsound.mp3'
    ]);
    this.load.audio('rosafastsound', [
        'assets/sound/rosa-fastsound.mp3'
    ]);
    this.load.audio('rosashellsound', [
        'assets/sound/rosa-shellsound.mp3'
    ]);
    this.load.audio('mogpowersound', [
        'assets/sound/mog-powersound.mp3'
    ]);
    this.load.audio('mogdancesound', [
        'assets/sound/mog-dancesound.mp3'
    ]);
    this.load.audio('terrafiresound', [
        'assets/sound/terra-firespellsound.mp3'
    ]);
    this.load.audio('terrawindsound', [
        'assets/sound/terra-windspellsound.mp3'
    ]);
    this.load.audio('terraearthsound', [
        'assets/sound/terra-earthspellsound.mp3'
    ]);

    
    this.load.audio('orchidlasaken', [
        'assets/sound/orchid-lasakin.mp3'
    ]);
    this.load.audio('orchidcat', [
        'assets/sound/orchid-cat.mp3'
    ]);
     this.load.audio('orchidfitvoice', [
        'assets/sound/orchid-fitvoice.mp3'
    ]);
    this.load.audio('orchidbatonvoice', [
        'assets/sound/orchid-batonvoice.mp3'
    ]);
    this.load.audio('orchidwheelvoice', [
        'assets/sound/orchid-wheelvoice.mp3'
    ]);

    this.load.audio('kanoblade', [
        'assets/sound/kano-blades.mp3'
    ]);
    this.load.audio('kanobladevoice', [
        'assets/sound/kano-bladevoice.mp3'
    ]);
     this.load.audio('kanocutvoice', [
        'assets/sound/kano-cutvoice.mp3'
    ]);
    this.load.audio('kanohellvoice', [
        'assets/sound/kano-hellvoice.mp3'
    ]);
    this.load.audio('kanokickvoice', [
        'assets/sound/kano-kickvoice.mp3'
    ]);
   

 
    this.load.audio('jagoplasmavoice', [
        'assets/sound/jago-plasmavoice.mp3'
    ]);
    this.load.audio('jagoswordvoice', [
        'assets/sound/jago-swordvoice.mp3'
    ]);
    this.load.audio('jagofocusvoice', [
        'assets/sound/jago-focusvoice.mp3'
    ]);
    
    this.load.audio('kunglaohatthrowsound', [
        'assets/sound/kunglao-hatthrowsound.mp3'
    ]);
    this.load.audio('kunglaowhirlvoice', [
        'assets/sound/kunglao-whirlvoice.mp3'
    ]);


    this.load.audio('kangflykick', [
        'assets/sound/kang-flykick.mp3'
    ]);
    this.load.audio('kangbicyclekick', [
        'assets/sound/kang-bicyclekick.mp3'
    ]);
    this.load.audio('kangfireball', [
        'assets/sound/kang-fireball.mp3'
    ]); 

   this.load.audio('spinalslashvoice', [
        'assets/sound/spinal-slashvoice.mp3'
    ]);
   this.load.audio('spinalslicevoice', [
        'assets/sound/spinal-slicevoice.mp3'
    ]);
    
    this.load.audio('spinalbashvoice', [
        'assets/sound/spinal-bashvoice.mp3'
    ]);

    this.load.audio('sonjablaster', [
        'assets/sound/sonja-blastersound.mp3'
    ]);
    this.load.audio('sonjablastervoice', [
        'assets/sound/sonja-blastervoice.mp3'
    ]);
    this.load.audio('sonjahandstsound', [
        'assets/sound/sonja-handst.mp3'
    ]);


  
}
//createstuff
function create ()
{

this.input.setDefaultCursor('url(assets/ui/fmpointer.cur), pointer');

var rosacuresound = this.sound.add('rosacuresound',{ loop: false });
var rosahealsound = this.sound.add('rosahealsound',{ loop: false });
var rosafastsound = this.sound.add('rosafastsound',{ loop: false });
var rosashellsound = this.sound.add('rosashellsound',{ loop: false });
var mogpowersound = this.sound.add('mogpowersound',{ loop: false });
var mogdancesound = this.sound.add('mogdancesound',{ loop: false });
var terrafiresound = this.sound.add('terrafiresound',{ loop: false });
var terrawindsound = this.sound.add('terrawindsound',{ loop: false });
var terraearthsound = this.sound.add('terraearthsound',{ loop: false });
var orchidlasakensound = this.sound.add('orchidlasaken',{ loop: false });
var orchidcatsound = this.sound.add('orchidcat',{ loop: false });
var orchidfitvoicesound = this.sound.add('orchidfitvoice',{ loop: false });
var orchidbatonvoicesound = this.sound.add('orchidbatonvoice',{ loop: false });
var orchidwheelvoicesound = this.sound.add('orchidwheelvoice',{ loop: false });
var kanobladesound = this.sound.add('kanoblade',{ loop: false });
var kanobladevoicesound = this.sound.add('kanobladevoice',{ loop: false });
var kanocutvoicesound = this.sound.add('kanocutvoice',{ loop: false });
var kanohellvoicesound = this.sound.add('kanohellvoice',{ loop: false });
var kanokickvoicesound = this.sound.add('kanokickvoice',{ loop: false });
var jagoplasmavoicesound = this.sound.add('jagoplasmavoice',{ loop: false });
var jagoswordvoicesound = this.sound.add('jagoswordvoice',{ loop: false });
var jagofocusvoicesound = this.sound.add('jagofocusvoice',{ loop: false });
var kangflykicksound = this.sound.add('kangflykick',{ loop: false });
var kangbicyclekicksound = this.sound.add('kangbicyclekick',{ loop: false });
var kangfireballsound = this.sound.add('kangfireball',{ loop: false });
var spinalslashvoicesound = this.sound.add('spinalslashvoice',{ loop: false });
var spinalslicevoicesound = this.sound.add('spinalslicevoice',{ loop: false });
var spinalbashvoicesound = this.sound.add('spinalbashvoice',{ loop: false });
var kunglaohatthrowsound = this.sound.add('kunglaohatthrowsound',{ loop: false });
var kunglaowhirlvoicesound = this.sound.add('kunglaowhirlvoice',{ loop: false });
var sonjablastervoicesound = this.sound.add('sonjablastervoice',{ loop: false });
var sonjablastersound = this.sound.add('sonjablaster',{ loop: false });
var sonjahandstsound = this.sound.add('sonjahandstsound',{ loop: false });

var stormsong = this.sound.add('storms',{ loop: true });


stormsong.play({
        seek: 35.550
    });

//boxovers
//overs
//gameobj
//mouseovers
this.input.setPollAlways();
        this.input.on('gameobjectover', function (pointer, gameObject) {
            if (battlemode == false){
            if (gameObject == support1uibox){
            lairstatscreenshow = true
            if (lairstatscreenselected == false){
           lairstatscreenname = activesupport1name
            setscreenstats()
           }
           }

            if (gameObject == support2uibox){
            lairstatscreenshow = true
            if (lairstatscreenselected == false){
            lairstatscreenname = activesupport2name
            setscreenstats()       
         }
         }

            if (gameObject == leader1uibox){
            lairstatscreenshow = true
            if (lairstatscreenselected == false){
            lairstatscreenname = activeleader1name
            setscreenstats()
         }
         }

         if (gameObject == leader2uibox){
            lairstatscreenshow = true
            if (lairstatscreenselected == false){
            lairstatscreenname = activeleader2name
            setscreenstats()       
         }
         }

          if (gameObject == fighter1uibox){
            lairstatscreenshow = true
            if (lairstatscreenselected == false){
            lairstatscreenname = activefighter1name
            setscreenstats()       
         }
         }

         if (gameObject == fighter2uibox){
            lairstatscreenshow = true
            if (lairstatscreenselected == false){
            lairstatscreenname = activefighter2name
            setscreenstats()       
         }
         }
         if (gameObject == fighter3uibox){
            lairstatscreenshow = true
            if (lairstatscreenselected == false){
            lairstatscreenname = activefighter3name
            setscreenstats()       
         }
         }
         if (gameObject == fighter4uibox){
            lairstatscreenshow = true
            if (lairstatscreenselected == false){
            lairstatscreenname = activefighter4name
            setscreenstats()       
         }
         }
         if (gameObject == fighter5uibox){
            lairstatscreenshow = true
            if (lairstatscreenselected == false){
            lairstatscreenname = activefighter5name
            setscreenstats()       
         }
         }
         if (gameObject == fighter6uibox){
            lairstatscreenshow = true
            if (lairstatscreenselected == false){
            lairstatscreenname = activefighter6name
            setscreenstats()       
         }
         } 
        if (gameObject == statscreenuibox1){
            lairstatscreenshowbasicstatsoff = true
            if (lairstatscreenname == 'Rosa'){
                statbuttoninfo = 'rosabutton1'
                setstatbuttoninfo()
        }
        if (lairstatscreenname == 'Mog'){
                statbuttoninfo = 'mogbutton1'
                setstatbuttoninfo()
        }
        }
        if (gameObject == statscreenuibox2){
            lairstatscreenshowbasicstatsoff = true
            if (lairstatscreenname == 'Rosa'){
                statbuttoninfo = 'rosabutton2'
                setstatbuttoninfo()
        }
         if (lairstatscreenname == 'Mog'){
                statbuttoninfo = 'mogbutton2'
                setstatbuttoninfo()
        }
        }
        if (gameObject == statscreenuibox3){
            lairstatscreenshowbasicstatsoff = true
            if (lairstatscreenname == 'Rosa'){
                statbuttoninfo = 'rosabutton3'
                setstatbuttoninfo()
        }
           if (lairstatscreenname == 'Mog'){
                statbuttoninfo = 'mogbutton3'
                setstatbuttoninfo()
        }
        }
        if (gameObject == statscreenuibox4){
            lairstatscreenshowbasicstatsoff = true
            if (lairstatscreenname == 'Rosa'){
                statbuttoninfo = 'rosabutton4'
                setstatbuttoninfo()
        }
           if (lairstatscreenname == 'Mog'){
                statbuttoninfo = 'mogbutton4'
                setstatbuttoninfo()
        }

        }
        if (gameObject == statscreenuibox5){
            lairstatscreenshowbasicstatsoff = true
            if (lairstatscreenname == 'Rosa'){
                statbuttoninfo = 'rosabutton5'
                setstatbuttoninfo()
        }
            if (lairstatscreenname == 'Mog'){
                statbuttoninfo = 'mogbutton5'
                setstatbuttoninfo()
        }
        }
        }
         if (battlemode == true){
         if (gameObject == leader1focuschargebox1){
        leader1focuschargebox1.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        }
        if (gameObject == leader1focuschargebox2){
        leader1focuschargebox1.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        leader1focuschargebox2.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);

        }
        if (gameObject == leader1focuschargebox3){
        leader1focuschargebox1.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        leader1focuschargebox2.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        leader1focuschargebox3.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        }
        if (gameObject == leader1focuschargebox4){
        leader1focuschargebox1.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        leader1focuschargebox2.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        leader1focuschargebox3.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        leader1focuschargebox4.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        }
        if (gameObject == leader1focuschargebox5){
        leader1focuschargebox1.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        leader1focuschargebox2.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        leader1focuschargebox3.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        leader1focuschargebox4.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        leader1focuschargebox5.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        }

          if (gameObject == leader2focuschargebox1){
        leader2focuschargebox1.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        }
        if (gameObject == leader2focuschargebox2){
        leader2focuschargebox1.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        leader2focuschargebox2.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);

        }
        if (gameObject == leader2focuschargebox3){
        leader2focuschargebox1.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        leader2focuschargebox2.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        leader2focuschargebox3.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        }
        if (gameObject == leader2focuschargebox4){
        leader2focuschargebox1.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        leader2focuschargebox2.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        leader2focuschargebox3.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        leader2focuschargebox4.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        }
        if (gameObject == leader2focuschargebox5){
        leader2focuschargebox1.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        leader2focuschargebox2.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        leader2focuschargebox3.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        leader2focuschargebox4.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        leader2focuschargebox5.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        }
        if (gameObject == support2focuschargebox1){
        support2focuschargebox1.setTintFill(0xffff00, 0x00FF00, 0x00FF00, 0xff0000);
        }
        if (gameObject == support2focuschargebox2){
        support2focuschargebox1.setTintFill(0xffff00, 0x00FF00, 0x00FF00, 0xff0000);
        support2focuschargebox2.setTintFill(0xffff00, 0x00FF00, 0x00FF00, 0xff0000);

        }
        if (gameObject == support2focuschargebox3){
        support2focuschargebox1.setTintFill(0xffff00, 0x00FF00, 0x00FF00, 0xff0000);
        support2focuschargebox2.setTintFill(0xffff00, 0x00FF00, 0x00FF00, 0xff0000);
        support2focuschargebox3.setTintFill(0xffff00, 0x00FF00, 0x00FF00, 0xff0000);
        }
        if (gameObject == support2focuschargebox4){
        support2focuschargebox1.setTintFill(0xffff00, 0x00FF00, 0x00FF00, 0xff0000);
        support2focuschargebox2.setTintFill(0xffff00, 0x00FF00, 0x00FF00, 0xff0000);
        support2focuschargebox3.setTintFill(0xffff00, 0x00FF00, 0x00FF00, 0xff0000);
        support2focuschargebox4.setTintFill(0xffff00, 0x00FF00, 0x00FF00, 0xff0000);
        }
        if (gameObject == support2focuschargebox5){
        support2focuschargebox1.setTintFill(0xffff00, 0x00FF00, 0x00FF00, 0xff0000);
        support2focuschargebox2.setTintFill(0xffff00, 0x00FF00, 0x00FF00, 0xff0000);
        support2focuschargebox3.setTintFill(0xffff00, 0x00FF00, 0x00FF00, 0xff0000);
        support2focuschargebox4.setTintFill(0xffff00, 0x00FF00, 0x00FF00, 0xff0000);
        support2focuschargebox5.setTintFill(0xffff00, 0x00FF00, 0x00FF00, 0xff0000);
        }
        if (gameObject == support1focuschargebox1){
        support1focuschargebox1.setTintFill(0xffff00, 0x00FF00, 0x00FF00, 0xff0000);
        }
        if (gameObject == support1focuschargebox2){
        support1focuschargebox1.setTintFill(0xffff00, 0x00FF00, 0x00FF00, 0xff0000);
        support1focuschargebox2.setTintFill(0xffff00, 0x00FF00, 0x00FF00, 0xff0000);

        }
        if (gameObject == support1focuschargebox3){
        support1focuschargebox1.setTintFill(0xffff00, 0x00FF00, 0x00FF00, 0xff0000);
        support1focuschargebox2.setTintFill(0xffff00, 0x00FF00, 0x00FF00, 0xff0000);
        support1focuschargebox3.setTintFill(0xffff00, 0x00FF00, 0x00FF00, 0xff0000);
        }
        if (gameObject == support1focuschargebox4){
        support1focuschargebox1.setTintFill(0xffff00, 0x00FF00, 0x00FF00, 0xff0000);
        support1focuschargebox2.setTintFill(0xffff00, 0x00FF00, 0x00FF00, 0xff0000);
        support1focuschargebox3.setTintFill(0xffff00, 0x00FF00, 0x00FF00, 0xff0000);
        support1focuschargebox4.setTintFill(0xffff00, 0x00FF00, 0x00FF00, 0xff0000);
        }
        if (gameObject == support1focuschargebox5){
        support1focuschargebox1.setTintFill(0xffff00, 0x00FF00, 0x00FF00, 0xff0000);
        support1focuschargebox2.setTintFill(0xffff00, 0x00FF00, 0x00FF00, 0xff0000);
        support1focuschargebox3.setTintFill(0xffff00, 0x00FF00, 0x00FF00, 0xff0000);
        support1focuschargebox4.setTintFill(0xffff00, 0x00FF00, 0x00FF00, 0xff0000);
        support1focuschargebox5.setTintFill(0xffff00, 0x00FF00, 0x00FF00, 0xff0000);
        }
        if (gameObject == fighter1focuschargebox1){
        fighter1focuschargebox1.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        }
        if (gameObject == fighter1focuschargebox2){
        fighter1focuschargebox1.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        fighter1focuschargebox2.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);

        }
        if (gameObject == fighter1focuschargebox3){
        fighter1focuschargebox1.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        fighter1focuschargebox2.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        fighter1focuschargebox3.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        }
        if (gameObject == fighter1focuschargebox4){
        fighter1focuschargebox1.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        fighter1focuschargebox2.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        fighter1focuschargebox3.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        fighter1focuschargebox4.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        }
        if (gameObject == fighter1focuschargebox5){
        fighter1focuschargebox1.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        fighter1focuschargebox2.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        fighter1focuschargebox3.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        fighter1focuschargebox4.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        fighter1focuschargebox5.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        }


        if (gameObject == fighter2focuschargebox1){
        fighter2focuschargebox1.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        }
        if (gameObject == fighter2focuschargebox2){
        fighter2focuschargebox1.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        fighter2focuschargebox2.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);

        }
        if (gameObject == fighter2focuschargebox3){
        fighter2focuschargebox1.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        fighter2focuschargebox2.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        fighter2focuschargebox3.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        }
        if (gameObject == fighter2focuschargebox4){
        fighter2focuschargebox1.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        fighter2focuschargebox2.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        fighter2focuschargebox3.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        fighter2focuschargebox4.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        }
        if (gameObject == fighter2focuschargebox5){
        fighter2focuschargebox1.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        fighter2focuschargebox2.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        fighter2focuschargebox3.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        fighter2focuschargebox4.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        fighter2focuschargebox5.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        }
        
        if (gameObject == fighter3focuschargebox1){
        fighter3focuschargebox1.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        }
        if (gameObject == fighter3focuschargebox2){
        fighter3focuschargebox1.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        fighter3focuschargebox2.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);

        }
        if (gameObject == fighter3focuschargebox3){
        fighter3focuschargebox1.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        fighter3focuschargebox2.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        fighter3focuschargebox3.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        }
        if (gameObject == fighter3focuschargebox4){
        fighter3focuschargebox1.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        fighter3focuschargebox2.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        fighter3focuschargebox3.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        fighter3focuschargebox4.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        }
        if (gameObject == fighter3focuschargebox5){
        fighter3focuschargebox1.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        fighter3focuschargebox2.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        fighter3focuschargebox3.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        fighter3focuschargebox4.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        fighter3focuschargebox5.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        }


        if (gameObject == fighter4focuschargebox1){
        fighter4focuschargebox1.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        }
        if (gameObject == fighter4focuschargebox2){
        fighter4focuschargebox1.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        fighter4focuschargebox2.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);

        }
        if (gameObject == fighter4focuschargebox3){
        fighter4focuschargebox1.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        fighter4focuschargebox2.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        fighter4focuschargebox3.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        }
        if (gameObject == fighter4focuschargebox4){
        fighter4focuschargebox1.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        fighter4focuschargebox2.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        fighter4focuschargebox3.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        fighter4focuschargebox4.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        }
        if (gameObject == fighter4focuschargebox5){
        fighter4focuschargebox1.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        fighter4focuschargebox2.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        fighter4focuschargebox3.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        fighter4focuschargebox4.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        fighter4focuschargebox5.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        }

        if (gameObject == fighter5focuschargebox1){
        fighter5focuschargebox1.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        }
        if (gameObject == fighter5focuschargebox2){
        fighter5focuschargebox1.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        fighter5focuschargebox2.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);

        }
        if (gameObject == fighter5focuschargebox3){
        fighter5focuschargebox1.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        fighter5focuschargebox2.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        fighter5focuschargebox3.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        }
        if (gameObject == fighter5focuschargebox4){
        fighter5focuschargebox1.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        fighter5focuschargebox2.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        fighter5focuschargebox3.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        fighter5focuschargebox4.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        }
        if (gameObject == fighter5focuschargebox5){
        fighter5focuschargebox1.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        fighter5focuschargebox2.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        fighter5focuschargebox3.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        fighter5focuschargebox4.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        fighter5focuschargebox5.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        }
        if (gameObject == fighter6focuschargebox1){
        fighter6focuschargebox1.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        }
        if (gameObject == fighter6focuschargebox2){
        fighter6focuschargebox1.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        fighter6focuschargebox2.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);

        }
        if (gameObject == fighter6focuschargebox3){
        fighter6focuschargebox1.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        fighter6focuschargebox2.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        fighter6focuschargebox3.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        }
        if (gameObject == fighter6focuschargebox4){
        fighter6focuschargebox1.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        fighter6focuschargebox2.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        fighter6focuschargebox3.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        fighter6focuschargebox4.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        }
        if (gameObject == fighter6focuschargebox5){
        fighter6focuschargebox1.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        fighter6focuschargebox2.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        fighter6focuschargebox3.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        fighter6focuschargebox4.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        fighter6focuschargebox5.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xff0000);
        }

               
        if (gameObject == support1focusbox){
        support1focusbox.setTintFill(0xffff00, 0xffff00, 0xff0000, 0xff0000);
        support1focuschargeon =  true
        support1chargetxt.visible = true
        }
        if (gameObject == support2focusbox){
        support2focusbox.setTintFill(0xffff00, 0xffff00, 0xff0000, 0xff0000);
        support2focuschargeon =  true
        support2chargetxt.visible = true
        }
        if (gameObject == leader1focusbox){
        leader1focusbox.setTintFill(0xffff00, 0xffff00, 0xff0000, 0xff0000);
        leader1focuschargeon =  true
        leader1chargetxt.visible = true
        }
        if (gameObject == leader2focusbox){
        leader2focusbox.setTintFill(0xffff00, 0xffff00, 0xff0000, 0xff0000);
        leader2focuschargeon =  true
        leader2chargetxt.visible = true
        }
        if (gameObject == fighter1focusbox){
        fighter1focusbox.setTintFill(0xffff00, 0xffff00, 0xff0000, 0xff0000);
        fighter1focuschargeon =  true
        fighter1chargetxt.visible = true
        }
        if (gameObject == fighter2focusbox){
        fighter2focusbox.setTintFill(0xffff00, 0xffff00, 0xff0000, 0xff0000);
        fighter2focuschargeon =  true
        fighter2chargetxt.visible = true
        }
        if (gameObject == fighter3focusbox){
        fighter3focusbox.setTintFill(0xffff00, 0xffff00, 0xff0000, 0xff0000);
        fighter3focuschargeon =  true
        fighter3chargetxt.visible = true
        }
        if (gameObject == fighter4focusbox){
        fighter4focusbox.setTintFill(0xffff00, 0xffff00, 0xff0000, 0xff0000);
        fighter4focuschargeon =  true      
        fighter4chargetxt.visible = true  
        }
        if (gameObject == fighter5focusbox){
        fighter5focusbox.setTintFill(0xffff00, 0xffff00, 0xff0000, 0xff0000);
        fighter5focuschargeon =  true  
        fighter5chargetxt.visible = true
        }
        if (gameObject == fighter6focusbox){
        fighter6focusbox.setTintFill(0xffff00, 0xffff00, 0xff0000, 0xff0000);
        fighter6focuschargeon =  true  
        fighter6chargetxt.visible = true
        }
        }

       if (kangactive == true) {
       if (gameObject == kang){
       kang.setTint(0xff00ff);
       }
       }
       if (spinalactive == true) {
       if (gameObject == spinal){
       spinal.setTint(0xff00ff);
       }
       }
       if (comboactive == true) {
       if (gameObject == combo){
       combo.setTint(0xff00ff);
       }
       }
       if (gameObject == kano){
       kano.setTint(0xff00ff);
       }
       if (gameObject == orchid){
       orchid.setTint(0xff00ff);
       }
       if (gameObject == jago){
       jago.setTint(0xff00ff);
       }
       if (gameObject == kunglao){
       kunglao.setTint(0xff00ff);
       } 
       if (gameObject == terra){
       terra.setTint(0xff00ff);
       } 
        if (gameObject == sonja){
       sonja.setTint(0xff00ff);
       } 
       if (gameObject == rosa){
       rosa.setTint(0xff00ff);
       } 
      if (gameObject == mog){
       mog.setTint(0xff00ff);
       } 
  });
      //objectoff
      //mouseoff

        this.input.on('gameobjectout', function (pointer, gameObject) {
        
        if (battlemode == false){
        if (gameObject == support1uibox){
            if (lairstatscreenselected == false){
            lairstatscreenshow = false
            hidestatbuttons()
        }
        }

        if (gameObject == support2uibox){
        if (lairstatscreenselected == false){
            lairstatscreenshow = false
            hidestatbuttons()
        }
        }
        if (gameObject == leader1uibox){
        if (lairstatscreenselected == false){
            lairstatscreenshow = false
            hidestatbuttons()
        }
        }
        if (gameObject == leader2uibox){
        if (lairstatscreenselected == false){
            lairstatscreenshow = false
            hidestatbuttons()
        }
        }
        if (gameObject == fighter1uibox){
        if (lairstatscreenselected == false){
            lairstatscreenshow = false
            hidestatbuttons()
        }
        }
        if (gameObject == fighter2uibox){
        if (lairstatscreenselected == false){
            lairstatscreenshow = false
            hidestatbuttons()
        }
        }
        if (gameObject == fighter3uibox){
        if (lairstatscreenselected == false){
            lairstatscreenshow = false
            hidestatbuttons()
        }
        }
        if (gameObject == fighter4uibox){
        if (lairstatscreenselected == false){
            lairstatscreenshow = false
            hidestatbuttons()
        }
        }
        if (gameObject == fighter5uibox){
        if (lairstatscreenselected == false){
            lairstatscreenshow = false
            hidestatbuttons()
        }
        }
        if (gameObject == fighter6uibox){
        if (lairstatscreenselected == false){
            lairstatscreenshow = false
            hidestatbuttons()
        }
        }
        if (gameObject == statscreenuibox1){
            lairstatscreenshowbasicstatsoff = false
            removestatbuttoninfo()
        }
        if (gameObject == statscreenuibox2){
            lairstatscreenshowbasicstatsoff = false
            removestatbuttoninfo()
        }
        if (gameObject == statscreenuibox3){
            lairstatscreenshowbasicstatsoff = false
            removestatbuttoninfo()
        }
        if (gameObject == statscreenuibox4){
            lairstatscreenshowbasicstatsoff = false
            removestatbuttoninfo()
        }
        if (gameObject == statscreenuibox5){
            lairstatscreenshowbasicstatsoff = false
            removestatbuttoninfo()
        }
    }
        
        if (battlemode == true){
        if (gameObject == leader1focuschargebox1){
        if (leader1charge1active == false){
        leader1focuschargebox1.clearTint();
        }
        }

        if (gameObject == leader1focuschargebox2){
        if (leader1charge2active == false){
        leader1focuschargebox1.clearTint();
        leader1focuschargebox2.clearTint();
        }
        }

        if (gameObject == leader1focuschargebox3){
        if (leader1charge3active == false){
        leader1focuschargebox1.clearTint();
        leader1focuschargebox2.clearTint();
        leader1focuschargebox3.clearTint();
        }
        }
        if (gameObject == leader1focuschargebox4){
        if (leader1charge4active == false){
        leader1focuschargebox1.clearTint();
        leader1focuschargebox2.clearTint();
        leader1focuschargebox3.clearTint();
        leader1focuschargebox4.clearTint();
        }
        }

        if (gameObject == leader1focuschargebox5){
        if (leader1charge5active == false){
        leader1focuschargebox1.clearTint();
        leader1focuschargebox2.clearTint();
        leader1focuschargebox3.clearTint();
        leader1focuschargebox4.clearTint();
        leader1focuschargebox5.clearTint();
        }
}
        if (gameObject == leader2focuschargebox1){
        if (leader2charge1active == false){
        leader2focuschargebox1.clearTint();
        }
        }

        if (gameObject == leader2focuschargebox2){
        if (leader2charge2active == false){
        leader2focuschargebox1.clearTint();
        leader2focuschargebox2.clearTint();
        }
        }

        if (gameObject == leader2focuschargebox3){
        if (leader2charge3active == false){
        leader2focuschargebox1.clearTint();
        leader2focuschargebox2.clearTint();
        leader2focuschargebox3.clearTint();
        }
        }
        if (gameObject == leader2focuschargebox4){
        if (leader2charge4active == false){
        leader2focuschargebox1.clearTint();
        leader2focuschargebox2.clearTint();
        leader2focuschargebox3.clearTint();
        leader2focuschargebox4.clearTint();
        }
        }

        if (gameObject == leader2focuschargebox5){
        if (leader2charge5active == false){
        leader2focuschargebox1.clearTint();
        leader2focuschargebox2.clearTint();
        leader2focuschargebox3.clearTint();
        leader2focuschargebox4.clearTint();
        leader2focuschargebox5.clearTint();
        }
}
        if (gameObject == support1focuschargebox1){
        if (support1charge1active == false){
        support1focuschargebox1.clearTint();
        }
        }

        if (gameObject == support1focuschargebox2){
        if (support1charge2active == false){
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        }
        }

        if (gameObject == support1focuschargebox3){
        if (support1charge3active == false){
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();
        }
        }
        if (gameObject == support1focuschargebox4){
        if (support1charge4active == false){
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();
        support1focuschargebox4.clearTint();
        }
        }

        if (gameObject == support1focuschargebox5){
        if (support1charge5active == false){
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();
        support1focuschargebox4.clearTint();
        support1focuschargebox5.clearTint();
        }
}
                if (gameObject == support2focuschargebox1){
        if (support2charge1active == false){
        support2focuschargebox1.clearTint();
        }
        }

        if (gameObject == support2focuschargebox2){
        if (support2charge2active == false){
        support2focuschargebox1.clearTint();
        support2focuschargebox2.clearTint();
        }
        }

        if (gameObject == support2focuschargebox3){
        if (support2charge3active == false){
        support2focuschargebox1.clearTint();
        support2focuschargebox2.clearTint();
        support2focuschargebox3.clearTint();
        }
        }
        if (gameObject == support2focuschargebox4){
        if (support2charge4active == false){
        support2focuschargebox1.clearTint();
        support2focuschargebox2.clearTint();
        support2focuschargebox3.clearTint();
        support2focuschargebox4.clearTint();
        }
        }

        if (gameObject == support2focuschargebox5){
        if (support2charge5active == false){
        support2focuschargebox1.clearTint();
        support2focuschargebox2.clearTint();
        support2focuschargebox3.clearTint();
        support2focuschargebox4.clearTint();
        support2focuschargebox5.clearTint();
        }
}


        if (gameObject == fighter1focuschargebox1){
        if (fighter1charge1active == false){
        fighter1focuschargebox1.clearTint();
        }
        }

        if (gameObject == fighter1focuschargebox2){
        if (fighter1charge2active == false){
        fighter1focuschargebox1.clearTint();
        fighter1focuschargebox2.clearTint();
        }
        }

        if (gameObject == fighter1focuschargebox3){
        if (fighter1charge3active == false){
        fighter1focuschargebox1.clearTint();
        fighter1focuschargebox2.clearTint();
        fighter1focuschargebox3.clearTint();
        }
        }
        if (gameObject == fighter1focuschargebox4){
        if (fighter1charge4active == false){
        fighter1focuschargebox1.clearTint();
        fighter1focuschargebox2.clearTint();
        fighter1focuschargebox3.clearTint();
        fighter1focuschargebox4.clearTint();
        }
        }

        if (gameObject == fighter1focuschargebox5){
        if (fighter1charge5active == false){
        fighter1focuschargebox1.clearTint();
        fighter1focuschargebox2.clearTint();
        fighter1focuschargebox3.clearTint();
        fighter1focuschargebox4.clearTint();
        fighter1focuschargebox5.clearTint();
        }
}

        if (gameObject == fighter2focuschargebox1){
        if (fighter2charge1active == false){
        fighter2focuschargebox1.clearTint();
        }
        }

        if (gameObject == fighter2focuschargebox2){
        if (fighter2charge2active == false){
        fighter2focuschargebox1.clearTint();
        fighter2focuschargebox2.clearTint();
        }
        }

        if (gameObject == fighter2focuschargebox3){
        if (fighter2charge3active == false){
        fighter2focuschargebox1.clearTint();
        fighter2focuschargebox2.clearTint();
        fighter2focuschargebox3.clearTint();
        }
        }
        if (gameObject == fighter2focuschargebox4){
        if (fighter2charge4active == false){
        fighter2focuschargebox1.clearTint();
        fighter2focuschargebox2.clearTint();
        fighter2focuschargebox3.clearTint();
        fighter2focuschargebox4.clearTint();
        }
        }

        if (gameObject == fighter2focuschargebox5){
        if (fighter2charge5active == false){
        fighter2focuschargebox1.clearTint();
        fighter2focuschargebox2.clearTint();
        fighter2focuschargebox3.clearTint();
        fighter2focuschargebox4.clearTint();
        fighter2focuschargebox5.clearTint();
        }
}

        if (gameObject == fighter3focuschargebox1){
        if (fighter3charge1active == false){
        fighter3focuschargebox1.clearTint();
        }
        }

        if (gameObject == fighter3focuschargebox2){
        if (fighter3charge2active == false){
        fighter3focuschargebox1.clearTint();
        fighter3focuschargebox2.clearTint();
        }
        }

        if (gameObject == fighter3focuschargebox3){
        if (fighter3charge3active == false){
        fighter3focuschargebox1.clearTint();
        fighter3focuschargebox2.clearTint();
        fighter3focuschargebox3.clearTint();
        }
        }
        if (gameObject == fighter3focuschargebox4){
        if (fighter3charge4active == false){
        fighter3focuschargebox1.clearTint();
        fighter3focuschargebox2.clearTint();
        fighter3focuschargebox3.clearTint();
        fighter3focuschargebox4.clearTint();
        }
        }

        if (gameObject == fighter3focuschargebox5){
        if (fighter3charge5active == false){
        fighter3focuschargebox1.clearTint();
        fighter3focuschargebox2.clearTint();
        fighter3focuschargebox3.clearTint();
        fighter3focuschargebox4.clearTint();
        fighter3focuschargebox5.clearTint();
        }
}
  if (gameObject == fighter4focuschargebox1){
        if (fighter4charge1active == false){
        fighter4focuschargebox1.clearTint();
        }
        }

        if (gameObject == fighter4focuschargebox2){
        if (fighter4charge2active == false){
        fighter4focuschargebox1.clearTint();
        fighter4focuschargebox2.clearTint();
        }
        }

        if (gameObject == fighter4focuschargebox3){
        if (fighter4charge3active == false){
        fighter4focuschargebox1.clearTint();
        fighter4focuschargebox2.clearTint();
        fighter4focuschargebox3.clearTint();
        }
        }
        if (gameObject == fighter4focuschargebox4){
        if (fighter4charge4active == false){
        fighter4focuschargebox1.clearTint();
        fighter4focuschargebox2.clearTint();
        fighter4focuschargebox3.clearTint();
        fighter4focuschargebox4.clearTint();
        }
        }

        if (gameObject == fighter4focuschargebox5){
        if (fighter4charge5active == false){
        fighter4focuschargebox1.clearTint();
        fighter4focuschargebox2.clearTint();
        fighter4focuschargebox3.clearTint();
        fighter4focuschargebox4.clearTint();
        fighter4focuschargebox5.clearTint();
        }
}

        if (gameObject == fighter5focuschargebox1){
        if (fighter5charge1active == false){
        fighter5focuschargebox1.clearTint();
        }
        }

        if (gameObject == fighter5focuschargebox2){
        if (fighter5charge2active == false){
        fighter5focuschargebox1.clearTint();
        fighter5focuschargebox2.clearTint();
        }
        }

        if (gameObject == fighter5focuschargebox3){
        if (fighter5charge3active == false){
        fighter5focuschargebox1.clearTint();
        fighter5focuschargebox2.clearTint();
        fighter5focuschargebox3.clearTint();
        }
        }
        if (gameObject == fighter5focuschargebox4){
        if (fighter5charge4active == false){
        fighter5focuschargebox1.clearTint();
        fighter5focuschargebox2.clearTint();
        fighter5focuschargebox3.clearTint();
        fighter5focuschargebox4.clearTint();
        }
        }

        if (gameObject == fighter5focuschargebox5){
        if (fighter5charge5active == false){
        fighter5focuschargebox1.clearTint();
        fighter5focuschargebox2.clearTint();
        fighter5focuschargebox3.clearTint();
        fighter5focuschargebox4.clearTint();
        fighter5focuschargebox5.clearTint();
        }
}
        if (gameObject == fighter6focuschargebox1){
        if (fighter6charge1active == false){
        fighter6focuschargebox1.clearTint();
        }
        }

        if (gameObject == fighter6focuschargebox2){
        if (fighter6charge2active == false){
        fighter6focuschargebox1.clearTint();
        fighter6focuschargebox2.clearTint();
        }
        }

        if (gameObject == fighter6focuschargebox3){
        if (fighter6charge3active == false){
        fighter6focuschargebox1.clearTint();
        fighter6focuschargebox2.clearTint();
        fighter6focuschargebox3.clearTint();
        }
        }
        if (gameObject == fighter6focuschargebox4){
        if (fighter6charge4active == false){
        fighter6focuschargebox1.clearTint();
        fighter6focuschargebox2.clearTint();
        fighter6focuschargebox3.clearTint();
        fighter6focuschargebox4.clearTint();
        }
        }

        if (gameObject == fighter6focuschargebox5){
        if (fighter6charge5active == false){
        fighter6focuschargebox1.clearTint();
        fighter6focuschargebox2.clearTint();
        fighter6focuschargebox3.clearTint();
        fighter6focuschargebox4.clearTint();
        fighter6focuschargebox5.clearTint();
        }
}


       if (gameObject == support1focusbox){
        support1focusbox.clearTint();
        support1focuschargeon =  false
        support1chargetxt.visible = false
        }
        if (gameObject == support2focusbox){
        support2focusbox.clearTint();
        support2focuschargeon =  false
        support2chargetxt.visible = false
        }
        if (gameObject == leader1focusbox){
        leader1focusbox.clearTint();
        leader1focuschargeon =  false
        leader1chargetxt.visible = false
        }
       if (gameObject == leader2focusbox){
        leader2focusbox.clearTint();
        leader2focuschargeon =  false
        leader2chargetxt.visible = false
        }
       if (gameObject == fighter1focusbox){
        fighter1focusbox.clearTint();
        fighter1focuschargeon =  false
        fighter1chargetxt.visible = false
        }
       if (gameObject == fighter2focusbox){
        fighter2focusbox.clearTint();
        fighter2focuschargeon =  false
        fighter2chargetxt.visible = false
        }
       if (gameObject == fighter3focusbox){
        fighter3focusbox.clearTint();
        fighter3focuschargeon =  false
        fighter3chargetxt.visible = false
        }
       if (gameObject == fighter4focusbox){
        fighter4focusbox.clearTint();
        fighter4focuschargeon =  false
        fighter4chargetxt.visible = false
        }
       if (gameObject == fighter5focusbox){
        fighter5focusbox.clearTint();
        fighter5focuschargeon =  false
        fighter5chargetxt.visible = false
        }
       if (gameObject == fighter6focusbox){
        fighter6focusbox.clearTint();
        fighter6focuschargeon =  false
        fighter6chargetxt.visible = false
        }
        }

       if (kangactive == true) {
       if (gameObject == kang){
       kang.clearTint();
       }
       }
        if (spinalactive == true) {
        if (gameObject == spinal){
       spinal.clearTint();
       }
       }
       if (comboactive == true) {
       if (gameObject == combo){
       combo.clearTint();
       }
       }
       if (gameObject == kano){
       kano.clearTint();
       }
       if (gameObject == orchid){
       orchid.clearTint();
       }
       if (gameObject == jago){
       jago.clearTint();
       }
       if (gameObject == kunglao){
       kunglao.clearTint();
       }
       if (gameObject == terra){
       terra.clearTint();
       }
       if (gameObject == sonja){
       sonja.clearTint();
       }
       if (gameObject == rosa){
       rosa.clearTint();
       }
       if (gameObject == mog){
       mog.clearTint();
       }
    });

//loadout
this.leader1name = 'Kang'
this.leader2name = 'Spinal'
this.fighter1name = 'Kano'
this.fighter2name = 'Orchid'
this.fighter3name = 'Jago'
this.fighter4name = 'Kunglao'
this.fighter5name = 'Terra'
this.fighter6name = 'Sonja'
this.support1name = 'Rosa'
this.support2name = 'Mog'


this.background2 = this.add.tileSprite(0, 0, 2400, 600, 'kombatbackground2').setOrigin(0, 0);
this.background = this.add.tileSprite(0, 0, 2400, 600, 'kombatbackground').setOrigin(0, 0);

//uiboxes
//uibox
//supportbox
//box
//uigraphic
//display
kombatmodebackdrop = this.add.sprite(0, 600, 'battlebackdrop1').setOrigin(0, 0);
support1lowhealthbox = this.add.sprite(0, 600, '').setOrigin(0, 0);
support2lowhealthbox = this.add.sprite(127, 600, '').setOrigin(0, 0);
leader1lowhealthbox = this.add.sprite(254, 600, '').setOrigin(0, 0);
leader2lowhealthbox = this.add.sprite(381, 600, '').setOrigin(0, 0);
fighter1lowhealthbox = this.add.sprite(508, 600, '').setOrigin(0, 0);
fighter2lowhealthbox = this.add.sprite(635, 600, '').setOrigin(0, 0);
fighter3lowhealthbox = this.add.sprite(762, 600, '').setOrigin(0, 0);
fighter4lowhealthbox = this.add.sprite(889, 600, '').setOrigin(0, 0);
fighter5lowhealthbox = this.add.sprite(1016, 600, '').setOrigin(0, 0);
fighter6lowhealthbox = this.add.sprite(1143, 600, '').setOrigin(0, 0);


//statui
//******************
lairstatscreen = this.add.sprite(5, 5, 'statscreenback').setOrigin(0, 0);

rosastatcure = this.add.sprite(lairstatscreen.x + 3,lairstatscreen.y + 10, 'rosacurebox').setOrigin(0, 0);
rosastatcure.visible = false
rosastatheal = this.add.sprite(lairstatscreen.x + 3,lairstatscreen.y + 62, 'rosahealbox').setOrigin(0, 0);
rosastatheal.visible = false
rosastatfast = this.add.sprite(lairstatscreen.x + 3,lairstatscreen.y + 114, 'rosafastbox').setOrigin(0, 0);
rosastatfast.visible = false
rosastatshell = this.add.sprite(lairstatscreen.x + 3,lairstatscreen.y + 166, 'rosashellbox').setOrigin(0, 0);
rosastatshell.visible = false
rosastatbow = this.add.sprite(lairstatscreen.x + 3,lairstatscreen.y + 218, 'rosabowbox').setOrigin(0, 0);
rosastatbow.visible = false
mogstatmoon = this.add.sprite(lairstatscreen.x + 3,lairstatscreen.y + 10, 'mogmoonbox').setOrigin(0, 0);
mogstatmoon.visible = false
mogstatpower = this.add.sprite(lairstatscreen.x + 3,lairstatscreen.y + 62, 'mogpowerbox').setOrigin(0, 0);
mogstatpower.visible = false
mogstatdance = this.add.sprite(lairstatscreen.x + 3,lairstatscreen.y + 114, 'mogdancebox').setOrigin(0, 0);
mogstatdance.visible = false
mogstatdream = this.add.sprite(lairstatscreen.x + 3,lairstatscreen.y + 166, 'mogdreambox').setOrigin(0, 0);
mogstatdream.visible = false
mogstatbull = this.add.sprite(lairstatscreen.x + 3,lairstatscreen.y + 218, 'mogbullbox').setOrigin(0, 0);
mogstatbull.visible = false
kangstatflykick = this.add.sprite(lairstatscreen.x + 3,lairstatscreen.y + 10, 'kangflykickbox').setOrigin(0, 0);
kangstatflykick.visible = false
kangstatfireball = this.add.sprite(lairstatscreen.x + 3,lairstatscreen.y + 62, 'kangfireballbox').setOrigin(0, 0);
kangstatfireball.visible = false
kangstatbicycle = this.add.sprite(lairstatscreen.x + 3,lairstatscreen.y + 114, 'kangbicyclebox').setOrigin(0, 0);
kangstatbicycle.visible = false
kangstatdragon = this.add.sprite(lairstatscreen.x + 3,lairstatscreen.y + 166, 'kangdragonbox').setOrigin(0, 0);
kangstatdragon.visible = false
kangstatprayer = this.add.sprite(lairstatscreen.x + 3,lairstatscreen.y + 218, 'kangprayerbox').setOrigin(0, 0);
kangstatprayer.visible = false
spinalstatslice = this.add.sprite(lairstatscreen.x + 3,lairstatscreen.y + 10, 'spinalslicebox').setOrigin(0, 0);
spinalstatslice.visible = false
spinalstatslash = this.add.sprite(lairstatscreen.x + 3,lairstatscreen.y + 62, 'spinalslashbox').setOrigin(0, 0);
spinalstatslash.visible = false
spinalstatbash = this.add.sprite(lairstatscreen.x + 3,lairstatscreen.y + 114, 'spinalbashbox').setOrigin(0, 0);
spinalstatbash.visible = false
spinalstatspike = this.add.sprite(lairstatscreen.x + 3,lairstatscreen.y + 166, 'spinalspikebox').setOrigin(0, 0);
spinalstatspike.visible = false
spinalstatblock = this.add.sprite(lairstatscreen.x + 3,lairstatscreen.y + 218, 'spinalblockbox').setOrigin(0, 0);
spinalstatblock.visible = false
kanostatblades = this.add.sprite(lairstatscreen.x + 3,lairstatscreen.y + 10, 'kanobladesbox').setOrigin(0, 0);
kanostatblades.visible = false
kanostatcut = this.add.sprite(lairstatscreen.x + 3,lairstatscreen.y + 62, 'kanocutbox').setOrigin(0, 0);
kanostatcut.visible = false
kanostatlaser = this.add.sprite(lairstatscreen.x + 3,lairstatscreen.y + 114, 'kanolaserbox').setOrigin(0, 0);
kanostatlaser.visible = false
kanostathell = this.add.sprite(lairstatscreen.x + 3,lairstatscreen.y + 166, 'kanohellbox').setOrigin(0, 0);
kanostathell.visible = false
kanostatkick = this.add.sprite(lairstatscreen.x + 3,lairstatscreen.y + 218, 'kanokickbox').setOrigin(0, 0);
kanostatkick.visible = false
orchidstatwheel = this.add.sprite(lairstatscreen.x + 3,lairstatscreen.y + 10, 'orchidwheelbox').setOrigin(0, 0);
orchidstatwheel.visible = false
orchidstatfireba = this.add.sprite(lairstatscreen.x + 3,lairstatscreen.y + 62, 'orchidfirebabox').setOrigin(0, 0);
orchidstatfireba.visible = false
orchidstatbaton = this.add.sprite(lairstatscreen.x + 3,lairstatscreen.y + 114, 'orchidbatonbox').setOrigin(0, 0);
orchidstatbaton.visible = false
orchidstatcat = this.add.sprite(lairstatscreen.x + 3,lairstatscreen.y + 166, 'orchidcatbox').setOrigin(0, 0);
orchidstatcat.visible = false
orchidstatfit = this.add.sprite(lairstatscreen.x + 3,lairstatscreen.y + 218, 'orchidfitbox').setOrigin(0, 0);
orchidstatfit.visible = false
jagostatsword = this.add.sprite(lairstatscreen.x + 3,lairstatscreen.y + 10, 'jagoswordbox').setOrigin(0, 0);
jagostatsword.visible = false
jagostatplasma = this.add.sprite(lairstatscreen.x + 3,lairstatscreen.y + 62, 'jagoplasmabox').setOrigin(0, 0);
jagostatplasma.visible = false
jagostatfocus = this.add.sprite(lairstatscreen.x + 3,lairstatscreen.y + 114, 'jagofocusbox').setOrigin(0, 0);
jagostatfocus.visible = false
jagostatrkick = this.add.sprite(lairstatscreen.x + 3,lairstatscreen.y + 166, 'jagorkickbox').setOrigin(0, 0);
jagostatrkick.visible = false
jagostatstab = this.add.sprite(lairstatscreen.x + 3,lairstatscreen.y + 218, 'jagostabbox').setOrigin(0, 0);
jagostatstab.visible = false
kunglaostatpalmkick = this.add.sprite(lairstatscreen.x + 3,lairstatscreen.y + 10, 'kunglaopalmkickbox').setOrigin(0, 0);
kunglaostatpalmkick.visible = false
kunglaostathatthrow = this.add.sprite(lairstatscreen.x + 3,lairstatscreen.y + 62, 'kunglaohatthrowbox').setOrigin(0, 0);
kunglaostathatthrow.visible = false
kunglaostatwhirl = this.add.sprite(lairstatscreen.x + 3,lairstatscreen.y + 114, 'kunglaowhirlbox').setOrigin(0, 0);
kunglaostatwhirl.visible = false
kunglaostatbrim = this.add.sprite(lairstatscreen.x + 3,lairstatscreen.y + 166, 'kunglaobrimbox').setOrigin(0, 0);
kunglaostatbrim.visible = false
kunglaostatkick = this.add.sprite(lairstatscreen.x + 3,lairstatscreen.y + 218, 'kunglaokickbox').setOrigin(0, 0);
kunglaostatkick.visible = false
terrastatfire = this.add.sprite(lairstatscreen.x + 3,lairstatscreen.y + 10, 'terrafirebox').setOrigin(0, 0);
terrastatfire.visible = false
terrastatice = this.add.sprite(lairstatscreen.x + 3,lairstatscreen.y + 62, 'terraicebox').setOrigin(0, 0);
terrastatice.visible = false
terrastatwind = this.add.sprite(lairstatscreen.x + 3,lairstatscreen.y + 114, 'terrawindbox').setOrigin(0, 0);
terrastatwind.visible = false
terrastatearth = this.add.sprite(lairstatscreen.x + 3,lairstatscreen.y + 166, 'terraearthbox').setOrigin(0, 0);
terrastatearth.visible = false
terrastatcall = this.add.sprite(lairstatscreen.x + 3,lairstatscreen.y + 218, 'terracallbox').setOrigin(0, 0);
terrastatcall.visible = false
sonjastathandst = this.add.sprite(lairstatscreen.x + 3,lairstatscreen.y + 10, 'sonjahandstbox').setOrigin(0, 0);
sonjastathandst.visible = false
sonjastatblaster = this.add.sprite(lairstatscreen.x + 3,lairstatscreen.y + 62, 'sonjablasterbox').setOrigin(0, 0);
sonjastatblaster.visible = false
sonjastatkiss = this.add.sprite(lairstatscreen.x + 3,lairstatscreen.y + 114, 'sonjakissbox').setOrigin(0, 0);
sonjastatkiss.visible = false
sonjastatdancer = this.add.sprite(lairstatscreen.x + 3,lairstatscreen.y + 166, 'sonjadancerbox').setOrigin(0, 0);
sonjastatdancer.visible = false
sonjastatkicks = this.add.sprite(lairstatscreen.x + 3,lairstatscreen.y + 218, 'sonjakicksbox').setOrigin(0, 0);
sonjastatkicks.visible = false
focusboostimage = this.add.sprite(190,500, 'focusboostimage').setOrigin(0, 0);
focusboostimage.visible = false

//********************
//statuibuttons
xoutbutton = this.physics.add.sprite(lairstatscreen.x + 626,lairstatscreen.y + 8, 'xoutbutton').setInteractive();
xoutbutton.setOrigin(0, 0);
xoutbutton.on('pointerdown', function (pointer) {
hidestatbuttons()
lairstatscreenshow = false
lairstatscreenselected = false
lairstatscreenname = ''

});
statscreenuibox1 = this.physics.add.sprite(lairstatscreen.x + 1,lairstatscreen.y + 8, 'statscreenuibox').setInteractive();
statscreenuibox1.setOrigin(0, 0);
statscreenuibox1.on('pointerdown', function (pointer) {

});
statscreenuibox2 = this.physics.add.sprite(lairstatscreen.x + 1,lairstatscreen.y + 60, 'statscreenuibox').setInteractive();
statscreenuibox2.setOrigin(0, 0);
statscreenuibox2.on('pointerdown', function (pointer) {

});
statscreenuibox3 = this.physics.add.sprite(lairstatscreen.x + 1,lairstatscreen.y + 112, 'statscreenuibox').setInteractive();
statscreenuibox3.setOrigin(0, 0);
statscreenuibox3.on('pointerdown', function (pointer) {

});
statscreenuibox4 = this.physics.add.sprite(lairstatscreen.x + 1,lairstatscreen.y + 164, 'statscreenuibox').setInteractive();
statscreenuibox4.setOrigin(0, 0);
statscreenuibox4.on('pointerdown', function (pointer) {

});
statscreenuibox5 = this.physics.add.sprite(lairstatscreen.x + 1,lairstatscreen.y + 216, 'statscreenuibox').setInteractive();
statscreenuibox5.setOrigin(0, 0);
statscreenuibox5.on('pointerdown', function (pointer) {

});

aquibox = this.add.sprite(1285,600, 'aquibox').setOrigin(0, 0);

support1uibox = this.physics.add.sprite(0, 600, 'uibox').setInteractive();
support1uibox.setOrigin(0, 0);
support1uibox.on('pointerdown', function (pointer) {
if (battlemode == false){
    lairstatscreenselected = true
  
}
if (battlemode == true){    
supportfsupport1()
if (isrosacastingcure == true)
{
rosacuresound.play();
}
if (isrosacastingheal == true)
{
rosahealsound.play();
}
if (isrosacastingfast == true)
{
rosafastsound.play();
}
if (isrosacastingshell == true)
{
rosashellsound.play();
}
}
});

support1focusbox = this.physics.add.sprite(13, 705, 'focusbox').setInteractive();
support1focusbox.setOrigin(0, 0);
support1focusbox.on('pointerdown', function (pointer) {
});
support1focuschargebox1 = this.physics.add.sprite(support1uibox.x + 3, support1uibox.y +75, 'focuschargebox').setInteractive();
support1focuschargebox1.setOrigin(0, 0);
support1focuschargebox1.on('pointerdown', function (pointer) {
support1charge1active = true
support1focuschargebox1.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
});
support1focuschargebox2 = this.physics.add.sprite(support1uibox.x + 28, support1uibox.y +75, 'focuschargebox').setInteractive();
support1focuschargebox2.setOrigin(0, 0);
support1focuschargebox2.on('pointerdown', function (pointer) {
support1charge2active = true
support1focuschargebox1.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
support1focuschargebox2.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
});
support1focuschargebox3 = this.physics.add.sprite(support1uibox.x + 53, support1uibox.y +75, 'focuschargebox').setInteractive();
support1focuschargebox3.setOrigin(0, 0);
support1focuschargebox3.on('pointerdown', function (pointer) {
support1charge3active = true
support1focuschargebox1.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
support1focuschargebox2.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
support1focuschargebox3.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
});
support1focuschargebox4 = this.physics.add.sprite(support1uibox.x + 78, support1uibox.y +75, 'focuschargebox').setInteractive();
support1focuschargebox4.setOrigin(0, 0);
support1focuschargebox4.on('pointerdown', function (pointer) {
support1charge4active = true
support1focuschargebox1.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
support1focuschargebox2.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
support1focuschargebox3.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
support1focuschargebox4.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
});
support1focuschargebox5 = this.physics.add.sprite(support1uibox.x + 103, support1uibox.y +75, 'focuschargebox').setInteractive();
support1focuschargebox5.setOrigin(0, 0);
support1focuschargebox5.on('pointerdown', function (pointer) {
support1charge5active = true
support1focuschargebox1.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
support1focuschargebox2.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
support1focuschargebox3.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
support1focuschargebox4.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
support1focuschargebox5.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);

});


support2uibox = this.physics.add.sprite(127, 600, 'uibox').setInteractive();
support2uibox.setOrigin(0, 0);
support2uibox.on('pointerdown', function (pointer) {
    if (battlemode == false){
    lairstatscreenselected = true
  
}

if (battlemode == true){
supportfsupport2()
if (isrosacastingcure == true)
{
rosacuresound.play();
}
if (isrosacastingheal == true)
{
rosahealsound.play();
}
if (isrosacastingfast == true)
{
rosafastsound.play();
}
if (isrosacastingshell == true)
{
rosashellsound.play();
}
}
});
support2focusbox = this.physics.add.sprite(140, 705, 'focusbox').setInteractive();
support2focusbox.setOrigin(0, 0);
support2focusbox.on('pointerdown', function (pointer) {

});
support2focuschargebox1 = this.physics.add.sprite(support2uibox.x + 3, support2uibox.y +75, 'focuschargebox').setInteractive();
support2focuschargebox1.setOrigin(0, 0);
support2focuschargebox1.on('pointerdown', function (pointer) {
support2charge1active = true
support2focuschargebox1.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
});
support2focuschargebox2 = this.physics.add.sprite(support2uibox.x + 28, support2uibox.y +75, 'focuschargebox').setInteractive();
support2focuschargebox2.setOrigin(0, 0);
support2focuschargebox2.on('pointerdown', function (pointer) {
support2charge2active = true
support2focuschargebox1.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
support2focuschargebox2.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
});
support2focuschargebox3 = this.physics.add.sprite(support2uibox.x + 53, support2uibox.y +75, 'focuschargebox').setInteractive();
support2focuschargebox3.setOrigin(0, 0);
support2focuschargebox3.on('pointerdown', function (pointer) {
support2charge3active = true
support2focuschargebox1.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
support2focuschargebox2.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
support2focuschargebox3.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
});
support2focuschargebox4 = this.physics.add.sprite(support2uibox.x + 78, support2uibox.y +75, 'focuschargebox').setInteractive();
support2focuschargebox4.setOrigin(0, 0);
support2focuschargebox4.on('pointerdown', function (pointer) {
support2charge4active = true
support2focuschargebox1.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
support2focuschargebox2.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
support2focuschargebox3.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
support2focuschargebox4.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
});
support2focuschargebox5 = this.physics.add.sprite(support2uibox.x + 103, support2uibox.y +75, 'focuschargebox').setInteractive();
support2focuschargebox5.setOrigin(0, 0);
support2focuschargebox5.on('pointerdown', function (pointer) {
support2charge5active = true
support2focuschargebox1.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
support2focuschargebox2.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
support2focuschargebox3.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
support2focuschargebox4.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
support2focuschargebox5.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
});

//******************************************************
leader1uibox = this.physics.add.sprite(254, 600, 'uibox').setInteractive();
leader1uibox.setOrigin(0, 0);
leader1uibox.on('pointerdown', function (pointer) {
supportfleader1()
if (isrosacastingcure == true)
{
rosacuresound.play();
}
if (isrosacastingheal == true)
{
rosahealsound.play();
}
if (isrosacastingfast == true)
{
rosafastsound.play();
}
if (isrosacastingshell == true)
{
rosashellsound.play();
}
});
leader1focusbox = this.physics.add.sprite(267, 705, 'focusbox').setInteractive();
leader1focusbox.setOrigin(0, 0);
leader1focusbox.on('pointerdown', function (pointer) {
});

leader1focuschargebox1 = this.physics.add.sprite(leader1uibox.x + 3, leader1uibox.y +75, 'focuschargebox').setInteractive();
leader1focuschargebox1.setOrigin(0, 0);
leader1focuschargebox1.on('pointerdown', function (pointer) {
leader1charge1active = true
leader1charge0active = false
if (activeleader1name = 'Kang') {
kang.setScale(1.6, 1.6);
kangspells.setScale(1.2, 1.2);
}
leader1focuschargebox1.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);

});
leader1focuschargebox2 = this.physics.add.sprite(leader1uibox.x + 28, leader1uibox.y +75, 'focuschargebox').setInteractive();
leader1focuschargebox2.setOrigin(0, 0);
leader1focuschargebox2.on('pointerdown', function (pointer) {
leader1charge2active = true
leader1charge0active = false
if (activeleader1name = 'Kang') {
kang.setScale(1.7, 1.7);
kangspells.setScale(1.4, 1.4);
}
leader1focuschargebox1.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
leader1focuschargebox2.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);

});
leader1focuschargebox3 = this.physics.add.sprite(leader1uibox.x + 53, leader1uibox.y +75, 'focuschargebox').setInteractive();
leader1focuschargebox3.setOrigin(0, 0);
leader1focuschargebox3.on('pointerdown', function (pointer) {
leader1charge3active = true
leader1charge0active = false
if (activeleader1name = 'Kang') {
kang.setScale(1.8, 1.8);
kangspells.setScale(1.6, 1.6);
}
leader1focuschargebox1.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
leader1focuschargebox2.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
leader1focuschargebox3.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);

});
leader1focuschargebox4 = this.physics.add.sprite(leader1uibox.x + 78, leader1uibox.y +75, 'focuschargebox').setInteractive();
leader1focuschargebox4.setOrigin(0, 0);
leader1focuschargebox4.on('pointerdown', function (pointer) {
leader1charge4active = true
leader1charge0active = false
if (activeleader1name = 'Kang') {
kang.setScale(1.9, 1.9);
kangspells.setScale(1.6, 1.6);
}
leader1focuschargebox1.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
leader1focuschargebox2.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
leader1focuschargebox3.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
leader1focuschargebox4.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
});
leader1focuschargebox5 = this.physics.add.sprite(leader1uibox.x + 103, leader1uibox.y +75, 'focuschargebox').setInteractive();
leader1focuschargebox5.setOrigin(0, 0);
leader1focuschargebox5.on('pointerdown', function (pointer) {
leader1charge5active = true
leader1charge0active = false
if (activeleader1name = 'Kang') {
kang.setScale(2, 2);
kangspells.setScale(2, 2);
}
leader1focuschargebox1.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
leader1focuschargebox2.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
leader1focuschargebox3.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
leader1focuschargebox4.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
leader1focuschargebox5.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
});
//************************************

leader2uibox = this.physics.add.sprite(381, 600, 'uibox').setInteractive();
leader2uibox.setOrigin(0, 0);
leader2uibox.on('pointerdown', function (pointer) {
supportfleader2()
if (isrosacastingcure == true)
{
rosacuresound.play();
}
if (isrosacastingheal == true)
{
rosahealsound.play();
}
if (isrosacastingfast == true)
{
rosafastsound.play();
}
if (isrosacastingshell == true)
{
rosashellsound.play();
}
});
leader2focusbox = this.physics.add.sprite(394, 705, 'focusbox').setInteractive();
leader2focusbox.setOrigin(0, 0);
leader2focusbox.on('pointerdown', function (pointer) {
});
leader2focuschargebox1 = this.physics.add.sprite(leader2uibox.x + 3, leader2uibox.y +75, 'focuschargebox').setInteractive();
leader2focuschargebox1.setOrigin(0, 0);
leader2focuschargebox1.on('pointerdown', function (pointer) {
leader2charge1active = true
leader2charge0active = false
if (activeleader2name = 'Spinal') {
spinal.setScale(1.2, 1.2);
}
leader2focuschargebox1.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);

});
leader2focuschargebox2 = this.physics.add.sprite(leader2uibox.x + 28, leader2uibox.y +75, 'focuschargebox').setInteractive();
leader2focuschargebox2.setOrigin(0, 0);
leader2focuschargebox2.on('pointerdown', function (pointer) {
leader2charge2active = true
leader2charge0active = false
if (activeleader2name = 'Spinal') {
spinal.setScale(1.3, 1.3);
}
leader2focuschargebox1.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
leader2focuschargebox2.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);

});
leader2focuschargebox3 = this.physics.add.sprite(leader2uibox.x + 53, leader2uibox.y +75, 'focuschargebox').setInteractive();
leader2focuschargebox3.setOrigin(0, 0);
leader2focuschargebox3.on('pointerdown', function (pointer) {
leader2charge3active = true
leader2charge0active = false
if (activeleader2name = 'Spinal') {
spinal.setScale(1.4, 1.4);
}
leader2focuschargebox1.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
leader2focuschargebox2.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
leader2focuschargebox3.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);

});
leader2focuschargebox4 = this.physics.add.sprite(leader2uibox.x + 78, leader2uibox.y +75, 'focuschargebox').setInteractive();
leader2focuschargebox4.setOrigin(0, 0);
leader2focuschargebox4.on('pointerdown', function (pointer) {
leader2charge4active = true
leader2charge0active = false
if (activeleader2name = 'Spinal') {
spinal.setScale(1.5, 1.5);
}
leader2focuschargebox1.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
leader2focuschargebox2.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
leader2focuschargebox3.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
leader2focuschargebox4.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
});
leader2focuschargebox5 = this.physics.add.sprite(leader2uibox.x + 103, leader2uibox.y +75, 'focuschargebox').setInteractive();
leader2focuschargebox5.setOrigin(0, 0);
leader2focuschargebox5.on('pointerdown', function (pointer) {
leader2charge5active = true
leader2charge0active = false
if (activeleader2name = 'Spinal') {
spinal.setScale(1.6, 1.6);
}
leader2focuschargebox1.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
leader2focuschargebox2.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
leader2focuschargebox3.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
leader2focuschargebox4.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
leader2focuschargebox5.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
});



fighter1uibox = this.physics.add.sprite(508, 600, 'uibox').setInteractive();
fighter1uibox.setOrigin(0, 0);
fighter1uibox.on('pointerdown', function (pointer) {
supportffighter1()
if (isrosacastingcure == true)
{
rosacuresound.play();
}
if (isrosacastingheal == true)
{
rosahealsound.play();
}
if (isrosacastingfast == true)
{
rosafastsound.play();
}
if (isrosacastingshell == true)
{
rosashellsound.play();
}
});
fighter1focusbox = this.physics.add.sprite(521, 705, 'focusbox').setInteractive();
fighter1focusbox.setOrigin(0, 0);
fighter1focusbox.on('pointerdown', function (pointer) {
});

fighter1focuschargebox1 = this.physics.add.sprite(fighter1uibox.x + 3, fighter1uibox.y +75, 'focuschargebox').setInteractive();
fighter1focuschargebox1.setOrigin(0, 0);
fighter1focuschargebox1.on('pointerdown', function (pointer) {
fighter1charge1active = true
fighter1charge0active = false
if (activefighter1name = 'Kano') {
kano.setScale(1.6, 1.6);
kanospells.setScale(1.2, 1.2);
kanospellsfx.setScale(1.2, 1.2);
kanobladespells.setScale(1.2, 1.2);
}
fighter1focuschargebox1.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);

});
fighter1focuschargebox2 = this.physics.add.sprite(fighter1uibox.x + 28, fighter1uibox.y +75, 'focuschargebox').setInteractive();
fighter1focuschargebox2.setOrigin(0, 0);
fighter1focuschargebox2.on('pointerdown', function (pointer) {
fighter1charge2active = true
fighter1charge0active = false
if (activefighter1name = 'Kano') {
kano.setScale(1.7, 1.7);
kanospells.setScale(1.4, 1.4);
kanospellsfx.setScale(1.4, 1.4);
kanobladespells.setScale(1.4, 1.4);
}
fighter1focuschargebox1.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
fighter1focuschargebox2.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);

});
fighter1focuschargebox3 = this.physics.add.sprite(fighter1uibox.x + 53, fighter1uibox.y +75, 'focuschargebox').setInteractive();
fighter1focuschargebox3.setOrigin(0, 0);
fighter1focuschargebox3.on('pointerdown', function (pointer) {
fighter1charge3active = true
fighter1charge0active = false
if (activefighter1name = 'Kano') {
kano.setScale(1.8, 1.8);
kanospells.setScale(1.6, 1.6);
kanospellsfx.setScale(1.6, 1.6);
kanobladespells.setScale(1.6, 1.6);
}
fighter1focuschargebox1.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
fighter1focuschargebox2.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
fighter1focuschargebox3.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);

});
fighter1focuschargebox4 = this.physics.add.sprite(fighter1uibox.x + 78, fighter1uibox.y +75, 'focuschargebox').setInteractive();
fighter1focuschargebox4.setOrigin(0, 0);
fighter1focuschargebox4.on('pointerdown', function (pointer) {
fighter1charge4active = true
fighter1charge0active = false
if (activefighter1name = 'Kano') {
kano.setScale(1.9, 1.9);
kanospells.setScale(1.8, 1.8);
kanospellsfx.setScale(1.8, 1.8);
kanobladespells.setScale(1.8, 1.8);
}
fighter1focuschargebox1.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
fighter1focuschargebox2.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
fighter1focuschargebox3.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
fighter1focuschargebox4.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
});
fighter1focuschargebox5 = this.physics.add.sprite(fighter1uibox.x + 103, fighter1uibox.y +75, 'focuschargebox').setInteractive();
fighter1focuschargebox5.setOrigin(0, 0);
fighter1focuschargebox5.on('pointerdown', function (pointer) {
fighter1charge5active = true
fighter1charge0active = false
if (activefighter1name = 'Kano') {
kano.setScale(2, 2);
kanospells.setScale(2, 2);
kanospellsfx.setScale(2, 2);
kanobladespells.setScale(2, 2);
}
fighter1focuschargebox1.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
fighter1focuschargebox2.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
fighter1focuschargebox3.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
fighter1focuschargebox4.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
fighter1focuschargebox5.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
});

fighter2uibox = this.physics.add.sprite(635, 600, 'uibox').setInteractive();
fighter2uibox.setOrigin(0, 0);
fighter2uibox.on('pointerdown', function (pointer) {
supportffighter2()
if (isrosacastingcure == true)
{
rosacuresound.play();
}
if (isrosacastingheal == true)
{
rosahealsound.play();
}
if (isrosacastingfast == true)
{
rosafastsound.play();
}
if (isrosacastingshell == true)
{
rosashellsound.play();
}
});
fighter2focusbox = this.physics.add.sprite(648, 705, 'focusbox').setInteractive();
fighter2focusbox.setOrigin(0, 0);
fighter2focusbox.on('pointerdown', function (pointer) {
});

fighter2focuschargebox1 = this.physics.add.sprite(fighter2uibox.x + 3, fighter2uibox.y +75, 'focuschargebox').setInteractive();
fighter2focuschargebox1.setOrigin(0, 0);
fighter2focuschargebox1.on('pointerdown', function (pointer) {
fighter2charge1active = true
fighter2charge0active = false
if (activefighter2name = 'Orchid') {
orchid.setScale(1.2, 1.2);
orchidspells.setScale(1.2, 1.2);
}
fighter2focuschargebox1.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);

});
fighter2focuschargebox2 = this.physics.add.sprite(fighter2uibox.x + 28, fighter2uibox.y +75, 'focuschargebox').setInteractive();
fighter2focuschargebox2.setOrigin(0, 0);
fighter2focuschargebox2.on('pointerdown', function (pointer) {
fighter2charge2active = true
fighter2charge0active = false
if (activefighter2name = 'Orchid') {
orchid.setScale(1.4, 1.4);
orchidspells.setScale(1.4, 1.4);
}
fighter2focuschargebox1.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
fighter2focuschargebox2.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
});
fighter2focuschargebox3 = this.physics.add.sprite(fighter2uibox.x + 53, fighter2uibox.y +75, 'focuschargebox').setInteractive();
fighter2focuschargebox3.setOrigin(0, 0);
fighter2focuschargebox3.on('pointerdown', function (pointer) {
fighter2charge3active = true
fighter2charge0active = false
if (activefighter2name = 'Orchid') {
orchid.setScale(1.6, 1.6);
orchidspells.setScale(1.6, 1.6);
}
fighter2focuschargebox1.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
fighter2focuschargebox2.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
fighter2focuschargebox3.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);

});
fighter2focuschargebox4 = this.physics.add.sprite(fighter2uibox.x + 78, fighter2uibox.y +75, 'focuschargebox').setInteractive();
fighter2focuschargebox4.setOrigin(0, 0);
fighter2focuschargebox4.on('pointerdown', function (pointer) {
fighter2charge4active = true
fighter2charge0active = false
if (activefighter2name = 'Orchid') {
orchid.setScale(1.8, 1.8);
orchidspells.setScale(1.8, 1.8);
}
fighter2focuschargebox1.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
fighter2focuschargebox2.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
fighter2focuschargebox3.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
fighter2focuschargebox4.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
});
fighter2focuschargebox5 = this.physics.add.sprite(fighter2uibox.x + 103, fighter2uibox.y +75, 'focuschargebox').setInteractive();
fighter2focuschargebox5.setOrigin(0, 0);
fighter2focuschargebox5.on('pointerdown', function (pointer) {
fighter2charge5active = true
fighter2charge0active = false
if (activefighter2name = 'Orchid') {
orchid.setScale(2, 2);
orchidspells.setScale(2, 2);
}
fighter2focuschargebox1.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
fighter2focuschargebox2.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
fighter2focuschargebox3.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
fighter2focuschargebox4.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
fighter2focuschargebox5.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
});


fighter3uibox = this.physics.add.sprite(762, 600, 'uibox').setInteractive();
fighter3uibox.setOrigin(0, 0);
fighter3uibox.on('pointerdown', function (pointer) {
supportffighter3()
if (isrosacastingcure == true)
{
rosacuresound.play();
}
if (isrosacastingheal == true)
{
rosahealsound.play();
}
if (isrosacastingfast == true)
{
rosafastsound.play();
}
if (isrosacastingshell == true)
{
rosashellsound.play();
}
});
fighter3focusbox = this.physics.add.sprite(775, 705, 'focusbox').setInteractive();
fighter3focusbox.setOrigin(0, 0);
fighter3focusbox.on('pointerdown', function (pointer) {
});

fighter3focuschargebox1 = this.physics.add.sprite(fighter3uibox.x + 3, fighter3uibox.y +75, 'focuschargebox').setInteractive();
fighter3focuschargebox1.setOrigin(0, 0);
fighter3focuschargebox1.on('pointerdown', function (pointer) {
fighter3charge1active = true
fighter3charge0active = false
if (activefighter3name = 'Jago') {
jago.setScale(1.6, 1.6);
jagospells.setScale(1.6, 1.6);
}
fighter3focuschargebox1.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);

});
fighter3focuschargebox2 = this.physics.add.sprite(fighter3uibox.x + 28, fighter3uibox.y +75, 'focuschargebox').setInteractive();
fighter3focuschargebox2.setOrigin(0, 0);
fighter3focuschargebox2.on('pointerdown', function (pointer) {
fighter3charge2active = true
fighter3charge0active = false
if (activefighter3name = 'Jago') {
jago.setScale(1.6, 1.6);
jagospells.setScale(1.6, 1.6);
}
fighter3focuschargebox1.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
fighter3focuschargebox2.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
});
fighter3focuschargebox3 = this.physics.add.sprite(fighter3uibox.x + 53, fighter3uibox.y +75, 'focuschargebox').setInteractive();
fighter3focuschargebox3.setOrigin(0, 0);
fighter3focuschargebox3.on('pointerdown', function (pointer) {
fighter3charge3active = true
fighter3charge0active = false
if (activefighter3name = 'Jago') {
jago.setScale(1.8, 1.8);
jagospells.setScale(1.8, 1.8);
}
fighter3focuschargebox1.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
fighter3focuschargebox2.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
fighter3focuschargebox3.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);

});
fighter3focuschargebox4 = this.physics.add.sprite(fighter3uibox.x + 78, fighter3uibox.y +75, 'focuschargebox').setInteractive();
fighter3focuschargebox4.setOrigin(0, 0);
fighter3focuschargebox4.on('pointerdown', function (pointer) {
fighter3charge4active = true
fighter3charge0active = false
if (activefighter3name = 'Jago') {
jago.setScale(2, 2);
jagospells.setScale(2, 2);
}
fighter3focuschargebox1.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
fighter3focuschargebox2.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
fighter3focuschargebox3.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
fighter3focuschargebox4.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
});
fighter3focuschargebox5 = this.physics.add.sprite(fighter3uibox.x + 103, fighter3uibox.y +75, 'focuschargebox').setInteractive();
fighter3focuschargebox5.setOrigin(0, 0);
fighter3focuschargebox5.on('pointerdown', function (pointer) {
fighter3charge5active = true
fighter3charge0active = false
if (activefighter3name = 'Jago') {
jago.setScale(2.2, 2.2);
jagospells.setScale(2.2, 2.2);
}
fighter3focuschargebox1.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
fighter3focuschargebox2.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
fighter3focuschargebox3.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
fighter3focuschargebox4.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
fighter3focuschargebox5.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
});

fighter4uibox = this.physics.add.sprite(889, 600, 'uibox').setInteractive();
fighter4uibox.setOrigin(0, 0);
fighter4uibox.on('pointerdown', function (pointer) {
supportffighter4()
if (isrosacastingcure == true)
{
rosacuresound.play();
}
if (isrosacastingheal == true)
{
rosahealsound.play();
}
if (isrosacastingfast == true)
{
rosafastsound.play();
}
if (isrosacastingshell == true)
{
rosashellsound.play();
}
});
fighter4focusbox = this.physics.add.sprite(902, 705, 'focusbox').setInteractive();
fighter4focusbox.setOrigin(0, 0);
fighter4focusbox.on('pointerdown', function (pointer) {
});

fighter4focuschargebox1 = this.physics.add.sprite(fighter4uibox.x + 3, fighter4uibox.y +75, 'focuschargebox').setInteractive();
fighter4focuschargebox1.setOrigin(0, 0);
fighter4focuschargebox1.on('pointerdown', function (pointer) {
fighter4charge1active = true
fighter4charge0active = false
if (activefighter4name = 'Kunglao') {
kunglao.setScale(1.6, 1.6);
kunglaospells.setScale(1.6, 1.6);
}
fighter4focuschargebox1.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);

});
fighter4focuschargebox2 = this.physics.add.sprite(fighter4uibox.x + 28, fighter4uibox.y +75, 'focuschargebox').setInteractive();
fighter4focuschargebox2.setOrigin(0, 0);
fighter4focuschargebox2.on('pointerdown', function (pointer) {
fighter4charge2active = true
fighter4charge0active = false
if (activefighter4name = 'Kunglao') {
kunglao.setScale(1.6, 1.6);
kunglaospells.setScale(1.6, 1.6);
}
fighter4focuschargebox1.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
fighter4focuschargebox2.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
});
fighter4focuschargebox3 = this.physics.add.sprite(fighter4uibox.x + 53, fighter4uibox.y +75, 'focuschargebox').setInteractive();
fighter4focuschargebox3.setOrigin(0, 0);
fighter4focuschargebox3.on('pointerdown', function (pointer) {
fighter4charge3active = true
fighter4charge0active = false
if (activefighter4name = 'Kunglao') {
kunglao.setScale(1.8, 1.8);
kunglaospells.setScale(1.8, 1.8);
}
fighter4focuschargebox1.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
fighter4focuschargebox2.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
fighter4focuschargebox3.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);

});
fighter4focuschargebox4 = this.physics.add.sprite(fighter4uibox.x + 78, fighter4uibox.y +75, 'focuschargebox').setInteractive();
fighter4focuschargebox4.setOrigin(0, 0);
fighter4focuschargebox4.on('pointerdown', function (pointer) {
fighter4charge4active = true
fighter4charge0active = false
if (activefighter4name = 'Kunglao') {
kunglao.setScale(2, 2);
kunglaospells.setScale(2, 2);
}
fighter4focuschargebox1.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
fighter4focuschargebox2.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
fighter4focuschargebox3.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
fighter4focuschargebox4.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
});
fighter4focuschargebox5 = this.physics.add.sprite(fighter4uibox.x + 103, fighter4uibox.y +75, 'focuschargebox').setInteractive();
fighter4focuschargebox5.setOrigin(0, 0);
fighter4focuschargebox5.on('pointerdown', function (pointer) {
fighter4charge5active = true
fighter4charge0active = false
if (activefighter4name = 'Kunglao') {
kunglao.setScale(2.2, 2.2);
kunglaospells.setScale(2.2, 2.2);
}
fighter4focuschargebox1.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
fighter4focuschargebox2.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
fighter4focuschargebox3.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
fighter4focuschargebox4.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
fighter4focuschargebox5.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
});

fighter5uibox = this.physics.add.sprite(1016, 600, 'uibox').setInteractive();
fighter5uibox.setOrigin(0, 0);
fighter5uibox.on('pointerdown', function (pointer) {
supportffighter5()
if (isrosacastingcure == true)
{
rosacuresound.play();
}
if (isrosacastingheal == true)
{
rosahealsound.play();
}
if (isrosacastingfast == true)
{
rosafastsound.play();
}
if (isrosacastingshell == true)
{
rosashellsound.play();
}
});
fighter5focusbox = this.physics.add.sprite(1029, 705, 'focusbox').setInteractive();
fighter5focusbox.setOrigin(0, 0);
fighter5focusbox.on('pointerdown', function (pointer) {
});

fighter5focuschargebox1 = this.physics.add.sprite(fighter5uibox.x + 3, fighter5uibox.y +75, 'focuschargebox').setInteractive();
fighter5focuschargebox1.setOrigin(0, 0);
fighter5focuschargebox1.on('pointerdown', function (pointer) {
fighter5charge1active = true
fighter5charge0active = false
if (activefighter5name = 'Terra') {
terra.setScale(1.2, 1.2);
terraspells.setScale(1.2, 1.2);
}
fighter5focuschargebox1.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);

});
fighter5focuschargebox2 = this.physics.add.sprite(fighter5uibox.x + 28, fighter5uibox.y +75, 'focuschargebox').setInteractive();
fighter5focuschargebox2.setOrigin(0, 0);
fighter5focuschargebox2.on('pointerdown', function (pointer) {
fighter5charge2active = true
fighter5charge0active = false
if (activefighter5name = 'Terra') {
terra.setScale(1.4, 1.4);
terraspells.setScale(1.4, 1.4);
}
fighter5focuschargebox1.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
fighter5focuschargebox2.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
});
fighter5focuschargebox3 = this.physics.add.sprite(fighter5uibox.x + 53, fighter5uibox.y +75, 'focuschargebox').setInteractive();
fighter5focuschargebox3.setOrigin(0, 0);
fighter5focuschargebox3.on('pointerdown', function (pointer) {
fighter5charge3active = true
fighter5charge0active = false
if (activefighter5name = 'Terra') {
terra.setScale(1.6, 1.6);
terraspells.setScale(1.6, 1.6);
}
fighter5focuschargebox1.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
fighter5focuschargebox2.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
fighter5focuschargebox3.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);

});
fighter5focuschargebox4 = this.physics.add.sprite(fighter5uibox.x + 78, fighter5uibox.y +75, 'focuschargebox').setInteractive();
fighter5focuschargebox4.setOrigin(0, 0);
fighter5focuschargebox4.on('pointerdown', function (pointer) {
fighter5charge4active = true
fighter5charge0active = false
if (activefighter5name = 'Terra') {
terra.setScale(1.8, 1.8);
terraspells.setScale(1.8, 1.8);
}
fighter5focuschargebox1.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
fighter5focuschargebox2.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
fighter5focuschargebox3.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
fighter5focuschargebox4.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
});
fighter5focuschargebox5 = this.physics.add.sprite(fighter5uibox.x + 103, fighter5uibox.y +75, 'focuschargebox').setInteractive();
fighter5focuschargebox5.setOrigin(0, 0);
fighter5focuschargebox5.on('pointerdown', function (pointer) {
fighter5charge5active = true
fighter5charge0active = false
if (activefighter5name = 'Terra') {
terra.setScale(2, 2);
terraspells.setScale(2, 2);
}
fighter5focuschargebox1.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
fighter5focuschargebox2.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
fighter5focuschargebox3.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
fighter5focuschargebox4.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
fighter5focuschargebox5.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
});


fighter6uibox = this.physics.add.sprite(1143, 600, 'uibox').setInteractive();
fighter6uibox.setOrigin(0, 0);
fighter6uibox.on('pointerdown', function (pointer) {
supportffighter6()
if (isrosacastingcure == true)
{
rosacuresound.play();
}
if (isrosacastingheal == true)
{
rosahealsound.play();
}
if (isrosacastingfast == true)
{
rosafastsound.play();
}
if (isrosacastingshell == true)
{
rosashellsound.play();
}
});
fighter6focusbox = this.physics.add.sprite(1157, 705, 'focusbox').setInteractive();
fighter6focusbox.setOrigin(0, 0);
fighter6focusbox.on('pointerdown', function (pointer) {
});

fighter6focuschargebox1 = this.physics.add.sprite(fighter6uibox.x + 3, fighter6uibox.y +75, 'focuschargebox').setInteractive();
fighter6focuschargebox1.setOrigin(0, 0);
fighter6focuschargebox1.on('pointerdown', function (pointer) {
fighter6charge1active = true
fighter6charge0active = false
if (activefighter6name = 'Sonja') {
sonja.setScale(1.6, 1.6);
sonjaspells.setScale(1.6, 1.6);
}
fighter6focuschargebox1.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);

});
fighter6focuschargebox2 = this.physics.add.sprite(fighter6uibox.x + 28, fighter6uibox.y +75, 'focuschargebox').setInteractive();
fighter6focuschargebox2.setOrigin(0, 0);
fighter6focuschargebox2.on('pointerdown', function (pointer) {
fighter6charge2active = true
fighter6charge0active = false
if (activefighter6name = 'Sonja') {
sonja.setScale(1.6, 1.6);
sonjaspells.setScale(1.6, 1.6);
}
fighter6focuschargebox1.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
fighter6focuschargebox2.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
});
fighter6focuschargebox3 = this.physics.add.sprite(fighter6uibox.x + 53, fighter6uibox.y +75, 'focuschargebox').setInteractive();
fighter6focuschargebox3.setOrigin(0, 0);
fighter6focuschargebox3.on('pointerdown', function (pointer) {
fighter6charge3active = true
fighter6charge0active = false
if (activefighter6name = 'Sonja') {
sonja.setScale(1.8, 1.8);
sonjaspells.setScale(1.8, 1.8);
}
fighter6focuschargebox1.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
fighter6focuschargebox2.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
fighter6focuschargebox3.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);

});
fighter6focuschargebox4 = this.physics.add.sprite(fighter6uibox.x + 78, fighter6uibox.y +75, 'focuschargebox').setInteractive();
fighter6focuschargebox4.setOrigin(0, 0);
fighter6focuschargebox4.on('pointerdown', function (pointer) {
fighter6charge4active = true
fighter6charge0active = false
if (activefighter6name = 'Sonja') {
sonja.setScale(2, 2);
sonjaspells.setScale(2, 2);
}
fighter6focuschargebox1.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
fighter6focuschargebox2.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
fighter6focuschargebox3.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
fighter6focuschargebox4.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
});
fighter6focuschargebox5 = this.physics.add.sprite(fighter6uibox.x + 103, fighter6uibox.y +75, 'focuschargebox').setInteractive();
fighter6focuschargebox5.setOrigin(0, 0);
fighter6focuschargebox5.on('pointerdown', function (pointer) {
fighter6charge5active = true
fighter6charge0active = false
if (activefighter6name = 'Sonja') {
sonja.setScale(2.2, 2.2);
sonjaspells.setScale(2.2, 2.2);
}
fighter6focuschargebox1.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
fighter6focuschargebox2.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
fighter6focuschargebox3.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
fighter6focuschargebox4.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
fighter6focuschargebox5.setTintFill(0xFF0000, 0x00FF00, 0x00FF00, 0xFF0000);
});



//frozenui

frozenuisupport1 = this.physics.add.sprite(0, 600, 'frozenuiicon').setInteractive();
frozenuisupport1.setOrigin(0, 0);
frozenuisupport1.on('pointerdown', function (pointer) {
supportfsupport1()
if (isrosacastingcure == true)
{
rosacuresound.play();
}
if (isrosacastingheal == true)
{
rosahealsound.play();
}
if (isrosacastingfast == true)
{
rosafastsound.play();
}
if (isrosacastingshell == true)
{
rosashellsound.play();
}
});
frozenuisupport2 = this.physics.add.sprite(127, 600, 'frozenuiicon').setInteractive();
frozenuisupport2.setOrigin(0, 0);
frozenuisupport2.on('pointerdown', function (pointer) {
supportfsupport2()
if (isrosacastingcure == true)
{
rosacuresound.play();
}
if (isrosacastingheal == true)
{
rosahealsound.play();
}
if (isrosacastingfast == true)
{
rosafastsound.play();
}
if (isrosacastingshell == true)
{
rosashellsound.play();
}
});
frozenuileader1 = this.physics.add.sprite(254, 600, 'frozenuiicon').setInteractive();
frozenuileader1.setOrigin(0, 0);
frozenuileader1.on('pointerdown', function (pointer) {
supportfleader1()
if (isrosacastingcure == true)
{
rosacuresound.play();
}
if (isrosacastingheal == true)
{
rosahealsound.play();
}
if (isrosacastingfast == true)
{
rosafastsound.play();
}
if (isrosacastingshell == true)
{
rosashellsound.play();
}
});
frozenuileader2 = this.physics.add.sprite(381, 600, 'frozenuiicon').setInteractive();
frozenuileader2.setOrigin(0, 0);
frozenuileader2.on('pointerdown', function (pointer) {
supportfleader2()
if (isrosacastingcure == true)
{
rosacuresound.play();
}
if (isrosacastingheal == true)
{
rosahealsound.play();
}
if (isrosacastingfast == true)
{
rosafastsound.play();
}
if (isrosacastingshell == true)
{
rosashellsound.play();
}
});
frozenuifighter1 = this.physics.add.sprite(508, 600, 'frozenuiicon').setInteractive();
frozenuifighter1.setOrigin(0, 0);
frozenuifighter1.on('pointerdown', function (pointer) {
supportffighter1()
if (isrosacastingcure == true)
{
rosacuresound.play();
}
if (isrosacastingheal == true)
{
rosahealsound.play();
}
if (isrosacastingfast == true)
{
rosafastsound.play();
}
if (isrosacastingshell == true)
{
rosashellsound.play();
}
});
frozenuifighter2 = this.physics.add.sprite(635, 600, 'frozenuiicon').setInteractive();
frozenuifighter2.setOrigin(0, 0);
frozenuifighter2.on('pointerdown', function (pointer) {
supportffighter2()
if (isrosacastingcure == true)
{
rosacuresound.play();
}
if (isrosacastingheal == true)
{
rosahealsound.play();
}
if (isrosacastingfast == true)
{
rosafastsound.play();
}
if (isrosacastingshell == true)
{
rosashellsound.play();
}
});
frozenuifighter3 = this.physics.add.sprite(762, 600, 'frozenuiicon').setInteractive();
frozenuifighter3.setOrigin(0, 0);
frozenuifighter3.on('pointerdown', function (pointer) {
supportffighter3()
if (isrosacastingcure == true)
{
rosacuresound.play();
}
if (isrosacastingheal == true)
{
rosahealsound.play();
}
if (isrosacastingfast == true)
{
rosafastsound.play();
}
if (isrosacastingshell == true)
{
rosashellsound.play();
}
});
frozenuifighter4 = this.physics.add.sprite(889, 600, 'frozenuiicon').setInteractive();
frozenuifighter4.setOrigin(0, 0);
frozenuifighter4.on('pointerdown', function (pointer) {
supportffighter4()
if (isrosacastingcure == true)
{
rosacuresound.play();
}
if (isrosacastingheal == true)
{
rosahealsound.play();
}
if (isrosacastingfast == true)
{
rosafastsound.play();
}
if (isrosacastingshell == true)
{
rosashellsound.play();
}
});
frozenuifighter5 = this.physics.add.sprite(1016, 600, 'frozenuiicon').setInteractive();
frozenuifighter5.setOrigin(0, 0);
frozenuifighter5.on('pointerdown', function (pointer) {
supportffighter5()
if (isrosacastingcure == true)
{
rosacuresound.play();
}
if (isrosacastingheal == true)
{
rosahealsound.play();
}
if (isrosacastingfast == true)
{
rosafastsound.play();
}
if (isrosacastingshell == true)
{
rosashellsound.play();
}
});
frozenuifighter6 = this.physics.add.sprite(1143, 600, 'frozenuiicon').setInteractive();
frozenuifighter6.setOrigin(0, 0);
frozenuifighter6.on('pointerdown', function (pointer) {
supportffighter6()
if (isrosacastingcure == true)
{
rosacuresound.play();
}
if (isrosacastingheal == true)
{
rosahealsound.play();
}
if (isrosacastingfast == true)
{
rosafastsound.play();
}
if (isrosacastingshell == true)
{
rosashellsound.play();
}
});

//subzerobutton
//subzerobuttons
if (enemy1name == 'Subzero') {
subzero = this.physics.add.sprite(enemy1x, enemy1y, 'subzeroready').setInteractive();
subzero.on('pointerdown', function (pointer) {

//kang
if (kangactive == true) {
 if (iskangpickingtarget == true){
if (iskangattackingflykick == true){
        kangcurrenttargetx = subzero.x
        kangcurrenttargety = subzero.y
        iskangattackingnow = true
        iskangtargetpicked = true
        kang.anims.play('kangflykick', true);
        kangidle = false 
        
}
}
 if (iskangpickingtarget == true){
if (iskangattackingfireball == true){
        kangcurrenttargetx = subzero.x
        kangcurrenttargety = subzero.y
        iskangattackingnow = true
        iskangtargetpicked = true
        kang.anims.play('kangfireball', true);
        kangidle = false 
        
}
}
if (iskangpickingtarget == true){
if (iskangattackingbicycle == true){
        kangcurrenttargetx = subzero.x
        kangcurrenttargety = subzero.y
        iskangattackingnow = true
        iskangtargetpicked = true
        kang.anims.play('kangbicycle', true);
        kangidle = false 
        
}
}
if (iskangpickingtarget == true){
if (iskangattackingdragon == true){
        endkangattacknumber = 0
        kangcurrenttargetx = subzero.x
        kangcurrenttargety = subzero.y
        iskangattackingnow = true
        iskangtargetpicked = true
        kangidle = false 

        
}
}
}

//spinal
if (spinalactive == true) {
 if (isspinalpickingtarget == true){
if (isspinalattackingslice == true){
        endspinalattacknumber = 0
        spinalcurrenttargetx = subzero.x
        spinalcurrenttargety = subzero.y
        isspinalattackingnow = true
        isspinaltargetpicked = true
        spinalidle = false 
        
}
}
 if (isspinalpickingtarget == true){
if (isspinalattackingslash == true){
        endspinalattacknumber = 0
        spinalcurrenttargetx = subzero.x
        spinalcurrenttargety = subzero.y
        isspinalattackingnow = true
        isspinaltargetpicked = true
        
        spinalidle = false 
        
}
}
if (isspinalpickingtarget == true){
if (isspinalattackingbash == true){
        endspinalattacknumber = 0
        spinalcurrenttargetx = subzero.x
        spinalcurrenttargety = subzero.y
        isspinalattackingnow = true
        isspinaltargetpicked = true
        
        spinalidle = false 
        
}
}
if (isspinalpickingtarget == true){
if (isspinalattackingspike == true){
        endspinalattacknumber = 0
        spinalcurrenttargetx = subzero.x
        spinalcurrenttargety = subzero.y
        isspinalattackingnow = true
        isspinaltargetpicked = true
        spinalidle = false 

        
}
}
}

//combo
if (comboactive == true) {
if (iscombopickingtarget == true){
if (iscomboattackingpunch == true){
        combocurrenttargetx = subzero.x
        combocurrenttargety = subzero.y
        iscomboattackingnow = true
        iscombotargetpicked = true
        comboidle = false 
        
}
}
 if (iscombopickingtarget == true){
if (iscomboattackingjumpkick == true){
        combocurrenttargetx = subzero.x
        combocurrenttargety = subzero.y
        iscomboattackingnow = true
        iscombotargetpicked = true
        comboidle = false 
        
}
}
if (iscombopickingtarget == true){
if (iscomboattackinggun == true){
        combocurrenttargetx = subzero.x
        combocurrenttargety = subzero.y
        iscomboattackingnow = true
        iscombotargetpicked = true
        comboidle = false 
        
}
}
if (iscombopickingtarget == true){
if (iscomboattackingslam == true){
        endcomboattacknumber = 0
        combocurrenttargetx = subzero.x
        combocurrenttargety = subzero.y
        iscomboattackingnow = true
        iscombotargetpicked = true
        comboidle = false 

        
}
}
if (iscombopickingtarget == true){
if (iscomboattackingmuscle == true){
        endcomboattacknumber = 0
        combocurrenttargetx = subzero.x
        combocurrenttargety = subzero.y
        iscomboattackingnow = true
        iscombotargetpicked = true
        comboidle = false 

        
}
}
}
//kano
if (iskanopickingtarget == true){
if (iskanoattackingblades == true){
        kanocurrenttargetx = subzero.x
        kanocurrenttargety = subzero.y
        iskanoattackingnow = true
        iskanotargetpicked = true
        kano.anims.play('kanoblades', true);
        kanoidle = false 
        
}
}
if (iskanopickingtarget == true){
if (iskanoattackingcut == true){
        endkanoattacknumber = 0
        kanocurrenttargetx = subzero.x
        kanocurrenttargety = subzero.y
        iskanoattackingnow = true
        iskanotargetpicked = true
        kanoidle = false 

        
}
}
if (iskanopickingtarget == true){
if (iskanoattackingkick == true){
        endkanoattacknumber = 0
        kanocurrenttargetx = subzero.x
        kanocurrenttargety = subzero.y
        iskanoattackingnow = true
        iskanotargetpicked = true
        kanoidle = false 

        
}
}
//orchid
 if (isorchidpickingtarget == true){
if (isorchidattackingwheel == true){
        orchidcurrenttargetx = subzero.x
        orchidcurrenttargety = subzero.y
        isorchidattackingnow = true
        isorchidtargetpicked = true
        orchid.anims.play('orchidwheel', true);
        orchididle = false 
        
}
}
 if (isorchidpickingtarget == true){
if (isorchidattackingfireba == true){
        orchidcurrenttargetx = subzero.x
        orchidcurrenttargety = subzero.y
        isorchidattackingnow = true
        isorchidtargetpicked = true
        orchid.anims.play('orchidfireba', true);
        orchididle = false 
        
}
}
if (isorchidpickingtarget == true){
if (isorchidattackingbaton == true){
        orchidcurrenttargetx = subzero.x
        orchidcurrenttargety = subzero.y
        isorchidattackingnow = true
        isorchidtargetpicked = true
        orchid.anims.play('orchidbaton', true);
        orchididle = false 
        
}
}
if (isorchidpickingtarget == true){
if (isorchidattackingcat == true){
        endorchidattacknumber = 0
        orchidcurrenttargetx = subzero.x
        orchidcurrenttargety = subzero.y
        isorchidattackingnow = true
        isorchidtargetpicked = true
        orchid.anims.play('orchidcat', true);
        orchididle = false 

        
}
}

//jago
 if (isjagopickingtarget == true){
if (isjagoattackingsword == true){
        jagocurrenttargetx = subzero.x
        jagocurrenttargety = subzero.y
        isjagoattackingnow = true
        isjagotargetpicked = true
        jago.anims.play('jagosword', true);
        jagoidle = false 
        
}
}
 if (isjagopickingtarget == true){
if (isjagoattackingplasma == true){
        jagocurrenttargetx = subzero.x
        jagocurrenttargety = subzero.y
        isjagoattackingnow = true
        isjagotargetpicked = true
        jago.anims.play('jagoplasma', true);
        jagoidle = false 
        
}
}
if (isjagopickingtarget == true){
if (isjagoattackingrkick == true){
        jagocurrenttargetx = subzero.x
        jagocurrenttargety = subzero.y
        isjagoattackingnow = true
        isjagotargetpicked = true
        jago.anims.play('jagorkick', true);
        jagoidle = false 
        
}
}
if (isjagopickingtarget == true){
if (isjagoattackingfocus == true){
        endjagoattacknumber = 0
        jagocurrenttargetx = subzero.x
        jagocurrenttargety = subzero.y
        isjagoattackingnow = true
        isjagotargetpicked = true
        jago.anims.play('jagofocus', true);
        jagoidle = false 

        
}
}
//kunglao
 if (iskunglaopickingtarget == true){
if (iskunglaoattackingpalmkick == true){
        kunglaocurrenttargetx = subzero.x
        kunglaocurrenttargety = subzero.y
        iskunglaoattackingnow = true
        iskunglaotargetpicked = true
        kunglaoidle = false 
        
}
}
if (iskunglaopickingtarget == true){
if (iskunglaoattackinghatthrow == true){
        kunglaocurrenttargetx = subzero.x
        kunglaocurrenttargety = subzero.y
        iskunglaoattackingnow = true
        iskunglaotargetpicked = true
        kunglao.anims.play('kunglaohatthrow', true);
        kunglaoidle = false 
        
}
}
if (iskunglaopickingtarget == true){
if (iskunglaoattackingwhirl == true){
        kunglaocurrenttargetx = subzero.x
        kunglaocurrenttargety = subzero.y
        iskunglaoattackingnow = true
        iskunglaotargetpicked = true
        kunglaoidle = false 
        
}
}
if (iskunglaopickingtarget == true){
if (iskunglaoattackingbrim == true){
        endkunglaoattacknumber = 0
        kunglaocurrenttargetx = subzero.x
        kunglaocurrenttargety = subzero.y
        iskunglaoattackingnow = true
        iskunglaotargetpicked = true
        kunglao.anims.play('kunglaobrim', true);
        kunglaoidle = false 

        
}
}
//terrabutton
//terrabuttons
 if (isterrapickingtarget == true){
 if (terracancastnow == true){
        
        endterracastnumber = 1
        terraspelltargetx = enemy1x
        terraspelltargety = enemy1y
        isterracastingnow = true
        isterratargetpicked = true
        terraspells.anims.play('terrafirespell', true);
        enemy1health -= 2000 + terrabonusdamageamount;
}        
}

if (isterrapickingtarget == true){
if (isterracastingice == true){
      
        endterracastnumber = 1
        terraspelltargetx = subzero.x
        terraspelltargety = subzero.y
        isterracastingnow = true
        isterratargetpicked = true
        terraspells.anims.play('terraicespell', true);
        terraidle = false 
        
}
}
if (isterrapickingtarget == true){
if (isterracastingwind == true){
       
        endterracastnumber = 1
        terraspelltargetx = subzero.x -35
        terraspelltargety = subzero.y
        isterracastingnow = true
        isterratargetpicked = true
        terraspells.anims.play('terrawindspell', true);
        terraidle = false 
        
}
}
if (isterrapickingtarget == true){
if (isterracastingearth == true){
        
        endterraattacknumber = 1
        terraspelltargetx = subzero.x
        terraspelltargety = subzero.y
        isterracastingnow = true
        isterratargetpicked = true
        terraspells.anims.play('terraearthspell', true);
        terraidle = false 

        
}
}
//sonjabuttons
//sonjabutton
 if (issonjapickingtarget == true){
if (issonjaattackinghandst == true){
        sonjacurrenttargetx = subzero.x
        sonjacurrenttargety = subzero.y
        issonjaattackingnow = true
        issonjatargetpicked = true
        sonjaidle = false 
        
}
}

 if (issonjapickingtarget == true){
if (issonjaattackingblaster == true){
        sonjacurrenttargetx = subzero.x
        sonjacurrenttargety = subzero.y
        issonjaattackingnow = true
        issonjatargetpicked = true
        sonja.anims.play('sonjablaster', true);
        sonjaidle = false 
        
}
}

});
}

//scorpionbutton

scorpion = this.physics.add.sprite(2100, 350, 'scorpionready').setInteractive();
scorpion.on('pointerdown', function (pointer) {

//kang
if (kangactive == true) {
 if (iskangpickingtarget == true){
if (iskangattackingflykick == true){
        kangcurrenttargetx = scorpion.x
        kangcurrenttargety = scorpion.y
        iskangattackingnow = true
        iskangtargetpicked = true
        kang.anims.play('kangflykick', true);
        kangidle = false 
        
}
}
 if (iskangpickingtarget == true){
if (iskangattackingfireball == true){
        kangcurrenttargetx = scorpion.x
        kangcurrenttargety = scorpion.y
        iskangattackingnow = true
        iskangtargetpicked = true
        kang.anims.play('kangfireball', true);
        kangidle = false 
        
}
}
if (iskangpickingtarget == true){
if (iskangattackingbicycle == true){
        kangcurrenttargetx = scorpion.x
        kangcurrenttargety = scorpion.y
        iskangattackingnow = true
        iskangtargetpicked = true
        kang.anims.play('kangbicycle', true);
        kangidle = false 
        
}
}
if (iskangpickingtarget == true){
if (iskangattackingdragon == true){
        endkangattacknumber = 0
        kangcurrenttargetx = scorpion.x
        kangcurrenttargety = scorpion.y
        iskangattackingnow = true
        iskangtargetpicked = true
        kangidle = false 

        
}
}
}

//spinal
if (spinalactive == true) {
 if (isspinalpickingtarget == true){
if (isspinalattackingslice == true){
        endspinalattacknumber = 0
        spinalcurrenttargetx = scorpion.x
        spinalcurrenttargety = scorpion.y
        isspinalattackingnow = true
        isspinaltargetpicked = true
        spinalidle = false 
        
}
}
 if (isspinalpickingtarget == true){
if (isspinalattackingslash == true){
        endspinalattacknumber = 0
        spinalcurrenttargetx = scorpion.x
        spinalcurrenttargety = scorpion.y
        isspinalattackingnow = true
        isspinaltargetpicked = true
        
        spinalidle = false 
        
}
}
if (isspinalpickingtarget == true){
if (isspinalattackingbash == true){
        endspinalattacknumber = 0
        spinalcurrenttargetx = scorpion.x
        spinalcurrenttargety = scorpion.y
        isspinalattackingnow = true
        isspinaltargetpicked = true
        
        spinalidle = false 
        
}
}
if (isspinalpickingtarget == true){
if (isspinalattackingspike == true){
        endspinalattacknumber = 0
        spinalcurrenttargetx = scorpion.x
        spinalcurrenttargety = scorpion.y
        isspinalattackingnow = true
        isspinaltargetpicked = true
        spinalidle = false 

        
}
}
}

//combo
if (comboactive == true) {
if (iscombopickingtarget == true){
if (iscomboattackingpunch == true){
        combocurrenttargetx = scorpion.x
        combocurrenttargety = scorpion.y
        iscomboattackingnow = true
        iscombotargetpicked = true
        comboidle = false 
        
}
}
 if (iscombopickingtarget == true){
if (iscomboattackingjumpkick == true){
        combocurrenttargetx = scorpion.x
        combocurrenttargety = scorpion.y
        iscomboattackingnow = true
        iscombotargetpicked = true
        comboidle = false 
        
}
}
if (iscombopickingtarget == true){
if (iscomboattackinggun == true){
        combocurrenttargetx = scorpion.x
        combocurrenttargety = scorpion.y
        iscomboattackingnow = true
        iscombotargetpicked = true
        comboidle = false 
        
}
}
if (iscombopickingtarget == true){
if (iscomboattackingslam == true){
        endcomboattacknumber = 0
        combocurrenttargetx = scorpion.x
        combocurrenttargety = scorpion.y
        iscomboattackingnow = true
        iscombotargetpicked = true
        comboidle = false 

        
}
}
if (iscombopickingtarget == true){
if (iscomboattackingmuscle == true){
        endcomboattacknumber = 0
        combocurrenttargetx = scorpion.x
        combocurrenttargety = scorpion.y
        iscomboattackingnow = true
        iscombotargetpicked = true
        comboidle = false 

        
}
}
}
//kano
if (iskanopickingtarget == true){
if (iskanoattackingblades == true){
        kanocurrenttargetx = scorpion.x
        kanocurrenttargety = scorpion.y
        iskanoattackingnow = true
        iskanotargetpicked = true
        kano.anims.play('kanoblades', true);
        kanoidle = false 
        
}
}
if (iskanopickingtarget == true){
if (iskanoattackingcut == true){
        endkanoattacknumber = 0
        kanocurrenttargetx = scorpion.x
        kanocurrenttargety = scorpion.y
        iskanoattackingnow = true
        iskanotargetpicked = true
        kanoidle = false 

        
}
}
if (iskanopickingtarget == true){
if (iskanoattackingkick == true){
        endkanoattacknumber = 0
        kanocurrenttargetx = scorpion.x
        kanocurrenttargety = scorpion.y
        iskanoattackingnow = true
        iskanotargetpicked = true
        kanoidle = false 

        
}
}
//orchid
 if (isorchidpickingtarget == true){
if (isorchidattackingwheel == true){
        orchidcurrenttargetx = scorpion.x
        orchidcurrenttargety = scorpion.y
        isorchidattackingnow = true
        isorchidtargetpicked = true
        orchid.anims.play('orchidwheel', true);
        orchididle = false 
        
}
}
 if (isorchidpickingtarget == true){
if (isorchidattackingfireba == true){
        orchidcurrenttargetx = scorpion.x
        orchidcurrenttargety = scorpion.y
        isorchidattackingnow = true
        isorchidtargetpicked = true
        orchid.anims.play('orchidfireba', true);
        orchididle = false 
        
}
}
if (isorchidpickingtarget == true){
if (isorchidattackingbaton == true){
        orchidcurrenttargetx = scorpion.x
        orchidcurrenttargety = scorpion.y
        isorchidattackingnow = true
        isorchidtargetpicked = true
        orchid.anims.play('orchidbaton', true);
        orchididle = false 
        
}
}
if (isorchidpickingtarget == true){
if (isorchidattackingcat == true){
        endorchidattacknumber = 0
        orchidcurrenttargetx = scorpion.x
        orchidcurrenttargety = scorpion.y
        isorchidattackingnow = true
        isorchidtargetpicked = true
        orchid.anims.play('orchidcat', true);
        orchididle = false 

        
}
}

//jago
 if (isjagopickingtarget == true){
if (isjagoattackingsword == true){
        jagocurrenttargetx = scorpion.x
        jagocurrenttargety = scorpion.y
        isjagoattackingnow = true
        isjagotargetpicked = true
        jago.anims.play('jagosword', true);
        jagoidle = false 
        
}
}
 if (isjagopickingtarget == true){
if (isjagoattackingplasma == true){
        jagocurrenttargetx = scorpion.x
        jagocurrenttargety = scorpion.y
        isjagoattackingnow = true
        isjagotargetpicked = true
        jago.anims.play('jagoplasma', true);
        jagoidle = false 
        
}
}
if (isjagopickingtarget == true){
if (isjagoattackingrkick == true){
        jagocurrenttargetx = scorpion.x
        jagocurrenttargety = scorpion.y
        isjagoattackingnow = true
        isjagotargetpicked = true
        jago.anims.play('jagorkick', true);
        jagoidle = false 
        
}
}
if (isjagopickingtarget == true){
if (isjagoattackingfocus == true){
        endjagoattacknumber = 0
        jagocurrenttargetx = scorpion.x
        jagocurrenttargety = scorpion.y
        isjagoattackingnow = true
        isjagotargetpicked = true
        jago.anims.play('jagofocus', true);
        jagoidle = false 

        
}
}
//kunglao
 if (iskunglaopickingtarget == true){
if (iskunglaoattackingpalmkick == true){
        kunglaocurrenttargetx = scorpion.x
        kunglaocurrenttargety = scorpion.y
        iskunglaoattackingnow = true
        iskunglaotargetpicked = true
        kunglaoidle = false 
        
}
}
if (iskunglaopickingtarget == true){
if (iskunglaoattackinghatthrow == true){
        kunglaocurrenttargetx = scorpion.x
        kunglaocurrenttargety = scorpion.y
        iskunglaoattackingnow = true
        iskunglaotargetpicked = true
        kunglao.anims.play('kunglaohatthrow', true);
        kunglaoidle = false 
        
}
}
if (iskunglaopickingtarget == true){
if (iskunglaoattackingwhirl == true){
        kunglaocurrenttargetx = scorpion.x
        kunglaocurrenttargety = scorpion.y
        iskunglaoattackingnow = true
        iskunglaotargetpicked = true
        kunglaoidle = false 
        
}
}
if (iskunglaopickingtarget == true){
if (iskunglaoattackingbrim == true){
        endkunglaoattacknumber = 0
        kunglaocurrenttargetx = scorpion.x
        kunglaocurrenttargety = scorpion.y
        iskunglaoattackingnow = true
        iskunglaotargetpicked = true
        kunglao.anims.play('kunglaobrim', true);
        kunglaoidle = false 

        
}
}
//terrabutton
//terrabuttons
 if (isterrapickingtarget == true){
 if (terracancastnow == true){
  
        endterracastnumber = 1
        terraspelltargetx = enemy1x
        terraspelltargety = enemy1y
        isterracastingnow = true
        isterratargetpicked = true
        terraspells.anims.play('terrafirespell', true);
        enemy1health -= 2000 + terrabonusdamageamount;
}        
}

if (isterrapickingtarget == true){
if (isterracastingice == true){
        endterracastnumber = 1
        terraspelltargetx = scorpion.x
        terraspelltargety = scorpion.y
        isterracastingnow = true
        isterratargetpicked = true
        terraspells.anims.play('terraicespell', true);
        terraidle = false 
        
}
}
if (isterrapickingtarget == true){
if (isterracastingwind == true){
        endterracastnumber = 1
        terraspelltargetx = scorpion.x -35
        terraspelltargety = scorpion.y
        isterracastingnow = true
        isterratargetpicked = true
        terraspells.anims.play('terrawindspell', true);
        terraidle = false 
        
}
}
if (isterrapickingtarget == true){
if (isterracastingearth == true){
        endterraattacknumber = 1
        terraspelltargetx = scorpion.x
        terraspelltargety = scorpion.y
        isterracastingnow = true
        isterratargetpicked = true
        terraspells.anims.play('terraearthspell', true);
        terraidle = false 

        
}
}

 if (issonjapickingtarget == true){
if (issonjaattackinghandst == true){
        sonjacurrenttargetx = scorpion.x
        sonjacurrenttargety = scorpion.y
        issonjaattackingnow = true
        issonjatargetpicked = true
        sonjaidle = false 
        
}
}

 if (issonjapickingtarget == true){
if (issonjaattackingblaster == true){
        sonjacurrenttargetx = scorpion.x
        sonjacurrenttargety = scorpion.y
        issonjaattackingnow = true
        issonjatargetpicked = true
        sonja.anims.play('sonjablaster', true);
        sonjaidle = false 
        
}
}

});




torch = this.physics.add.sprite(50, 300, 'torch');
backdragon = this.physics.add.sprite(100, 350, 'backdragon');

//timer
//timers
//************************************************************
explodetime = this.time.addEvent({ delay: 100, callback: explodetime, callbackScope: this, loop: true,startAt: 1 });
enemy1actiontime = this.time.addEvent({ delay: 50, callback: enemy1actiontime, callbackScope: this, loop: true,startAt: 1 });
kangattacktime = this.time.addEvent({ delay: 50, callback: kangonattack, callbackScope: this, loop: true,startAt: 1 });
comboattacktime = this.time.addEvent({ delay: 50, callback: comboonattack, callbackScope: this, loop: true,startAt: 1 });
spinalattacktime = this.time.addEvent({ delay: 50, callback: spinalonattack, callbackScope: this, loop: true,startAt: 1 });
kanoattacktime = this.time.addEvent({ delay: 50, callback: kanoonattack, callbackScope: this, loop: true,startAt: 1 });
orchidattacktime = this.time.addEvent({ delay: 50, callback: orchidonattack, callbackScope: this, loop: true,startAt: 1 });
jagoattacktime = this.time.addEvent({ delay: 50, callback: jagoonattack, callbackScope: this, loop: true,startAt: 1 });
kunglaoattacktime = this.time.addEvent({ delay: 50, callback: kunglaoonattack, callbackScope: this, loop: true,startAt: 1 });
sonjaattacktime = this.time.addEvent({ delay: 50, callback: sonjaonattack, callbackScope: this, loop: true,startAt: 1 });
terraattacktime = this.time.addEvent({ delay: 2000, callback: terraonattack, callbackScope: this, loop: true,startAt: 1 });
endattacktime = this.time.addEvent({ delay: 1000, callback: endattacks, callbackScope: this, loop: true,startAt: 1 });
gameeventtime = this.time.addEvent({ delay: 250, callback: gameevents, callbackScope: this, loop: true,startAt: 1 });
immuneeventtime = this.time.addEvent({ delay: 3000, callback: immunetime, callbackScope: this, loop: true,startAt: 1 });
bufftime = this.time.addEvent({ delay: 1000, callback: bufftime, callbackScope: this, loop: true,startAt: 1 });
actionqtime = this.time.addEvent({ delay: 100, callback: actionqtime, callbackScope: this, loop: true,startAt: 1 });

chargetime = this.time.addEvent({ delay: 100, callback: chargetime, callbackScope: this, loop: true,startAt: 1 });
support1actiontime = this.time.addEvent({ delay: 200, callback: support1actiontime, callbackScope: this, loop: true,startAt: 1 });
support2actiontime = this.time.addEvent({ delay: 200, callback: support2actiontime, callbackScope: this, loop: true,startAt: 1 });
leader1actiontime = this.time.addEvent({ delay: 200, callback: leader1actiontime, callbackScope: this, loop: true,startAt: 1 });
leader2actiontime = this.time.addEvent({ delay: 200, callback: leader2actiontime, callbackScope: this, loop: true,startAt: 1 });
fighter1actiontime = this.time.addEvent({ delay: 200, callback: fighter1actiontime, callbackScope: this, loop: true,startAt: 1 });
fighter2actiontime = this.time.addEvent({ delay: 200, callback: fighter2actiontime, callbackScope: this, loop: true,startAt: 1 });
fighter3actiontime = this.time.addEvent({ delay: 200, callback: fighter3actiontime, callbackScope: this, loop: true,startAt: 1 });
fighter4actiontime = this.time.addEvent({ delay: 200, callback: fighter4actiontime, callbackScope: this, loop: true,startAt: 1 });
fighter5actiontime = this.time.addEvent({ delay: 200, callback: fighter5actiontime, callbackScope: this, loop: true,startAt: 1 });
fighter6actiontime = this.time.addEvent({ delay: 200, callback: fighter6actiontime, callbackScope: this, loop: true,startAt: 1 });

//*************************************************************
//beginleader
//leaderstuff
//buttons



//kang
if (this.leader1name == 'Kang') {
leader1nameplate = this.physics.add.sprite(254, 603, 'kangname').setOrigin(0, 0);
activeleader1name = 'Kang'
kang = this.physics.add.sprite(leader1x, leader1y, 'kang').setInteractive();
kang.on('pointerdown', function (pointer) {
supportfleader1()
if (isrosacastingcure == true)
{
rosacuresound.play();
}
if (isrosacastingheal == true)
{
rosahealsound.play();
}
if (isrosacastingfast == true)
{
rosafastsound.play();
}
if (isrosacastingshell == true)
{
rosashellsound.play();
}
});
loadkangleader1()
}


else if (this.leader1name == 'Glacius') {
leader1nameplate = this.physics.add.sprite(254, 603, 'glaciusname').setOrigin(0, 0);
activeleader1name = 'Glacius'
glacius = this.physics.add.sprite(leader1x, leader1y, 'glacius').setInteractive();
glacius.on('pointerdown', function (pointer) {
supportfleader1()
if (isrosacastingcure == true)
{
rosacuresound.play();
}
if (isrosacastingheal == true)
{
rosahealsound.play();
}
if (isrosacastingfast == true)
{
rosafastsound.play();
}
if (isrosacastingshell == true)
{
rosashellsound.play();
}
});
loadglaciusleader1()
}

else if (this.leader1name == 'Combo') {
leader1nameplate = this.physics.add.sprite(254, 603, 'comboname').setOrigin(0, 0);
activeleader1name = 'Combo'
combo = this.physics.add.sprite(leader1x, leader1y, 'combo').setInteractive();
combo.on('pointerdown', function (pointer) {
supportfleader1()
if (isrosacastingcure == true)
{
rosacuresound.play();
}
if (isrosacastingheal == true)
{
rosahealsound.play();
}
if (isrosacastingfast == true)
{
rosafastsound.play();
}
if (isrosacastingshell == true)
{
rosashellsound.play();
}
});
loadcomboleader1()
}
else if (this.leader1name == 'Spinal') {
leader1nameplate = this.physics.add.sprite(254, 603, 'spinalname').setOrigin(0, 0);
activeleader1name = 'Spinal'
spinal = this.physics.add.sprite(leader1x, leader1y, 'spinal').setInteractive();
spinal.on('pointerdown', function (pointer) {
supportfleader1()
if (isrosacastingcure == true)
{
rosacuresound.play();
}
if (isrosacastingheal == true)
{
rosahealsound.play();
}
if (isrosacastingfast == true)
{
rosafastsound.play();
}
if (isrosacastingshell == true)
{
rosashellsound.play();
}
});
loadspinalleader1()
}

else if (this.leader1name == 'Cecil') {
leader1nameplate = this.physics.add.sprite(254, 603, 'cecilname').setOrigin(0, 0);
activeleader1name = 'Cecil'
cecil = this.physics.add.sprite(leader1x, leader1y, 'cecil').setInteractive();
cecil.on('pointerdown', function (pointer) {
this.setTint(0x000000);
supportfleader1()
if (isrosacastingcure == true)
{
rosacuresound.play();
}
if (isrosacastingheal == true)
{
rosahealsound.play();
}
if (isrosacastingfast == true)
{
rosafastsound.play();
}
if (isrosacastingshell == true)
{
rosashellsound.play();
}
});
loadcecilleader1()
}

if (this.leader2name == 'Kang') {
leader2nameplate = this.physics.add.sprite(381, 603, 'kangname').setOrigin(0, 0);
activeleader2name = 'Kang'
kang = this.physics.add.sprite(leader2x, leader2y, 'kang').setInteractive();
kang.on('pointerdown', function (pointer) {
supportfleader2()
if (isrosacastingcure == true)
{
rosacuresound.play();
}
if (isrosacastingheal == true)
{
rosahealsound.play();
}
if (isrosacastingfast == true)
{
rosafastsound.play();
}
if (isrosacastingshell == true)
{
rosashellsound.play();
}
});
loadkangleader2()
}

else if (this.leader2name == 'Glacius') {
leader2nameplate = this.physics.add.sprite(381, 603, 'glaciusname').setOrigin(0, 0);
activeleader2name = 'Glacius'
glacius = this.physics.add.sprite(leader2x, leader2y, 'glacius').setInteractive();
glacius.on('pointerdown', function (pointer) {
supportfleader2()
if (isrosacastingcure == true)
{
rosacuresound.play();
}
if (isrosacastingheal == true)
{
rosahealsound.play();
}
if (isrosacastingfast == true)
{
rosafastsound.play();
}
if (isrosacastingshell == true)
{
rosashellsound.play();
}
});
loadglaciusleader2()
}

else if (this.leader2name == 'Combo') {
leader2nameplate = this.physics.add.sprite(381, 603, 'comboname').setOrigin(0, 0);
activeleader2name = 'Combo'
combo = this.physics.add.sprite(leader2x, leader2y, 'combo').setInteractive();
combo.on('pointerdown', function (pointer) {
supportfleader2()
if (isrosacastingcure == true)
{
rosacuresound.play();
}
if (isrosacastingheal == true)
{
rosahealsound.play();
}
if (isrosacastingfast == true)
{
rosafastsound.play();
}
if (isrosacastingshell == true)
{
rosashellsound.play();
}
});
loadcomboleader2()
}
else if (this.leader2name == 'Spinal') {
leader2nameplate = this.physics.add.sprite(381, 603, 'spinalname').setOrigin(0, 0);
activeleader2name = 'Spinal'
spinal = this.physics.add.sprite(leader2x, leader2y, 'spinal').setInteractive();
spinal.on('pointerdown', function (pointer) {
supportfleader2()
if (isrosacastingcure == true)
{
rosacuresound.play();
}
if (isrosacastingheal == true)
{
rosahealsound.play();
}
if (isrosacastingfast == true)
{
rosafastsound.play();
}
if (isrosacastingshell == true)
{
rosashellsound.play();
}
});
loadspinalleader2()
}

else if (this.leader2name == 'Cecil') {
leader2nameplate = this.physics.add.sprite(381, 603, 'cecilname').setOrigin(0, 0);
activeleader2name = 'Cecil'
cecil = this.physics.add.sprite(leader2x, leader2y, 'cecil').setInteractive();
cecil.on('pointerdown', function (pointer) {
this.setTint(0x000000);
supportfleader2()
if (isrosacastingcure == true)
{
rosacuresound.play();
}
if (isrosacastingheal == true)
{
rosahealsound.play();
}
if (isrosacastingfast == true)
{
rosafastsound.play();
}
if (isrosacastingshell == true)
{
rosashellsound.play();
}
});
loadcecilleader2()
}

if (this.fighter1name == 'Kano') {
fighter1nameplate = this.physics.add.sprite(508, 603, 'kanoname').setOrigin(0, 0);
activefighter1name = 'Kano'
kano = this.physics.add.sprite(fighter1x, fighter1y, 'kano').setInteractive();
kano.on('pointerdown', function (pointer) {
supportffighter1()
if (isrosacastingcure == true)
{
rosacuresound.play();
}
if (isrosacastingheal == true)
{
rosahealsound.play();
}
if (isrosacastingfast == true)
{
rosafastsound.play();
}
if (isrosacastingshell == true)
{
rosashellsound.play();
}
});
loadkanofighter1()
}
if (this.fighter2name == 'Kano') {
fighter2nameplate = this.physics.add.sprite(635, 603, 'kanoname').setOrigin(0, 0);
activefighter2name = 'Kano'
kano = this.physics.add.sprite(fighter2x, fighter2y, 'kano').setInteractive();
kano.on('pointerdown', function (pointer) {
supportffighter2()
if (isrosacastingcure == true)
{
rosacuresound.play();
}
if (isrosacastingheal == true)
{
rosahealsound.play();
}
if (isrosacastingfast == true)
{
rosafastsound.play();
}
if (isrosacastingshell == true)
{
rosashellsound.play();
}
});
loadkanofighter2()
}
if (this.fighter3name == 'Kano') {
fighter3nameplate = this.physics.add.sprite(762, 603, 'kanoname').setOrigin(0, 0);
activefighter3name = 'Kano'
kano = this.physics.add.sprite(fighter3x, fighter3y, 'kano').setInteractive();
kano.on('pointerdown', function (pointer) {
supportffighter3()
if (isrosacastingcure == true)
{
rosacuresound.play();
}
if (isrosacastingheal == true)
{
rosahealsound.play();
}
if (isrosacastingfast == true)
{
rosafastsound.play();
}
if (isrosacastingshell == true)
{
rosashellsound.play();
}
});
loadkanofighter3()
}
if (this.fighter4name == 'Kano') {
fighter4nameplate = this.physics.add.sprite(889, 603, 'kanoname').setOrigin(0, 0);
activefighter4name = 'Kano'
kano = this.physics.add.sprite(fighter4x, fighter4y, 'kano').setInteractive();
kano.on('pointerdown', function (pointer) {
supportffighter4()
if (isrosacastingcure == true)
{
rosacuresound.play();
}
if (isrosacastingheal == true)
{
rosahealsound.play();
}
if (isrosacastingfast == true)
{
rosafastsound.play();
}
if (isrosacastingshell == true)
{
rosashellsound.play();
}
});
loadkanofighter4()
}
if (this.fighter5name == 'Kano') {
fighter5nameplate = this.physics.add.sprite(1016, 603, 'kanoname').setOrigin(0, 0);
activefighter5name = 'Kano'
kano = this.physics.add.sprite(fighter5x, fighter5y, 'kano').setInteractive();
kano.on('pointerdown', function (pointer) {
supportffighter5()
if (isrosacastingcure == true)
{
rosacuresound.play();
}
if (isrosacastingheal == true)
{
rosahealsound.play();
}
if (isrosacastingfast == true)
{
rosafastsound.play();
}
if (isrosacastingshell == true)
{
rosashellsound.play();
}
});
loadkanofighter5()
}
if (this.fighter6name == 'Kano') {
fighter6nameplate = this.physics.add.sprite(1143, 603, 'kanoname').setOrigin(0, 0);
activefighter6name = 'Kano'
kano = this.physics.add.sprite(fighter6x, fighter6y, 'kano').setInteractive();
kano.on('pointerdown', function (pointer) {
supportffighter6()
if (isrosacastingcure == true)
{
rosacuresound.play();
}
if (isrosacastingheal == true)
{
rosahealsound.play();
}
if (isrosacastingfast == true)
{
rosafastsound.play();
}
if (isrosacastingshell == true)
{
rosashellsound.play();
}
});
loadkanofighter6()
}

if (this.fighter1name == 'Orchid') {
fighter1nameplate = this.physics.add.sprite(508, 603, 'orchidname').setOrigin(0, 0);
activefighter1name = 'Orchid'
orchid = this.physics.add.sprite(fighter1x, fighter1y, 'orchid').setInteractive();
orchid.on('pointerdown', function (pointer) {
supportffighter1()
if (isrosacastingcure == true)
{
rosacuresound.play();
}
if (isrosacastingheal == true)
{
rosahealsound.play();
}
if (isrosacastingfast == true)
{
rosafastsound.play();
}
if (isrosacastingshell == true)
{
rosashellsound.play();
}
});
loadorchidfighter1()
}
if (this.fighter2name == 'Orchid') {
fighter2nameplate = this.physics.add.sprite(635, 603, 'orchidname').setOrigin(0, 0);
activefighter2name = 'Orchid'
orchid = this.physics.add.sprite(fighter2x, fighter2y, 'orchid').setInteractive();
orchid.on('pointerdown', function (pointer) {
supportffighter2()
if (isrosacastingcure == true)
{
rosacuresound.play();
}
if (isrosacastingheal == true)
{
rosahealsound.play();
}
if (isrosacastingfast == true)
{
rosafastsound.play();
}
if (isrosacastingshell == true)
{
rosashellsound.play();
}
});
loadorchidfighter2()
}
if (this.fighter3name == 'Orchid') {
fighter3nameplate = this.physics.add.sprite(762, 603, 'orchidname').setOrigin(0, 0);
activefighter3name = 'Orchid'
orchid = this.physics.add.sprite(fighter3x, fighter3y, 'orchid').setInteractive();
orchid.on('pointerdown', function (pointer) {
supportffighter3()
if (isrosacastingcure == true)
{
rosacuresound.play();
}
if (isrosacastingheal == true)
{
rosahealsound.play();
}
if (isrosacastingfast == true)
{
rosafastsound.play();
}
if (isrosacastingshell == true)
{
rosashellsound.play();
}
});
loadorchidfighter3()
}
if (this.fighter4name == 'Orchid') {
fighter4nameplate = this.physics.add.sprite(889, 603, 'orchidname').setOrigin(0, 0);
activefighter4name = 'Orchid'
orchid = this.physics.add.sprite(fighter4x, fighter4y, 'orchid').setInteractive();
orchid.on('pointerdown', function (pointer) {
supportffighter4()
if (isrosacastingcure == true)
{
rosacuresound.play();
}
if (isrosacastingheal == true)
{
rosahealsound.play();
}
if (isrosacastingfast == true)
{
rosafastsound.play();
}
if (isrosacastingshell == true)
{
rosashellsound.play();
}
});
loadorchidfighter4()
}
if (this.fighter5name == 'Orchid') {
fighter5nameplate = this.physics.add.sprite(1016, 603, 'orchidname').setOrigin(0, 0);
activefighter5name = 'Orchid'
orchid = this.physics.add.sprite(fighter5x, fighter5y, 'orchid').setInteractive();
orchid.on('pointerdown', function (pointer) {
supportffighter5()
if (isrosacastingcure == true)
{
rosacuresound.play();
}
if (isrosacastingheal == true)
{
rosahealsound.play();
}
if (isrosacastingfast == true)
{
rosafastsound.play();
}
if (isrosacastingshell == true)
{
rosashellsound.play();
}
});
loadorchidfighter5()
}
if (this.fighter6name == 'Orchid') {
fighter6nameplate = this.physics.add.sprite(1143, 603, 'orchidname').setOrigin(0, 0);
activefighter6name = 'Orchid'
orchid = this.physics.add.sprite(fighter6x, fighter6y, 'orchid').setInteractive();
orchid.on('pointerdown', function (pointer) {
supportffighter6()
if (isrosacastingcure == true)
{
rosacuresound.play();
}
if (isrosacastingheal == true)
{
rosahealsound.play();
}
if (isrosacastingfast == true)
{
rosafastsound.play();
}
if (isrosacastingshell == true)
{
rosashellsound.play();
}
});
loadorchidfighter6()
}

if (this.fighter1name == 'Jago') {
fighter1nameplate = this.physics.add.sprite(508, 603, 'jagoname').setOrigin(0, 0);
activefighter1name = 'Jago'
jago = this.physics.add.sprite(fighter1x, fighter1y, 'jago').setInteractive();
jago.on('pointerdown', function (pointer) {
supportffighter1()
if (isrosacastingcure == true)
{
rosacuresound.play();
}
if (isrosacastingheal == true)
{
rosahealsound.play();
}
if (isrosacastingfast == true)
{
rosafastsound.play();
}
if (isrosacastingshell == true)
{
rosashellsound.play();
}
});
loadjagofighter1()
}
if (this.fighter2name == 'Jago') {
fighter2nameplate = this.physics.add.sprite(635, 603, 'jagoname').setOrigin(0, 0);
activefighter2name = 'Jago'
jago = this.physics.add.sprite(fighter2x, fighter2y, 'jago').setInteractive();
jago.on('pointerdown', function (pointer) {
supportffighter2()
if (isrosacastingcure == true)
{
rosacuresound.play();
}
if (isrosacastingheal == true)
{
rosahealsound.play();
}
if (isrosacastingfast == true)
{
rosafastsound.play();
}
if (isrosacastingshell == true)
{
rosashellsound.play();
}
});
loadjagofighter2()
}
if (this.fighter3name == 'Jago') {
fighter3nameplate = this.physics.add.sprite(762, 603, 'jagoname').setOrigin(0, 0);
activefighter3name = 'Jago'
jago = this.physics.add.sprite(fighter3x, fighter3y, 'jago').setInteractive();
jago.on('pointerdown', function (pointer) {
supportffighter3()
if (isrosacastingcure == true)
{
rosacuresound.play();
}
if (isrosacastingheal == true)
{
rosahealsound.play();
}
if (isrosacastingfast == true)
{
rosafastsound.play();
}
if (isrosacastingshell == true)
{
rosashellsound.play();
}
});
loadjagofighter3()
}
if (this.fighter4name == 'Jago') {
fighter4nameplate = this.physics.add.sprite(889, 603, 'jagoname').setOrigin(0, 0);
activefighter4name = 'Jago'
jago = this.physics.add.sprite(fighter4x, fighter4y, 'jago').setInteractive();
jago.on('pointerdown', function (pointer) {
supportffighter4()
if (isrosacastingcure == true)
{
rosacuresound.play();
}
if (isrosacastingheal == true)
{
rosahealsound.play();
}
if (isrosacastingfast == true)
{
rosafastsound.play();
}
if (isrosacastingshell == true)
{
rosashellsound.play();
}
});
loadjagofighter4()
}
if (this.fighter5name == 'Jago') {
fighter5nameplate = this.physics.add.sprite(1016, 603, 'jagoname').setOrigin(0, 0);
activefighter5name = 'Jago'
jago = this.physics.add.sprite(fighter5x, fighter5y, 'jago').setInteractive();
jago.on('pointerdown', function (pointer) {
supportffighter5()
if (isrosacastingcure == true)
{
rosacuresound.play();
}
if (isrosacastingheal == true)
{
rosahealsound.play();
}
if (isrosacastingfast == true)
{
rosafastsound.play();
}
if (isrosacastingshell == true)
{
rosashellsound.play();
}
});
loadjagofighter5()
}
if (this.fighter6name == 'Jago') {
fighter6nameplate = this.physics.add.sprite(1143, 603, 'jagoname').setOrigin(0, 0);
activefighter6name = 'Jago'
jago = this.physics.add.sprite(fighter6x, fighter6y, 'jago').setInteractive();
jago.on('pointerdown', function (pointer) {
supportffighter6()
if (isrosacastingcure == true)
{
rosacuresound.play();
}
if (isrosacastingheal == true)
{
rosahealsound.play();
}
if (isrosacastingfast == true)
{
rosafastsound.play();
}
if (isrosacastingshell == true)
{
rosashellsound.play();
}
});
loadjagofighter6()
}

if (this.fighter1name == 'Kunglao') {
fighter1nameplate = this.physics.add.sprite(508, 603, 'kunglaoname').setOrigin(0, 0);
kunglao = this.physics.add.sprite(fighter1x, fighter1y, 'kunglao').setInteractive();
kunglao.on('pointerdown', function (pointer) {
supportffighter1()
if (isrosacastingcure == true)
{
rosacuresound.play();
}
if (isrosacastingheal == true)
{
rosahealsound.play();
}
if (isrosacastingfast == true)
{
rosafastsound.play();
}
if (isrosacastingshell == true)
{
rosashellsound.play();
}
});
loadkunglaofighter1()
}
if (this.fighter2name == 'Kunglao') {
fighter2nameplate = this.physics.add.sprite(635, 603, 'kunglaoname').setOrigin(0, 0);
kunglao = this.physics.add.sprite(fighter2x, fighter2y, 'kunglao').setInteractive();
kunglao.on('pointerdown', function (pointer) {
supportffighter2()
if (isrosacastingcure == true)
{
rosacuresound.play();
}
if (isrosacastingheal == true)
{
rosahealsound.play();
}
if (isrosacastingfast == true)
{
rosafastsound.play();
}
if (isrosacastingshell == true)
{
rosashellsound.play();
}
});
loadkunglaofighter2()
}
if (this.fighter3name == 'Kunglao') {
fighter3nameplate = this.physics.add.sprite(762, 603, 'kunglaoname').setOrigin(0, 0);
kunglao = this.physics.add.sprite(fighter3x, fighter3y, 'kunglao').setInteractive();
kunglao.on('pointerdown', function (pointer) {
supportffighter3()
if (isrosacastingcure == true)
{
rosacuresound.play();
}
if (isrosacastingheal == true)
{
rosahealsound.play();
}
if (isrosacastingfast == true)
{
rosafastsound.play();
}
if (isrosacastingshell == true)
{
rosashellsound.play();
}
});
loadkunglaofighter3()
}
if (this.fighter4name == 'Kunglao') {
fighter4nameplate = this.physics.add.sprite(889, 603, 'kunglaoname').setOrigin(0, 0);
kunglao = this.physics.add.sprite(fighter4x, fighter4y, 'kunglao').setInteractive();
kunglao.on('pointerdown', function (pointer) {
supportffighter4()
if (isrosacastingcure == true)
{
rosacuresound.play();
}
if (isrosacastingheal == true)
{
rosahealsound.play();
}
if (isrosacastingfast == true)
{
rosafastsound.play();
}
if (isrosacastingshell == true)
{
rosashellsound.play();
}
});
loadkunglaofighter4()
}
if (this.fighter5name == 'Kunglao') {
fighter5nameplate = this.physics.add.sprite(1016, 603, 'kunglaoname').setOrigin(0, 0);
kunglao = this.physics.add.sprite(fighter5x, fighter5y, 'kunglao').setInteractive();
kunglao.on('pointerdown', function (pointer) {
supportffighter5()
if (isrosacastingcure == true)
{
rosacuresound.play();
}
if (isrosacastingheal == true)
{
rosahealsound.play();
}
if (isrosacastingfast == true)
{
rosafastsound.play();
}
if (isrosacastingshell == true)
{
rosashellsound.play();
}
});
loadkunglaofighter5()
}
if (this.fighter6name == 'Kunglao') {
fighter6nameplate = this.physics.add.sprite(1143, 603, 'kunglaoname').setOrigin(0, 0);
kunglao = this.physics.add.sprite(fighter6x, fighter6y, 'kunglao').setInteractive();
kunglao.on('pointerdown', function (pointer) {
supportffighter6()
if (isrosacastingcure == true)
{
rosacuresound.play();
}
if (isrosacastingheal == true)
{
rosahealsound.play();
}
if (isrosacastingfast == true)
{
rosafastsound.play();
}
if (isrosacastingshell == true)
{
rosashellsound.play();
}
});
loadkunglaofighter6()
}

if (this.fighter1name == 'Terra') {
fighter1nameplate = this.physics.add.sprite(508, 603, 'terraname').setOrigin(0, 0);
terra = this.physics.add.sprite(fighter1x, fighter1y, 'terra').setInteractive();
terra.on('pointerdown', function (pointer) {
supportffighter1()
if (isrosacastingcure == true)
{
rosacuresound.play();
}
if (isrosacastingheal == true)
{
rosahealsound.play();
}
if (isrosacastingfast == true)
{
rosafastsound.play();
}
if (isrosacastingshell == true)
{
rosashellsound.play();
}
});
loadterrafighter1()
}
if (this.fighter2name == 'Terra') {
fighter2nameplate = this.physics.add.sprite(635, 603, 'terraname').setOrigin(0, 0);
terra = this.physics.add.sprite(fighter2x, fighter2y, 'terra').setInteractive();
terra.on('pointerdown', function (pointer) {
supportffighter2()
if (isrosacastingcure == true)
{
rosacuresound.play();
}
if (isrosacastingheal == true)
{
rosahealsound.play();
}
if (isrosacastingfast == true)
{
rosafastsound.play();
}
if (isrosacastingshell == true)
{
rosashellsound.play();
}
});
loadterrafighter2()
}
if (this.fighter3name == 'Terra') {
fighter3nameplate = this.physics.add.sprite(762, 603, 'terraname').setOrigin(0, 0);
terra = this.physics.add.sprite(fighter3x, fighter3y, 'terra').setInteractive();
terra.on('pointerdown', function (pointer) {
supportffighter3()
if (isrosacastingcure == true)
{
rosacuresound.play();
}
if (isrosacastingheal == true)
{
rosahealsound.play();
}
if (isrosacastingfast == true)
{
rosafastsound.play();
}
if (isrosacastingshell == true)
{
rosashellsound.play();
}
});
loadterrafighter3()
}
if (this.fighter4name == 'Terra') {
fighter4nameplate = this.physics.add.sprite(889, 603, 'terraname').setOrigin(0, 0);
terra = this.physics.add.sprite(fighter4x, fighter4y, 'terra').setInteractive();
terra.on('pointerdown', function (pointer) {
supportffighter4()
if (isrosacastingcure == true)
{
rosacuresound.play();
}
if (isrosacastingheal == true)
{
rosahealsound.play();
}
if (isrosacastingfast == true)
{
rosafastsound.play();
}
if (isrosacastingshell == true)
{
rosashellsound.play();
}
});
loadterrafighter4()
}
if (this.fighter5name == 'Terra') {
fighter5nameplate = this.physics.add.sprite(1016, 603, 'terraname').setOrigin(0, 0);
terra = this.physics.add.sprite(fighter5x, fighter5y, 'terra').setInteractive();
terra.on('pointerdown', function (pointer) {
supportffighter5()
if (isrosacastingcure == true)
{
rosacuresound.play();
}
if (isrosacastingheal == true)
{
rosahealsound.play();
}
if (isrosacastingfast == true)
{
rosafastsound.play();
}
if (isrosacastingshell == true)
{
rosashellsound.play();
}
});
loadterrafighter5()
}
if (this.fighter6name == 'Terra') {
fighter6nameplate = this.physics.add.sprite(1143, 603, 'terraname').setOrigin(0, 0);
terra = this.physics.add.sprite(fighter6x, fighter6y, 'terra').setInteractive();
terra.on('pointerdown', function (pointer) {
supportffighter6()
if (isrosacastingcure == true)
{
rosacuresound.play();
}
if (isrosacastingheal == true)
{
rosahealsound.play();
}
if (isrosacastingfast == true)
{
rosafastsound.play();
}
if (isrosacastingshell == true)
{
rosashellsound.play();
}
});
loadterrafighter6()
}

if (this.fighter1name == 'Sonja') {
fighter1nameplate = this.physics.add.sprite(508, 603, 'sonjaname').setOrigin(0, 0);
sonja = this.physics.add.sprite(fighter1x, fighter1y, 'sonja').setInteractive();
sonja.on('pointerdown', function (pointer) {
supportffighter1()
if (isrosacastingcure == true)
{
rosacuresound.play();
}
if (isrosacastingheal == true)
{
rosahealsound.play();
}
if (isrosacastingfast == true)
{
rosafastsound.play();
}
if (isrosacastingshell == true)
{
rosashellsound.play();
}
});
loadsonjafighter1()
}
if (this.fighter2name == 'Sonja') {
fighter2nameplate = this.physics.add.sprite(635, 603, 'sonjaname').setOrigin(0, 0);
sonja = this.physics.add.sprite(fighter2x, fighter2y, 'sonja').setInteractive();
sonja.on('pointerdown', function (pointer) {
supportffighter2()
if (isrosacastingcure == true)
{
rosacuresound.play();
}
if (isrosacastingheal == true)
{
rosahealsound.play();
}
if (isrosacastingfast == true)
{
rosafastsound.play();
}
if (isrosacastingshell == true)
{
rosashellsound.play();
}
});
loadsonjafighter2()
}
if (this.fighter3name == 'Sonja') {
fighter3nameplate = this.physics.add.sprite(762, 603, 'sonjaname').setOrigin(0, 0);
sonja = this.physics.add.sprite(fighter3x, fighter3y, 'sonja').setInteractive();
sonja.on('pointerdown', function (pointer) {
supportffighter3()
if (isrosacastingcure == true)
{
rosacuresound.play();
}
if (isrosacastingheal == true)
{
rosahealsound.play();
}
if (isrosacastingfast == true)
{
rosafastsound.play();
}
if (isrosacastingshell == true)
{
rosashellsound.play();
}
});
loadsonjafighter3()
}
if (this.fighter4name == 'Sonja') {
fighter4nameplate = this.physics.add.sprite(889, 603, 'sonjaname').setOrigin(0, 0);
sonja = this.physics.add.sprite(fighter4x, fighter4y, 'sonja').setInteractive();
sonja.on('pointerdown', function (pointer) {
supportffighter4()
if (isrosacastingcure == true)
{
rosacuresound.play();
}
if (isrosacastingheal == true)
{
rosahealsound.play();
}
if (isrosacastingfast == true)
{
rosafastsound.play();
}
if (isrosacastingshell == true)
{
rosashellsound.play();
}
});
loadsonjafighter4()
}
if (this.fighter5name == 'Sonja') {
fighter5nameplate = this.physics.add.sprite(1016, 603, 'sonjaname').setOrigin(0, 0);
sonja = this.physics.add.sprite(fighter5x, fighter5y, 'sonja').setInteractive();
sonja.on('pointerdown', function (pointer) {
supportffighter5()
if (isrosacastingcure == true)
{
rosacuresound.play();
}
if (isrosacastingheal == true)
{
rosahealsound.play();
}
if (isrosacastingfast == true)
{
rosafastsound.play();
}
if (isrosacastingshell == true)
{
rosashellsound.play();
}
});
loadsonjafighter5()
}
if (this.fighter6name == 'Sonja') {
fighter6nameplate = this.physics.add.sprite(1143, 603, 'sonjaname').setOrigin(0, 0);
sonja = this.physics.add.sprite(fighter6x, fighter6y, 'sonja').setInteractive();
sonja.on('pointerdown', function (pointer) {
supportffighter6()
if (isrosacastingcure == true)
{
rosacuresound.play();
}
if (isrosacastingheal == true)
{
rosahealsound.play();
}
if (isrosacastingfast == true)
{
rosafastsound.play();
}
if (isrosacastingshell == true)
{
rosashellsound.play();
}
});
loadsonjafighter6()
}

if (this.support1name == 'Rosa') {
support1nameplate = this.physics.add.sprite(0, 603, 'rosaname').setOrigin(0, 0);
rosa = this.physics.add.sprite(support1x, support1y, 'rosa').setInteractive();
rosa.on('pointerdown', function (pointer) {
supportfsupport1()
if (isrosacastingcure == true)
{
rosacuresound.play();
}
if (isrosacastingheal == true)
{
rosahealsound.play();
}
if (isrosacastingfast == true)
{
rosafastsound.play();
}
if (isrosacastingshell == true)
{
rosashellsound.play();
}
});
loadrosasupport1()
}
if (this.support2name == 'Rosa') {
support2nameplate = this.physics.add.sprite(127, 603, 'rosaname').setOrigin(0, 0);
rosa = this.physics.add.sprite(support2x, support2y, 'rosa').setInteractive();
rosa.on('pointerdown', function (pointer) {
supportfsupport2()
if (isrosacastingcure == true)
{
rosacuresound.play();
}
if (isrosacastingheal == true)
{
rosahealsound.play();
}
if (isrosacastingfast == true)
{
rosafastsound.play();
}
if (isrosacastingshell == true)
{
rosashellsound.play();
}
});
loadrosasupport2()
}

if (this.support1name == 'Mog') {
support1nameplate = this.physics.add.sprite(0, 603, 'mogname').setOrigin(0, 0);
mog = this.physics.add.sprite(support1x, support1y, 'mog').setInteractive();
mog.on('pointerdown', function (pointer) {
supportfsupport1()
if (isrosacastingcure == true)
{
rosacuresound.play();
}
if (isrosacastingheal == true)
{
rosahealsound.play();
}
if (isrosacastingfast == true)
{
rosafastsound.play();
}
if (isrosacastingshell == true)
{
rosashellsound.play();
}
});
loadmogsupport1()
}
if (this.support2name == 'Mog') {
support2nameplate = this.physics.add.sprite(127, 603, 'mogname').setOrigin(0, 0);
mog = this.physics.add.sprite(support2x, support2y, 'mog').setInteractive();
mog.on('pointerdown', function (pointer) {
supportfsupport2()
if (isrosacastingcure == true)
{
rosacuresound.play();
}
if (isrosacastingheal == true)
{
rosahealsound.play();
}
if (isrosacastingfast == true)
{
rosafastsound.play();
}
if (isrosacastingshell == true)
{
rosashellsound.play();
}
});
loadmogsupport2()
}


else if (this.fighter1name == 'Sindel') {
fighter1nameplate = this.physics.add.sprite(508, 603, 'sindelname').setOrigin(0, 0);
sindel = this.physics.add.sprite(fighter1x, fighter1y, 'sindel').setInteractive();
sindel.on('pointerdown', function (pointer) {
this.setTint(0x000000);
});
activefighter1name = 'sindel'
sindelactive = true
sindel.setScale(1.3, 1.3);
}
else if (this.fighter1name == 'Kabal') {
fighter1nameplate = this.physics.add.sprite(508, 603, 'kabalname').setOrigin(0, 0);
kabal = this.physics.add.sprite(fighter1x, fighter1y, 'kabal').setInteractive();
kabal.on('pointerdown', function (pointer) {
this.setTint(0x000000);
});
activefighter1name = 'kabal'
kabalactive = true
kabal.setScale(1.3, 1.3);
}

else if (this.fighter1name == 'Cyrax') {
fighter1nameplate = this.physics.add.sprite(508, 603, 'cyraxname').setOrigin(0, 0);
cyrax = this.physics.add.sprite(fighter1x, fighter1y, 'cyrax').setInteractive();
cyrax.on('pointerdown', function (pointer) {
this.setTint(0x000000);
});
activefighter1name = 'cyrax'
cyraxactive = true
cyrax.setScale(1.3, 1.3);
}
else if (this.fighter1name == 'Cyan') {
fighter1nameplate = this.physics.add.sprite(508, 603, 'cyanname').setOrigin(0, 0);
cyan = this.physics.add.sprite(fighter1x, fighter1y, 'cyan').setInteractive();
cyan.on('pointerdown', function (pointer) {
this.setTint(0x000000);
});
activefighter1name = 'cyan'
cyanactive = true
cyan.setScale(1.3, 1.3);
}
else if (this.fighter1name == 'Golbez') {
fighter1nameplate = this.physics.add.sprite(508, 603, 'golbezname').setOrigin(0, 0);
golbez = this.physics.add.sprite(fighter1x, fighter1y, 'golbez').setInteractive();
golbez.on('pointerdown', function (pointer) {
this.setTint(0x000000);
});
activefighter1name = 'golbez'
golbezactive = true
golbez.setScale(1.3, 1.3);
}
else if (this.fighter1name == 'Kain') {
fighter1nameplate = this.physics.add.sprite(508, 603, 'kainname').setOrigin(0, 0);
kain = this.physics.add.sprite(fighter1x, fighter1y, 'kain').setInteractive();
kain.on('pointerdown', function (pointer) {
this.setTint(0x000000);
});
activefighter1name = 'kain'
kainactive = true
kain.setScale(1.0, 1.0);
}

else if (this.fighter1name == 'Sektor') {
fighter1nameplate = this.physics.add.sprite(508, 603, 'sektorname').setOrigin(0, 0);
sektor = this.physics.add.sprite(fighter1x, fighter1y, 'sektor').setInteractive();
sektor.on('pointerdown', function (pointer) {
this.setTint(0x000000);
});
activefighter1name = 'sektor'
sektoractive = true
sektor.setScale(1.3, 1.3);
}



else if (this.fighter2name == 'Sindel') {
fighter2nameplate = this.physics.add.sprite(635, 603, 'sindelname').setOrigin(0, 0);
sindel = this.physics.add.sprite(fighter2x, fighter2y, 'sindel').setInteractive();
sindel.on('pointerdown', function (pointer) {
this.setTint(0x000000);
});
activefighter2name = 'sindel'
sindelactive = true
sindel.setScale(1.3, 1.3);
}
else if (this.fighter2name == 'Kabal') {
fighter2nameplate = this.physics.add.sprite(635, 603, 'kabalname').setOrigin(0, 0);
kabal = this.physics.add.sprite(fighter2x, fighter2y, 'kabal').setInteractive();
kabal.on('pointerdown', function (pointer) {
this.setTint(0x000000);
});
activefighter2name = 'kabal'
kabalactive = true
kabal.setScale(1.3, 1.3);
}

else if (this.fighter2name == 'Cyrax') {
fighter2nameplate = this.physics.add.sprite(635, 603, 'cyraxname').setOrigin(0, 0);
cyrax = this.physics.add.sprite(fighter2x, fighter2y, 'cyrax').setInteractive();
cyrax.on('pointerdown', function (pointer) {
this.setTint(0x000000);
});
activefighter2name = 'cyrax'
cyraxactive = true
cyrax.setScale(1.3, 1.3);
}
else if (this.fighter2name == 'Cyan') {
fighter2nameplate = this.physics.add.sprite(635, 603, 'cyanname').setOrigin(0, 0);
cyan = this.physics.add.sprite(fighter2x, fighter2y, 'cyan').setInteractive();
cyan.on('pointerdown', function (pointer) {
this.setTint(0x000000);
});
activefighter2name = 'cyan'
cyanactive = true
cyan.setScale(1.3, 1.3);
}
else if (this.fighter2name == 'Golbez') {
fighter2nameplate = this.physics.add.sprite(635, 603, 'golbezname').setOrigin(0, 0);
golbez = this.physics.add.sprite(fighter2x, fighter2y, 'golbez').setInteractive();
golbez.on('pointerdown', function (pointer) {
this.setTint(0x000000);
});
activefighter2name = 'golbez'
golbezactive = true
golbez.setScale(1.3, 1.3);
}
else if (this.fighter2name == 'Kain') {
fighter2nameplate = this.physics.add.sprite(635, 603, 'kainname').setOrigin(0, 0);
kain = this.physics.add.sprite(fighter2x, fighter2y, 'kain').setInteractive();
kain.on('pointerdown', function (pointer) {
this.setTint(0x000000);
});
activefighter2name = 'kain'
kainactive = true
kain.setScale(1.0, 1.0);
}


else if (this.fighter2name == 'Sektor') {
fighter2nameplate = this.physics.add.sprite(635, 603, 'sektorname').setOrigin(0, 0);
sektor = this.physics.add.sprite(fighter2x, fighter2y, 'sektor').setInteractive();
sektor.on('pointerdown', function (pointer) {
this.setTint(0x000000);
});
activefighter2name = 'sektor'
sektoractive = true
sektor.setScale(1.3, 1.3);
}



else if (this.fighter3name == 'Sindel') {
fighter3nameplate = this.physics.add.sprite(762, 603, 'sindelname').setOrigin(0, 0);
sindel = this.physics.add.sprite(fighter3x, fighter3y, 'sindel').setInteractive();
sindel.on('pointerdown', function (pointer) {
this.setTint(0x000000);
});
activefighter3name = 'sindel'
sindelactive = true
sindel.setScale(1.3, 1.3);
}
else if (this.fighter3name == 'Kabal') {
fighter3nameplate = this.physics.add.sprite(762, 603, 'kabalname').setOrigin(0, 0);
kabal = this.physics.add.sprite(fighter3x, fighter3y, 'kabal').setInteractive();
kabal.on('pointerdown', function (pointer) {
this.setTint(0x000000);
});
activefighter3name = 'kabal'
kabalactive = true
kabal.setScale(1.3, 1.3);
}

else if (this.fighter3name == 'Cyrax') {
fighter3nameplate = this.physics.add.sprite(762, 603, 'cyraxname').setOrigin(0, 0);
cyrax = this.physics.add.sprite(fighter3x, fighter3y, 'cyrax').setInteractive();
cyrax.on('pointerdown', function (pointer) {
this.setTint(0x000000);
});
activefighter3name = 'cyrax'
cyraxactive = true
cyrax.setScale(1.3, 1.3);
}
else if (this.fighter3name == 'Cyan') {
fighter3nameplate = this.physics.add.sprite(762, 603, 'cyanname').setOrigin(0, 0);
cyan = this.physics.add.sprite(fighter3x, fighter3y, 'cyan').setInteractive();
cyan.on('pointerdown', function (pointer) {
this.setTint(0x000000);
});
activefighter3name = 'cyan'
cyanactive = true
cyan.setScale(1.3, 1.3);
}
else if (this.fighter3name == 'Golbez') {
fighter3nameplate = this.physics.add.sprite(762, 603, 'golbezname').setOrigin(0, 0);
golbez = this.physics.add.sprite(fighter3x, fighter3y, 'golbez').setInteractive();
golbez.on('pointerdown', function (pointer) {
this.setTint(0x000000);
});
activefighter3name = 'golbez'
golbezactive = true
golbez.setScale(1.3, 1.3);
}
else if (this.fighter3name == 'Kain') {
fighter3nameplate = this.physics.add.sprite(762, 603, 'kainname').setOrigin(0, 0);
kain = this.physics.add.sprite(fighter3x, fighter3y, 'kain').setInteractive();
kain.on('pointerdown', function (pointer) {
this.setTint(0x000000);
});
activefighter3name = 'kain'
kainactive = true
kain.setScale(1.0, 1.0);
}


else if (this.fighter3name == 'Sektor') {
fighter3nameplate = this.physics.add.sprite(762, 603, 'sektorname').setOrigin(0, 0);
sektor = this.physics.add.sprite(fighter3x, fighter3y, 'sektor').setInteractive();
sektor.on('pointerdown', function (pointer) {
this.setTint(0x000000);
});
activefighter3name = 'sektor'
sektoractive = true
sektor.setScale(1.3, 1.3);
}



else if (this.fighter4name == 'Sindel') {
fighter4nameplate = this.physics.add.sprite(889, 603, 'sindelname').setOrigin(0, 0);
sindel = this.physics.add.sprite(fighter4x, fighter4y, 'sindel').setInteractive();
sindel.on('pointerdown', function (pointer) {
this.setTint(0x000000);
});
activefighter4name = 'sindel'
sindelactive = true
sindel.setScale(1.3, 1.3);
}
else if (this.fighter4name == 'Kabal') {
fighter4nameplate = this.physics.add.sprite(889, 603, 'kabalname').setOrigin(0, 0);
kabal = this.physics.add.sprite(fighter4x, fighter4y, 'kabal').setInteractive();
kabal.on('pointerdown', function (pointer) {
this.setTint(0x000000);
});
activefighter4name = 'kabal'
kabalactive = true
kabal.setScale(1.3, 1.3);
}

else if (this.fighter4name == 'Cyrax') {
fighter4nameplate = this.physics.add.sprite(889, 603, 'cyraxname').setOrigin(0, 0);
cyrax = this.physics.add.sprite(fighter4x, fighter4y, 'cyrax').setInteractive();
cyrax.on('pointerdown', function (pointer) {
this.setTint(0x000000);
});
activefighter4name = 'cyrax'
cyraxactive = true
cyrax.setScale(1.3, 1.3);
}
else if (this.fighter4name == 'Cyan') {
fighter4nameplate = this.physics.add.sprite(889, 603, 'cyanname').setOrigin(0, 0);
cyan = this.physics.add.sprite(fighter4x, fighter4y, 'cyan').setInteractive();
cyan.on('pointerdown', function (pointer) {
this.setTint(0x000000);
});
activefighter4name = 'cyan'
cyanactive = true
cyan.setScale(1.3, 1.3);
}
else if (this.fighter4name == 'Golbez') {
fighter4nameplate = this.physics.add.sprite(889, 603, 'golbezname').setOrigin(0, 0);
golbez = this.physics.add.sprite(fighter4x, fighter4y, 'golbez').setInteractive();
golbez.on('pointerdown', function (pointer) {
this.setTint(0x000000);
});
activefighter4name = 'golbez'
golbezactive = true
golbez.setScale(1.3, 1.3);
}
else if (this.fighter4name == 'Kain') {
fighter4nameplate = this.physics.add.sprite(889, 603, 'kainname').setOrigin(0, 0);
kain = this.physics.add.sprite(fighter4x, fighter4y, 'kain').setInteractive();
kain.on('pointerdown', function (pointer) {
this.setTint(0x000000);
});
activefighter4name = 'kain'
kainactive = true
kain.setScale(1.0, 1.0);
}



else if (this.fighter4name == 'Sektor') {
fighter4nameplate = this.physics.add.sprite(889, 603, 'sektorname').setOrigin(0, 0);
sektor = this.physics.add.sprite(fighter4x, fighter4y, 'sektor').setInteractive();
sektor.on('pointerdown', function (pointer) {
this.setTint(0x000000);
});
activefighter4name = 'sektor'
sektoractive = true
sektor.setScale(1.3, 1.3);
}

else if (this.fighter5name == 'Sindel') {
fighter5nameplate = this.physics.add.sprite(1016, 603, 'sindelname').setOrigin(0, 0);
sindel = this.physics.add.sprite(fighter5x, fighter5y, 'sindel').setInteractive();
sindel.on('pointerdown', function (pointer) {
this.setTint(0x000000);
});
activefighter5name = 'sindel'
sindelactive = true
sindel.setScale(1.3, 1.3);
}
else if (this.fighter5name == 'Kabal') {
fighter5nameplate = this.physics.add.sprite(1016, 603, 'kabalname').setOrigin(0, 0);
kabal = this.physics.add.sprite(fighter5x, fighter5y, 'kabal').setInteractive();
kabal.on('pointerdown', function (pointer) {
this.setTint(0x000000);
});
activefighter5name = 'kabal'
kabalactive = true
kabal.setScale(1.3, 1.3);
}

else if (this.fighter5name == 'Cyrax') {
fighter5nameplate = this.physics.add.sprite(1016, 603, 'cyraxname').setOrigin(0, 0);
cyrax = this.physics.add.sprite(fighter5x, fighter5y, 'cyrax').setInteractive();
cyrax.on('pointerdown', function (pointer) {
this.setTint(0x000000);
});
activefighter5name = 'cyrax'
cyraxactive = true
cyrax.setScale(1.3, 1.3);
}
else if (this.fighter5name == 'Cyan') {
fighter5nameplate = this.physics.add.sprite(1016, 603, 'cyanname').setOrigin(0, 0);
cyan = this.physics.add.sprite(fighter5x, fighter5y, 'cyan').setInteractive();
cyan.on('pointerdown', function (pointer) {
this.setTint(0x000000);
});
activefighter5name = 'cyan'
cyanactive = true
cyan.setScale(1.3, 1.3);
}
else if (this.fighter5name == 'Golbez') {
fighter5nameplate = this.physics.add.sprite(1016, 603, 'golbezname').setOrigin(0, 0);
golbez = this.physics.add.sprite(fighter5x, fighter5y, 'golbez').setInteractive();
golbez.on('pointerdown', function (pointer) {
this.setTint(0x000000);
});
activefighter5name = 'golbez'
golbezactive = true
golbez.setScale(1.3, 1.3);
}
else if (this.fighter5name == 'Kain') {
fighter5nameplate = this.physics.add.sprite(1016, 603, 'kainname').setOrigin(0, 0);
kain = this.physics.add.sprite(fighter5x, fighter5y, 'kain').setInteractive();
kain.on('pointerdown', function (pointer) {
this.setTint(0x000000);
});
activefighter5name = 'kain'
kainactive = true
kain.setScale(1.0, 1.0);
}



else if (this.fighter5name == 'Sektor') {
fighter5nameplate = this.physics.add.sprite(1016, 603, 'sektorname').setOrigin(0, 0);
sektor = this.physics.add.sprite(fighter5x, fighter5y, 'sektor').setInteractive();
sektor.on('pointerdown', function (pointer) {
this.setTint(0x000000);
});
activefighter5name = 'sektor'
sektoractive = true
sektor.setScale(1.3, 1.3);
}


else if (this.fighter6name == 'Sindel') {
fighter6nameplate = this.physics.add.sprite(1143, 603, 'sindelname').setOrigin(0, 0);
sindel = this.physics.add.sprite(fighter6x, fighter6y, 'sindel').setInteractive();
sindel.on('pointerdown', function (pointer) {
this.setTint(0x000000);
});
activefighter6name = 'sindel'
sindelactive = true
sindel.setScale(1.3, 1.3);
}
else if (this.fighter6name == 'Kabal') {
fighter6nameplate = this.physics.add.sprite(1143, 603, 'kabalname').setOrigin(0, 0);
kabal = this.physics.add.sprite(fighter6x, fighter6y, 'kabal').setInteractive();
kabal.on('pointerdown', function (pointer) {
this.setTint(0x000000);
});
activefighter6name = 'kabal'
kabalactive = true
kabal.setScale(1.3, 1.3);
}

else if (this.fighter6name == 'Cyrax') {
fighter6nameplate = this.physics.add.sprite(1143, 603, 'cyraxname').setOrigin(0, 0);
cyrax = this.physics.add.sprite(fighter6x, fighter6y, 'cyrax').setInteractive();
cyrax.on('pointerdown', function (pointer) {
this.setTint(0x000000);
});
activefighter6name = 'cyrax'
cyraxactive = true
cyrax.setScale(1.3, 1.3);
}
else if (this.fighter6name == 'Cyan') {
fighter6nameplate = this.physics.add.sprite(1143, 603, 'cyanname').setOrigin(0, 0);
cyan = this.physics.add.sprite(fighter6x, fighter6y, 'cyan').setInteractive();
cyan.on('pointerdown', function (pointer) {
this.setTint(0x000000);
});
activefighter6name = 'cyan'
cyanactive = true
cyan.setScale(1.3, 1.3);
}
else if (this.fighter6name == 'Golbez') {
fighter6nameplate = this.physics.add.sprite(1143, 603, 'golbezname').setOrigin(0, 0);
golbez = this.physics.add.sprite(fighter6x, fighter6y, 'golbez').setInteractive();
golbez.on('pointerdown', function (pointer) {
this.setTint(0x000000);
});
activefighter6name = 'golbez'
golbezactive = true
golbez.setScale(1.3, 1.3);
}
else if (this.fighter6name == 'Kain') {
fighter6nameplate = this.physics.add.sprite(1143, 603, 'kainname').setOrigin(0, 0);
kain = this.physics.add.sprite(fighter6x, fighter6y, 'kain').setInteractive();
kain.on('pointerdown', function (pointer) {
this.setTint(0x000000);
});
activefighter6name = 'kain'
kainactive = true
kain.setScale(1.0, 1.0);
}



else if (this.fighter6name == 'Sektor') {
fighter6nameplate = this.physics.add.sprite(1143, 603, 'sektorname').setOrigin(0, 0);
sektor = this.physics.add.sprite(fighter6x, fighter6y, 'sektor').setInteractive();
sektor.on('pointerdown', function (pointer) {
this.setTint(0x000000);
});
activefighter6name = 'sektor'
sektoractive = true
sektor.setScale(1.3, 1.3);
}





timertext = this.add.text(450, 450);


support1statustxt = this.add.text(support1uibox.x + 38, 625, 'status', { font: '16px Arial bold', fill: '#ffffff' }).setScrollFactor(0);
support2statustxt = this.add.text(support2uibox.x + 38, 625, 'status', { font: '16px Arial bold', fill: '#ffffff' }).setScrollFactor(0);
leader1statustxt = this.add.text(292, 625, 'status', { font: '16px Arial bold', fill: '#ffffff' }).setScrollFactor(0);
leader2statustxt = this.add.text(419, 625, 'status', { font: '16px Arial bold', fill: '#ffffff' }).setScrollFactor(0);
fighter1statustxt = this.add.text(546, 625, 'status', { font: '16px Arial bold', fill: '#ffffff' }).setScrollFactor(0);
fighter2statustxt = this.add.text(673, 625, 'status', { font: '16px Arial bold', fill: '#ffffff' }).setScrollFactor(0);
fighter3statustxt = this.add.text(800, 625, 'status', { font: '16px Arial bold', fill: '#ffffff' }).setScrollFactor(0);
fighter4statustxt = this.add.text(927, 625, 'status', { font: '16px Arial bold', fill: '#ffffff' }).setScrollFactor(0);
fighter5statustxt = this.add.text(1054, 625, 'status', { font: '16px Arial bold', fill: '#ffffff' }).setScrollFactor(0);
fighter6statustxt = this.add.text(1181, 625, 'status', { font: '16px Arial bold', fill: '#ffffff' }).setScrollFactor(0);

//healthtxt
//health
leader1healthtxt = this.add.text(leader1uibox.x + 20, 580, '', { font: '20px Arial bold', fill: '#00ff00' }).setScrollFactor(0);
leader2healthtxt = this.add.text(leader2uibox.x + 20, 580, '', { font: '20px Arial bold', fill: '#00ff00' }).setScrollFactor(0);
fighter1healthtxt  = this.add.text(fighter1uibox.x + 20, 580, '', { font: '20px Arial bold', fill: '#00ff00' }).setScrollFactor(0);
fighter2healthtxt  = this.add.text(fighter2uibox.x + 20, 580, '', { font: '20px Arial bold', fill: '#00ff00' }).setScrollFactor(0);
fighter3healthtxt  = this.add.text(fighter3uibox.x + 20, 580, '', { font: '20px Arial bold', fill: '#00ff00' }).setScrollFactor(0);
fighter4healthtxt  = this.add.text(fighter4uibox.x + 20, 580, '', { font: '20px Arial bold', fill: '#00ff00' }).setScrollFactor(0);
fighter5healthtxt  = this.add.text(fighter5uibox.x + 20, 580, '', { font: '20px Arial bold', fill: '#00ff00' }).setScrollFactor(0);
fighter6healthtxt  = this.add.text(fighter6uibox.x + 20, 580, '', { font: '20px Arial bold', fill: '#00ff00' }).setScrollFactor(0);
support1healthtxt  = this.add.text(support1uibox.x + 20, 580, '', { font: '20px Arial bold', fill: '#00ff00' }).setScrollFactor(0);
support2healthtxt  = this.add.text(support2uibox.x + 20, 580, '', { font: '20px Arial bold', fill: '#00ff00' }).setScrollFactor(0);

leader1damagebeingtakentxt = this.add.text(leader1uibox.x + 32, 555, '0000', { font: '30px Arial bold', fill: '#ff0000' }).setScrollFactor(0);
leader1damagebeingtakentxt.visible = false
leader2damagebeingtakentxt = this.add.text(leader2uibox.x + 32, 555, '0000', { font: '30px Arial bold', fill: '#ff0000' }).setScrollFactor(0);
leader2damagebeingtakentxt.visible = false
fighter1damagebeingtakentxt  = this.add.text(fighter1uibox.x + 32, 555, '0000', { font: '30px Arial bold', fill: '#ff0000' }).setScrollFactor(0);
fighter1damagebeingtakentxt.visible = false
fighter2damagebeingtakentxt  = this.add.text(fighter2uibox.x + 32, 555, '0000', { font: '30px Arial bold', fill: '#ff0000' }).setScrollFactor(0);
fighter2damagebeingtakentxt.visible = false
fighter3damagebeingtakentxt  = this.add.text(fighter3uibox.x + 32, 555, '0000', { font: '30px Arial bold', fill: '#ff0000' }).setScrollFactor(0);
fighter3damagebeingtakentxt.visible = false
fighter4damagebeingtakentxt  = this.add.text(fighter4uibox.x + 32, 555, '0000', { font: '30px Arial bold', fill: '#ff0000' }).setScrollFactor(0);
fighter4damagebeingtakentxt.visible = false
fighter5damagebeingtakentxt  = this.add.text(fighter5uibox.x + 32, 555, '0000', { font: '30px Arial bold', fill: '#ff0000' }).setScrollFactor(0);
fighter5damagebeingtakentxt.visible = false
fighter6damagebeingtakentxt  = this.add.text(fighter6uibox.x + 32, 555, '0000', { font: '30px Arial bold', fill: '#ff0000' }).setScrollFactor(0);
fighter6damagebeingtakentxt.visible = false
support1damagebeingtakentxt  = this.add.text(support1uibox.x + 32, 555, '0000', { font: '30px Arial bold', fill: '#ff0000' }).setScrollFactor(0);
support1damagebeingtakentxt.visible = false
support2damagebeingtakentxt  = this.add.text(support2uibox.x + 32, 555, '0000', { font: '30px Arial bold', fill: '#ff0000' }).setScrollFactor(0);
support2damagebeingtakentxt.visible = false





//animstuff

     this.anims.create({
        key: 'lowhealthnote',
        frames: this.anims.generateFrameNumbers('lowhealthnote', { start: 0, end: 6 }),
        frameRate: 5,
        repeat: -1
    });
     this.anims.create({
        key: 'nohealthnote',
        frames: this.anims.generateFrameNumbers('nohealthnote', { start: 0, end: 0 }),
        frameRate: 1,
        repeat: 0
    });
    this.anims.create({
        key: 'deadnote',
        frames: this.anims.generateFrameNumbers('deadnote', { start: 0, end: 0 }),
        frameRate: 1,
        repeat: 0
    });
     this.anims.create({
        key: 'actionbar10gr',
        frames: this.anims.generateFrameNumbers('actionbar10gr', { start: 0, end: 0 }),
        frameRate: 1,
        repeat: 0
    });
  this.anims.create({
        key: 'actionbar20gr',
        frames: this.anims.generateFrameNumbers('actionbar20gr', { start: 0, end: 0 }),
        frameRate: 1,
        repeat: 0
    });
  this.anims.create({
        key: 'actionbar30gr',
        frames: this.anims.generateFrameNumbers('actionbar30gr', { start: 0, end: 0 }),
        frameRate: 1,
        repeat: 0
    });
  this.anims.create({
        key: 'actionbar40gr',
        frames: this.anims.generateFrameNumbers('actionbar40gr', { start: 0, end: 0 }),
        frameRate: 1,
        repeat: 0
    });
  this.anims.create({
        key: 'actionbar50gr',
        frames: this.anims.generateFrameNumbers('actionbar50gr', { start: 0, end: 0 }),
        frameRate: 1,
        repeat: 0
    });
  this.anims.create({
        key: 'actionbar60gr',
        frames: this.anims.generateFrameNumbers('actionbar60gr', { start: 0, end: 0 }),
        frameRate: 1,
        repeat: 0
    });
  this.anims.create({
        key: 'actionbar70gr',
        frames: this.anims.generateFrameNumbers('actionbar70gr', { start: 0, end: 0 }),
        frameRate: 1,
        repeat: 0
    });
  this.anims.create({
        key: 'actionbar80gr',
        frames: this.anims.generateFrameNumbers('actionbar80gr', { start: 0, end: 0 }),
        frameRate: 1,
        repeat: 0
    });
  this.anims.create({
        key: 'actionbar90gr',
        frames: this.anims.generateFrameNumbers('actionbar90gr', { start: 0, end: 0 }),
        frameRate: 1,
        repeat: 0
    });
  this.anims.create({
        key: 'actionbar100gr',
        frames: this.anims.generateFrameNumbers('actionbar100gr', { start: 0, end: 0 }),
        frameRate: 1,
        repeat: 0
    }); 
this.anims.create({
        key: 'enemyactionbar10gr',
        frames: this.anims.generateFrameNumbers('enemyactionbar10gr', { start: 0, end: 0 }),
        frameRate: 1,
        repeat: 0
    });
  this.anims.create({
        key: 'enemyactionbar20gr',
        frames: this.anims.generateFrameNumbers('enemyactionbar20gr', { start: 0, end: 0 }),
        frameRate: 1,
        repeat: 0
    });
  this.anims.create({
        key: 'enemyactionbar30gr',
        frames: this.anims.generateFrameNumbers('enemyactionbar30gr', { start: 0, end: 0 }),
        frameRate: 1,
        repeat: 0
    });
  this.anims.create({
        key: 'enemyactionbar40gr',
        frames: this.anims.generateFrameNumbers('enemyactionbar40gr', { start: 0, end: 0 }),
        frameRate: 1,
        repeat: 0
    });
  this.anims.create({
        key: 'enemyactionbar50gr',
        frames: this.anims.generateFrameNumbers('enemyactionbar50gr', { start: 0, end: 0 }),
        frameRate: 1,
        repeat: 0
    });
  this.anims.create({
        key: 'enemyactionbar60gr',
        frames: this.anims.generateFrameNumbers('enemyactionbar60gr', { start: 0, end: 0 }),
        frameRate: 1,
        repeat: 0
    });
  this.anims.create({
        key: 'enemyactionbar70gr',
        frames: this.anims.generateFrameNumbers('enemyactionbar70gr', { start: 0, end: 0 }),
        frameRate: 1,
        repeat: 0
    });
  this.anims.create({
        key: 'enemyactionbar80gr',
        frames: this.anims.generateFrameNumbers('enemyactionbar80gr', { start: 0, end: 0 }),
        frameRate: 1,
        repeat: 0
    });
  this.anims.create({
        key: 'enemyactionbar90gr',
        frames: this.anims.generateFrameNumbers('enemyactionbar90gr', { start: 0, end: 0 }),
        frameRate: 1,
        repeat: 0
    });
  this.anims.create({
        key: 'enemyactionbar100gr',
        frames: this.anims.generateFrameNumbers('enemyactionbar100gr', { start: 0, end: 0 }),
        frameRate: 1,
        repeat: 0
    }); 
  this.anims.create({
        key: 'enemyhealthbar10gr',
        frames: this.anims.generateFrameNumbers('enemyhealthbar10gr', { start: 0, end: 0 }),
        frameRate: 1,
        repeat: 0
    });
  this.anims.create({
        key: 'enemyhealthbar20gr',
        frames: this.anims.generateFrameNumbers('enemyhealthbar20gr', { start: 0, end: 0 }),
        frameRate: 1,
        repeat: 0
    });
  this.anims.create({
        key: 'enemyhealthbar30gr',
        frames: this.anims.generateFrameNumbers('enemyhealthbar30gr', { start: 0, end: 0 }),
        frameRate: 1,
        repeat: 0
    });
  this.anims.create({
        key: 'enemyhealthbar40gr',
        frames: this.anims.generateFrameNumbers('enemyhealthbar40gr', { start: 0, end: 0 }),
        frameRate: 1,
        repeat: 0
    });
  this.anims.create({
        key: 'enemyhealthbar50gr',
        frames: this.anims.generateFrameNumbers('enemyhealthbar50gr', { start: 0, end: 0 }),
        frameRate: 1,
        repeat: 0
    });
  this.anims.create({
        key: 'enemyhealthbar60gr',
        frames: this.anims.generateFrameNumbers('enemyhealthbar60gr', { start: 0, end: 0 }),
        frameRate: 1,
        repeat: 0
    });
  this.anims.create({
        key: 'enemyhealthbar70gr',
        frames: this.anims.generateFrameNumbers('enemyhealthbar70gr', { start: 0, end: 0 }),
        frameRate: 1,
        repeat: 0
    });
  this.anims.create({
        key: 'enemyhealthbar80gr',
        frames: this.anims.generateFrameNumbers('enemyhealthbar80gr', { start: 0, end: 0 }),
        frameRate: 1,
        repeat: 0
    });
  this.anims.create({
        key: 'enemyhealthbar90gr',
        frames: this.anims.generateFrameNumbers('enemyhealthbar90gr', { start: 0, end: 0 }),
        frameRate: 1,
        repeat: 0
    });
  this.anims.create({
        key: 'enemyhealthbar100gr',
        frames: this.anims.generateFrameNumbers('enemyhealthbar100gr', { start: 0, end: 0 }),
        frameRate: 1,
        repeat: 0
    }); 
   this.anims.create({
        key: 'torch',
        frames: this.anims.generateFrameNumbers('torch', { start: 0, end: 4 }),
        frameRate: 25,
        repeat: -1
    });
    
       this.anims.create({
        key: 'backdragon',
        frames: this.anims.generateFrameNumbers('backdragon', { start: 0, end: 20 }),
        frameRate: 10,
        repeat: -1
    });
  //rosa
      this.anims.create({
        key: 'rosacurespell',
        frames: this.anims.generateFrameNumbers('rosacurespell', { start: 0, end: 20 }),
        frameRate: 10,
        hideOnComplete: true
    });
     this.anims.create({
        key: 'rosahealspell',
        frames: this.anims.generateFrameNumbers('rosahealspell', { start: 0, end: 20 }),
        frameRate: 10,
        hideOnComplete: true
 
    });
     this.anims.create({
        key: 'rosafastspell',
        frames: this.anims.generateFrameNumbers('rosafastspell', { start: 0, end: 6 }),
        frameRate: 10,
        hideOnComplete: true
    });
    this.anims.create({
        key: 'rosashellspell',
        frames: this.anims.generateFrameNumbers('rosashellspell', { start: 0, end: 29 }),
        frameRate: 20,
        yoyo: true,
        repeat: -1
    });
//moganim

    this.anims.create({
        key: 'mogdreamspell',
        frames: this.anims.generateFrameNumbers('mogdreamspell', { start: 0, end: 19 }),
        frameRate: 20,
        yoyo: true,
        repeat: -1
    });
       this.anims.create({
        key: 'mogmoonspell',
        frames: this.anims.generateFrameNumbers('mogmoonspell', { start: 0, end: 14 }),
        frameRate: 10,
        yoyo: true,
        repeat: -1
    });
           this.anims.create({
        key: 'mogpowerspell',
        frames: this.anims.generateFrameNumbers('mogpowerspell', { start: 0, end: 14 }),
        frameRate: 10,
        yoyo: true,
        repeat: -1
    });
       this.anims.create({
        key: 'mogdancespell',
        frames: this.anims.generateFrameNumbers('mogdancespell', { start: 0, end: 14 }),
        frameRate: 10,
        yoyo: true,
        repeat: -1
    });
       this.anims.create({
        key: 'mogbullspell',
        frames: this.anims.generateFrameNumbers('mogbullspell', { start: 0, end: 6 }),
        frameRate: 10,
        yoyo: true,
        repeat: -1
    });

    //kanganims

    this.anims.create({
        key: 'kangspear',
        frames: this.anims.generateFrameNumbers('kangspear', { start: 0, end: 0 }),
        frameRate: 1,
        repeat: 0
    });

  this.anims.create({
        key: 'kangdead',
        frames: this.anims.generateFrameNumbers('kangdead', { start: 0, end: 0 }),
        frameRate: 1,
        repeat: 0
    });
    
       this.anims.create({
        key: 'kangidle',
        frames: this.anims.generateFrameNumbers('kang', { start: 0, end: 13 }),
        frameRate: 10,
     
        repeat: 1
    });

     this.anims.create({
        key: 'kangflykick',
        frames: this.anims.generateFrameNumbers('kangflykick', { start: 0, end: 0 }),
        frameRate: 10,
     
        repeat: 1
    });
     this.anims.create({
        key: 'kangfireball',
        frames: this.anims.generateFrameNumbers('kangfireball', { start: 0, end: 3 }),
        frameRate: 15,
     
        repeat: 0
    });
     this.anims.create({
        key: 'kangfireballgr',
        frames: this.anims.generateFrameNumbers('kangfireballgr', { start: 0, end: 3 }),
        frameRate: 15,
     
        repeat: 0
    });
     this.anims.create({
        key: 'kangfireballexplode',
        frames: this.anims.generateFrameNumbers('kangfireballexplode', { start: 0, end: 18 }),
        frameRate: 20,
     
        repeat: 0
    });
      this.anims.create({
        key: 'kangbicycle',
        frames: this.anims.generateFrameNumbers('kangbicycle', { start: 0, end: 4 }),
        frameRate: 10,
        yoyo: true,
        repeat: -1
    });
       this.anims.create({
        key: 'kangwalk',
        frames: this.anims.generateFrameNumbers('kangwalk', { start: 0, end: 11 }),
        frameRate: 10,
        repeat: -1
    });
     this.anims.create({
        key: 'kangrun',
        frames: this.anims.generateFrameNumbers('kangrun', { start: 0, end: 7 }),
        frameRate: 10,
        repeat: 1

    });
     this.anims.create({
        key: 'kangdragon',
        frames: this.anims.generateFrameNumbers('kangdragon', { start: 0, end: 6 }),
        frameRate: 10,
        yoyo: true,
        repeat: 3
    });
     this.anims.create({
        key: 'kangprayer',
        frames: this.anims.generateFrameNumbers('kangprayer', { start: 0, end: 0 }),
        frameRate: 2,
        repeat: 0
    });

     this.anims.create({
        key: 'kangprayerbolt',
        frames: this.anims.generateFrameNumbers('kangprayerbolt', { start: 0, end: 26 }),
        frameRate: 20,
        repeat: -1
    });


     this.anims.create({
        key: 'kanospear',
        frames: this.anims.generateFrameNumbers('kanospear', { start: 0, end: 0 }),
        frameRate: 1,
        repeat: 0
    });
     this.anims.create({
        key: 'kanodead',
        frames: this.anims.generateFrameNumbers('kanodead', { start: 0, end: 0 }),
        frameRate: 1,
        repeat: 0
    });
       this.anims.create({
        key: 'kanoidle',
        frames: this.anims.generateFrameNumbers('kano', { start: 0, end: 13 }),
        frameRate: 10,
        yoyo: true,
        repeat: -1
    });
  
       this.anims.create({
        key: 'kanowalk',
        frames: this.anims.generateFrameNumbers('kanowalk', { start: 0, end: 11 }),
        frameRate: 10,
        repeat: -1
    });

       this.anims.create({
        key: 'kanorun',
        frames: this.anims.generateFrameNumbers('kanorun', { start: 0, end: 11 }),
        frameRate: 10,
        repeat: -1
    });


    
    this.anims.create({
        key: 'kanoblades',
        frames: this.anims.generateFrameNumbers('kanoblades', { start: 0, end: 6 }),
        frameRate: 15,
        repeat: 0
    });
    this.anims.create({
        key: 'kanobladesgr',
        frames: this.anims.generateFrameNumbers('kanobladesgr', { start: 0, end: 4 }),
        frameRate: 10,
        repeat: 0
    });
    this.anims.create({
        key: 'kanobladebleed',
        frames: this.anims.generateFrameNumbers('kanobladebleed', { start: 0, end: 8 }),
        frameRate: 10,
        repeat: 0
        });
    this.anims.create({
        key: 'kanohellheadbreathgr',
        frames: this.anims.generateFrameNumbers('kanohellheadbreathgr', { start: 0, end: 9 }),
        frameRate: 10,
        repeat: -1
    });
    this.anims.create({
        key: 'kanocut',
        frames: this.anims.generateFrameNumbers('kanocut', { start: 0, end: 8 }),
        frameRate: 10,
        repeat: -1
    });
    this.anims.create({
        key: 'kanolaser',
        frames: this.anims.generateFrameNumbers('kanolaser', { start: 2, end: 3 }),
        frameRate: 1,
        repeat: 0
    });
   this.anims.create({
        key: 'kanolasergr',
        frames: this.anims.generateFrameNumbers('kanolasergr', { start: 0, end: 1 }),
        frameRate: 5,
        repeat: -1
    });
   this.anims.create({
        key: 'kanolasersmokegr',
        frames: this.anims.generateFrameNumbers('kanolasersmokegr', { start: 0, end: 4 }),
        frameRate: 5,
        repeat: -1
    });
    this.anims.create({
        key: 'kanohell',
        frames: this.anims.generateFrameNumbers('kanohell', { start: 1, end: 1 }),
        frameRate: 3,
        repeat: 0
    });
    this.anims.create({
        key: 'kanokick',
        frames: this.anims.generateFrameNumbers('kanokick', { start: 0, end: 5 }),
        frameRate: 10,
        repeat: -1
    });


//spinalanim



     this.anims.create({
        key: 'spinalspear',
        frames: this.anims.generateFrameNumbers('spinalspear', { start: 0, end: 0 }),
        frameRate: 1,
        repeat: 0
         });

      this.anims.create({
        key: 'spinaldead',
        frames: this.anims.generateFrameNumbers('spinaldead', { start: 0, end: 0 }),
        frameRate: 1,
        repeat: 0
    });
       this.anims.create({
        key: 'spinalidle',
        frames: this.anims.generateFrameNumbers('spinal', { start: 0, end: 8 }),
        frameRate: 10,
        yoyo: true,
        repeat: -1
    });
  
       this.anims.create({
        key: 'spinalwalk',
        frames: this.anims.generateFrameNumbers('spinalwalk', { start: 0, end: 11 }),
        frameRate: 10,
        repeat: -1
    });
    
     this.anims.create({
        key: 'spinalrun',
        frames: this.anims.generateFrameNumbers('spinalrun', { start: 0, end: 11 }),
        frameRate: 10,
        repeat: -1
    });
     this.anims.create({
        key: 'spinalslice',
        frames: this.anims.generateFrameNumbers('spinalslice', { start: 0, end: 12 }),
        frameRate: 10,
        repeat: -1
    });
     this.anims.create({
        key: 'spinalslash',
        frames: this.anims.generateFrameNumbers('spinalslash', { start: 0, end: 15 }),
        frameRate: 10,
        repeat: -1
    });
     this.anims.create({
        key: 'spinalbash',
        frames: this.anims.generateFrameNumbers('spinalbash', { start: 0, end: 11 }),
        frameRate: 10,
        repeat: -1
    });
    this.anims.create({
        key: 'spinalspike',
        frames: this.anims.generateFrameNumbers('spinalspike', { start: 0, end: 6 }),
        frameRate: 10,
        repeat: -1
    });
    this.anims.create({
        key: 'spinalblock',
        frames: this.anims.generateFrameNumbers('spinalblock', { start: 0, end: 1 }),
        frameRate: 2,
        repeat: -1
    });

//glaciusanim
       this.anims.create({
        key: 'glaciusdead',
        frames: this.anims.generateFrameNumbers('glaciusdead', { start: 0, end: 0 }),
        frameRate: 1,
        repeat: 0
    });

       this.anims.create({
        key: 'glaciusidle',
        frames: this.anims.generateFrameNumbers('glacius', { start: 0, end: 13 }),
        frameRate: 10,
        yoyo: true,
        repeat: -1
    });
  
       this.anims.create({
        key: 'glaciuswalk',
        frames: this.anims.generateFrameNumbers('glaciuswalk', { start: 0, end: 11 }),
        frameRate: 10,
        repeat: -1
    });

       
//comboanim
       this.anims.create({
        key: 'combodead',
        frames: this.anims.generateFrameNumbers('combodead', { start: 0, end: 0 }),
        frameRate: 1,
        repeat: 0
        });
  
       this.anims.create({
        key: 'comboidle',
        frames: this.anims.generateFrameNumbers('combo', { start: 0, end: 13 }),
        frameRate: 10,
        yoyo: true,
        repeat: -1
    });
  
       this.anims.create({
        key: 'combowalk',
        frames: this.anims.generateFrameNumbers('combowalk', { start: 0, end: 11 }),
        frameRate: 10,
        repeat: -1
    });

      this.anims.create({
        key: 'comborun',
        frames: this.anims.generateFrameNumbers('comborun', { start: 0, end: 8 }),
        frameRate: 10,
        repeat: -1
    });
      this.anims.create({
        key: 'combopunch',
        frames: this.anims.generateFrameNumbers('combopunch', { start: 0, end: 11 }),
        frameRate: 10,
        repeat: -1
    });
      this.anims.create({
        key: 'combojumpkick',
        frames: this.anims.generateFrameNumbers('combojumpkick', { start: 0, end: 9 }),
        frameRate: 10,
        repeat: -1
    });
      this.anims.create({
        key: 'combogun',
        frames: this.anims.generateFrameNumbers('combogun', { start: 0, end: 13 }),
        frameRate: 10,
        repeat: -1
    });
      this.anims.create({
        key: 'comboslam',
        frames: this.anims.generateFrameNumbers('comboslam', { start: 0, end: 8 }),
        frameRate: 10,
        repeat: -1
    });
      this.anims.create({
        key: 'combomuscle',
        frames: this.anims.generateFrameNumbers('combomuscle', { start: 0, end: 6 }),
        frameRate: 10,
        repeat: -1
    });



//sindelanim
 
       this.anims.create({
        key: 'sindelidle',
        frames: this.anims.generateFrameNumbers('sindel', { start: 0, end: 13 }),
        frameRate: 10,
        yoyo: true,
        repeat: -1
    });
  
       this.anims.create({
        key: 'sindelwalk',
        frames: this.anims.generateFrameNumbers('sindelwalk', { start: 0, end: 11 }),
        frameRate: 10,
        repeat: -1
    });


    this.anims.create({
        key: 'kabaldead',
        frames: this.anims.generateFrameNumbers('kabaldead', { start: 0, end: 0 }),
        frameRate: 1,
        repeat: -0
    });
       this.anims.create({
        key: 'kabalidle',
        frames: this.anims.generateFrameNumbers('kabal', { start: 0, end: 7 }),
        frameRate: 10,
        yoyo: true,
        repeat: -1
    });
  
       this.anims.create({
        key: 'kabalwalk',
        frames: this.anims.generateFrameNumbers('kabalwalk', { start: 0, end: 11 }),
        frameRate: 10,
        repeat: -1
    });

//jagoanim
        this.anims.create({
        key: 'jagospear',
        frames: this.anims.generateFrameNumbers('jagospear', { start: 0, end: 0 }),
        frameRate: 1,
        repeat: 0
    });
   this.anims.create({
        key: 'jagodead',
        frames: this.anims.generateFrameNumbers('jagodead', { start: 0, end: 0 }),
        frameRate: 1,
        repeat: 0
    });
       this.anims.create({
        key: 'jagoidle',
        frames: this.anims.generateFrameNumbers('jago', { start: 0, end: 7 }),
        frameRate: 10,
        yoyo: true,
        repeat: -1
    });
  
       this.anims.create({
        key: 'jagowalk',
        frames: this.anims.generateFrameNumbers('jagowalk', { start: 0, end: 11 }),
        frameRate: 10,
        repeat: -1
    });

        this.anims.create({
        key: 'jagosword',
        frames: this.anims.generateFrameNumbers('jagosword', { start: 0, end: 7 }),
        frameRate: 10,
        repeat: -1
    });
        this.anims.create({
        key: 'jagostab',
        frames: this.anims.generateFrameNumbers('jagostab', { start: 0, end: 1 }),
        frameRate: 2,
        repeat: 0
    });
        this.anims.create({
        key: 'jagoplasma',
        frames: this.anims.generateFrameNumbers('jagoplasma', { start: 0, end: 6 }),
        frameRate: 10,
        repeat: -1
    });

       this.anims.create({
        key: 'jagoplasmagr',
        frames: this.anims.generateFrameNumbers('jagoplasmagr', { start: 0, end: 1 }),
        frameRate: 10,
        repeat: -1
    });
        this.anims.create({
        key: 'jagorkick',
        frames: this.anims.generateFrameNumbers('jagorkick', { start: 0, end: 7 }),
        frameRate: 10,
        repeat: -1
    });
        this.anims.create({
        key: 'jagofocus',
        frames: this.anims.generateFrameNumbers('jagofocus', { start: 0, end: 8 }),
        frameRate: 5,
        repeat: 0
    });




   
       this.anims.create({
        key: 'cyraxidle',
        frames: this.anims.generateFrameNumbers('cyrax', { start: 0, end: 7 }),
        frameRate: 10,
        yoyo: true,
        repeat: -1
    });
  
       this.anims.create({
        key: 'cyraxwalk',
        frames: this.anims.generateFrameNumbers('cyraxwalk', { start: 0, end: 11 }),
        frameRate: 10,
        repeat: -1
    });


        this.anims.create({
        key: 'kunglaospear',
        frames: this.anims.generateFrameNumbers('kunglaospear', { start: 0, end: 0 }),
        frameRate: 1,
        repeat: 0
    }); 
  this.anims.create({
        key: 'kunglaodead',
        frames: this.anims.generateFrameNumbers('kunglaodead', { start: 0, end: 0 }),
        frameRate: 1,
        repeat: 0
    });
       this.anims.create({
        key: 'kunglaoidle',
        frames: this.anims.generateFrameNumbers('kunglao', { start: 0, end: 7 }),
        frameRate: 10,
        yoyo: true,
        repeat: -1
    });
  
       this.anims.create({
        key: 'kunglaowalk',
        frames: this.anims.generateFrameNumbers('kunglaowalk', { start: 0, end: 11 }),
        frameRate: 10,
        repeat: -1
    });
 this.anims.create({
        key: 'kunglaorun',
        frames: this.anims.generateFrameNumbers('kunglaorun', { start: 0, end: 7 }),
        frameRate: 10,
        repeat: -1
    });
  this.anims.create({
        key: 'kunglaohatthrow',
        frames: this.anims.generateFrameNumbers('kunglaohatthrow', { start: 0, end: 11 }),
        frameRate: 10,
        repeat: -1
    });
 this.anims.create({
        key: 'kunglaohatthrowgr',
        frames: this.anims.generateFrameNumbers('kunglaohatthrowgr', { start: 0, end: 2 }),
        frameRate: 10,
        repeat: -1
    });
  this.anims.create({
        key: 'kunglaopalmkick',
        frames: this.anims.generateFrameNumbers('kunglaopalmkick', { start: 0, end: 11 }),
        frameRate: 10,
        repeat: -1
    });
 this.anims.create({
        key: 'kunglaokick',
        frames: this.anims.generateFrameNumbers('kunglaokick', { start: 0, end: 6 }),
        frameRate: 10,
        repeat: -1
    });
  this.anims.create({
        key: 'kunglaowhirl',
        frames: this.anims.generateFrameNumbers('kunglaowhirl', { start: 0, end: 11 }),
        frameRate: 10,
        repeat: -1
    });
  this.anims.create({
        key: 'kunglaobrim',
        frames: this.anims.generateFrameNumbers('kunglaobrim', { start: 0, end: 5 }),
        frameRate: 3,
        repeat: 0
    });
this.anims.create({
        key: 'kunglaokick',
        frames: this.anims.generateFrameNumbers('kunglaokick', { start: 0, end: 6 }),
        frameRate: 10,
        repeat: -1
    });


//sonjaanim

        this.anims.create({
        key: 'sonjaspear',
        frames: this.anims.generateFrameNumbers('sonjaspear', { start: 0, end: 0 }),
        frameRate: 1,
        repeat: 0
        });

       this.anims.create({
        key: 'sonjadead',
        frames: this.anims.generateFrameNumbers('sonjadead', { start: 0, end: 0 }),
        frameRate: 1,
        repeat: 0
        });
       this.anims.create({
        key: 'sonjaidle',
        frames: this.anims.generateFrameNumbers('sonja', { start: 0, end: 7 }),
        frameRate: 10,
        yoyo: true,
        repeat: -1
        });
  
       this.anims.create({
        key: 'sonjawalk',
        frames: this.anims.generateFrameNumbers('sonjawalk', { start: 0, end: 11 }),
        frameRate: 10,
        repeat: -1
        });
        this.anims.create({
        key: 'sonjarun',
        frames: this.anims.generateFrameNumbers('sonjarun', { start: 0, end: 9 }),
        frameRate: 10,
        repeat: -1
        });
         this.anims.create({
        key: 'sonjahandst',
        frames: this.anims.generateFrameNumbers('sonjahandst', { start: 0, end: 5 }),
        frameRate: 10,
        repeat: -1
        });
        this.anims.create({
        key: 'sonjakicks',
        frames: this.anims.generateFrameNumbers('sonjakicks', { start: 0, end: 6 }),
        frameRate: 10,
        repeat: -1
        });
        this.anims.create({
        key: 'sonjadancer',
        frames: this.anims.generateFrameNumbers('sonjadancer', { start: 0, end: 9 }),
        frameRate: 10,
        repeat: -1
        });
        this.anims.create({
        key: 'sonjakiss',
        frames: this.anims.generateFrameNumbers('sonjakiss', { start: 0, end: 5 }),
        frameRate: 10,
        repeat: -1
        });
        this.anims.create({
        key: 'sonjakissgr',
        frames: this.anims.generateFrameNumbers('sonjakissgr', { start: 0, end: 11 }),
        frameRate: 10,
        repeat: -1
        });

        this.anims.create({
        key: 'sonjablaster',
        frames: this.anims.generateFrameNumbers('sonjablaster', { start: 0, end: 5 }),
        frameRate: 10,
        repeat: -1
        });
        this.anims.create({
        key: 'sonjablastergr',
        frames: this.anims.generateFrameNumbers('sonjablastergr', { start: 0, end: 3 }),
        frameRate: 10,
        repeat: -1
        });
       this.anims.create({
        key: 'sonjablasterexplode',
        frames: this.anims.generateFrameNumbers('sonjablasterexplode', { start: 0, end: 14 }),
        frameRate: 10,
        repeat: 0
        });



     this.anims.create({
        key: 'sektordead',
        frames: this.anims.generateFrameNumbers('sektordead', { start: 0, end: 0 }),
        frameRate: 1,
        repeat: 0
    });
  
       this.anims.create({
        key: 'sektoridle',
        frames: this.anims.generateFrameNumbers('sektor', { start: 0, end: 7 }),
        frameRate: 10,
        yoyo: true,
        repeat: -1
    });
  
       this.anims.create({
        key: 'sektorwalk',
        frames: this.anims.generateFrameNumbers('sektorwalk', { start: 0, end: 11 }),
        frameRate: 10,
        repeat: -1
    });



  
 this.anims.create({
        key: 'orchidspear',
        frames: this.anims.generateFrameNumbers('orchidspear', { start: 0, end: 0 }),
        frameRate: 1,
        repeat: 0
    }); 
  this.anims.create({
        key: 'orchiddead',
        frames: this.anims.generateFrameNumbers('orchiddead', { start: 0, end: 0 }),
        frameRate: 1,
        repeat: 0
    });
       this.anims.create({
        key: 'orchididle',
        frames: this.anims.generateFrameNumbers('orchid', { start: 0, end: 7 }),
        frameRate: 10,
        yoyo: true,
        repeat: -1
    });
  
       this.anims.create({
        key: 'orchidwalk',
        frames: this.anims.generateFrameNumbers('orchidwalk', { start: 0, end: 11 }),
        frameRate: 10,
        repeat: -1
    });
        this.anims.create({
        key: 'orchidwheel',
        frames: this.anims.generateFrameNumbers('orchidwheel', { start: 0, end: 19 }),
        frameRate: 10,
        repeat: -1
    });
        this.anims.create({
        key: 'orchidfireba',
        frames: this.anims.generateFrameNumbers('orchidfireba', { start: 0, end: 13 }),
        frameRate: 10,
        repeat: -1
    });
        this.anims.create({
        key: 'orchidfirebagr',
        frames: this.anims.generateFrameNumbers('orchidfirebagr', { start: 0, end: 4 }),
        frameRate: 10,
        repeat: -1
    });
       this.anims.create({
        key: 'orchidfirebaexplode',
        frames: this.anims.generateFrameNumbers('orchidfirebaexplode', { start: 0, end: 39 }),
        frameRate: 20,
        repeat: 0
    });


        this.anims.create({
        key: 'orchidbaton',
        frames: this.anims.generateFrameNumbers('orchidbaton', { start: 0, end: 14 }),
        frameRate: 10,
        repeat: -1
    });
        this.anims.create({
        key: 'orchidcat',
        frames: this.anims.generateFrameNumbers('orchidcat', { start: 0, end: 15 }),
        frameRate: 10,
        repeat: 0
    });
    this.anims.create({
        key: 'orchidfit',
        frames: this.anims.generateFrameNumbers('orchidfit', { start: 0, end: 27 }),
        frameRate: 20,
        repeat: 0
    });


this.anims.create({
        key: 'cecildead',
        frames: this.anims.generateFrameNumbers('cecil', { start: 5, end: 5 }),
        frameRate: 1,
        repeat: 0
    });
    this.anims.create({
        key: 'cecilwalk',
        frames: this.anims.generateFrameNumbers('cecil', { start: 0, end: 1 }),
        frameRate: 10,
        repeat: -1
    });
     this.anims.create({
        key: 'cecilidle',
        frames: this.anims.generateFrameNumbers('cecil', { start: 0, end: 0 }),
        frameRate: 1,
        repeat: -1
    });
//rosa animstuff

this.anims.create({
        key: 'rosaspear',
        frames: this.anims.generateFrameNumbers('rosaspear', { start: 0, end: 0 }),
        frameRate: 1,
        repeat: 0
    });

 this.anims.create({
        key: 'rosadead',
        frames: this.anims.generateFrameNumbers('rosa', { start: 5, end: 5 }),
        frameRate: 1,
        repeat: 0
    });
    this.anims.create({
        key: 'rosawalk',
        frames: this.anims.generateFrameNumbers('rosa', { start: 0, end: 1 }),
        frameRate: 10,
        repeat: -1
    });
     this.anims.create({
        key: 'rosaidle',
        frames: this.anims.generateFrameNumbers('rosa', { start: 0, end: 0 }),
        frameRate: 1,
        repeat: -1
    });
       this.anims.create({
        key: 'rosacasting',
        frames: this.anims.generateFrameNumbers('rosa', { start: 6, end: 7 }),
        frameRate: 1,
        repeat: -1
    });
    

this.anims.create({
        key: 'cyandead',
        frames: this.anims.generateFrameNumbers('cyan', { start: 5, end: 5 }),
        frameRate: 1,
        repeat: 0
    });
 
    this.anims.create({
        key: 'cyanwalk',
        frames: this.anims.generateFrameNumbers('cyan', { start: 0, end: 1 }),
        frameRate: 10,
        repeat: -1
    });
     this.anims.create({
        key: 'cyanidle',
        frames: this.anims.generateFrameNumbers('cyan', { start: 0, end: 0 }),
        frameRate: 1,
        repeat: -1
    });
    


  this.anims.create({
        key: 'golbezdead',
        frames: this.anims.generateFrameNumbers('golbez', { start: 5, end: 5 }),
        frameRate: 1,
        repeat: 0
    });
    this.anims.create({
        key: 'golbezwalk',
        frames: this.anims.generateFrameNumbers('golbez', { start: 0, end: 1 }),
        frameRate: 10,
        repeat: -1
    });
     this.anims.create({
        key: 'golbezidle',
        frames: this.anims.generateFrameNumbers('golbez', { start: 0, end: 0 }),
        frameRate: 1,
        repeat: -1
    });
    
    this.anims.create({
        key: 'kaindead',
        frames: this.anims.generateFrameNumbers('kain', { start: 5, end: 5 }),
        frameRate: 1,
        repeat: 0
    });
    this.anims.create({
        key: 'kainwalk',
        frames: this.anims.generateFrameNumbers('kain', { start: 0, end: 1 }),
        frameRate: 10,
        repeat: -1
    });
     this.anims.create({
        key: 'kainidle',
        frames: this.anims.generateFrameNumbers('kain', { start: 0, end: 0 }),
        frameRate: 1,
        repeat: -1
    });
    
//terraanims
      this.anims.create({
        key: 'terraspear',
        frames: this.anims.generateFrameNumbers('terraspear', { start: 0, end: 0 }),
        frameRate: 1,
        repeat: 0
    });

        this.anims.create({
        key: 'terradead',
        frames: this.anims.generateFrameNumbers('terra', { start: 5, end: 5 }),
        frameRate: 1,
        repeat: 0
    });
    this.anims.create({
        key: 'terrawalk',
        frames: this.anims.generateFrameNumbers('terra', { start: 0, end: 1 }),
        frameRate: 10,
        repeat: -1
    });
     this.anims.create({
        key: 'terraidle',
        frames: this.anims.generateFrameNumbers('terra', { start: 0, end: 0 }),
        frameRate: 1,
        repeat: -1
    });
     this.anims.create({
        key: 'terracasting',
        frames: this.anims.generateFrameNumbers('terra', { start: 6, end: 7 }),
        frameRate: 1,
        repeat: -1
    });
    this.anims.create({
        key: 'terrafirespell',
        frames: this.anims.generateFrameNumbers('terrafirespell', { start: 0, end: 9 }),
        frameRate: 10,
        repeat: -1
    });
    this.anims.create({
        key: 'terraicespell',
        frames: this.anims.generateFrameNumbers('terraicespell', { start: 0, end: 14 }),
        frameRate: 10,
        repeat: -1
    });
    this.anims.create({
        key: 'terrawindspell',
        frames: this.anims.generateFrameNumbers('terrawindspell', { start: 0, end: 12 }),
        frameRate: 10,
        repeat: -1
    });
     this.anims.create({
        key: 'terraearthspell',
        frames: this.anims.generateFrameNumbers('terraearthspell', { start: 0, end: 12 }),
        frameRate: 10,
        repeat: -1
    });


    
     this.anims.create({
        key: 'mogspear',
        frames: this.anims.generateFrameNumbers('mogspear', { start: 0, end: 0 }),
        frameRate: 1,
        repeat: 0
    });

    this.anims.create({
        key: 'mogdead',
        frames: this.anims.generateFrameNumbers('mog', { start: 5, end: 5 }),
        frameRate: 1,
        repeat: 0
    });
    this.anims.create({
        key: 'mogwalk',
        frames: this.anims.generateFrameNumbers('mog', { start: 0, end: 1 }),
        frameRate: 10,
        repeat: -1
    });
     this.anims.create({
        key: 'mogidle',
        frames: this.anims.generateFrameNumbers('mog', { start: 0, end: 0 }),
        frameRate: 1,
        repeat: -1
    });
 this.anims.create({
        key: 'mogcasting',
        frames: this.anims.generateFrameNumbers('mog', { start: 6, end: 7 }),
        frameRate: 1,
        repeat: -1
    });
    
 //subzeroanim
        this.anims.create({
        key: 'subzeroready',
        frames: this.anims.generateFrameNumbers('subzeroready', { start: 0, end: 29 }),
        frameRate: 25,
        repeat: -1
    });
    
     this.anims.create({
        key: 'subzeroiceblast',
        frames: this.anims.generateFrameNumbers('subzeroiceblast', { start: 0, end: 26 }),
        frameRate: 15,
        repeat: 0
    });
     this.anims.create({
        key: 'subzeroiceblastgr',
        frames: this.anims.generateFrameNumbers('subzeroiceblastgr', { start: 0, end: 45 }),
        frameRate: 50,
        repeat: 0
    });
    
         this.anims.create({
        key: 'subzerowalk',
        frames: this.anims.generateFrameNumbers('subzerowalk', { start: 0, end: 30 }),
        frameRate: 25,
        repeat: -1
    });
    
        this.anims.create({
        key: 'subzeroslide',
        frames: this.anims.generateFrameNumbers('subzeroslide', { start: 0, end: 29 }),
        frameRate: 25,
        repeat: 0
    });
        
//scorpionanim
//scorpionanims

     this.anims.create({
        key: 'scorpionwalk',
        frames: this.anims.generateFrameNumbers('scorpionwalk', { start: 0, end: 21 }),
        frameRate: 25,
        repeat: -1
    });
    
    this.anims.create({
        key: 'scorpionready',
        frames: this.anims.generateFrameNumbers('scorpionready', { start: 0, end: 23 }),
        frameRate: 25,
        repeat: -1
    });
    
     this.anims.create({
        key: 'scorpionspear',
        frames: this.anims.generateFrameNumbers('scorpionspear', { start: 0, end: 54 }),
        frameRate: 25,
        repeat: 0
    });
     this.anims.create({
        key: 'scorpionspeargr',
        frames: this.anims.generateFrameNumbers('scorpionspeargr', { start: 0, end: 9 }),
        frameRate: 10,
        yoyo: true,
        repeat: 0
        
    });
    
     this.anims.create({
        key: 'scorpionpunch',
        frames: this.anims.generateFrameNumbers('scorpionpunch', { start: 0, end: 24 }),
        frameRate: 25,
        repeat: -1
    });


  
    //  Input Events
    cursors = this.input.keyboard.createCursorKeys();
//endanims 
//***********************************************
//beginplayerskillbuttons
//playerskillbuttons
//buttons
//


if (kangactive == true) {
//kangbuttons

kangflykickbox = this.physics.add.sprite(kangflykickboxx , kangflykickboxy , 'kangflykickbox').setInteractive();
kangflykickbox.on('pointerdown', function (pointer) {
if (battlemode == true) {
if (kangstatus == 'normal') {
if (kangbuttonselected == false) {
if (kangaction > 99) {
    actionquenumber += 1
kangflykicksound.play();
iskangattackingflykick = true
kangbuttonselected = true
iskangpickingtarget = true
iskangtargetpicked = false
if (iskangtargetpicked == false) {
if (enemy1name == 'Subzero') {
subzero.setTint(0xFF0000);
}
}
}


if (autotarget == true) {
 if (iskangpickingtarget == true){
if (iskangattackingflykick == true){
        
        kangbuttonselected = true
        kangcurrenttargetx = subzero.x
        kangcurrenttargety = subzero.y
        iskangattackingnow = true
        iskangtargetpicked = true
        kang.anims.play('kangflykick', true);
        kangidle = false 
        
}
}
}
}
}
}
});
kangfireballbox = this.physics.add.sprite(kangfireballboxx  , kangfireballboxy , 'kangfireballbox').setInteractive();
kangfireballbox.on('pointerdown', function (pointer) {
if (battlemode == true) {
if (kangstatus == 'normal') {
if (kangbuttonselected == false) {
if (kangaction > 99) {
    actionquenumber += 1
kangfireballsound.play();
iskangattackingfireball = true
iskangpickingtarget = true
iskangtargetpicked = false
kangbuttonselected = true
if (iskangtargetpicked == false) {
if (enemy1name == 'Subzero') {
subzero.setTint(0xFF0000);
}
}
}
if (autotarget == true) {
if (iskangpickingtarget == true){
if (iskangattackingfireball == true){
        
        kangbuttonselected = true
        kangcurrenttargetx = subzero.x
        kangcurrenttargety = subzero.y
        iskangattackingnow = true
        iskangtargetpicked = true
        kang.anims.play('kangfireball', true);
        kangidle = false 
        
}
}
}
}
}
}
});
kangbicyclebox = this.physics.add.sprite(kangbicycleboxx   , kangbicycleboxy , 'kangbicyclebox').setInteractive();
kangbicyclebox.on('pointerdown', function (pointer) {
kangbicyclekicksound.play();
if (battlemode == true) {
if (kangstatus == 'normal') {
if (kangbuttonselected == false) {
if (kangaction > 99) {
    actionquenumber += 1
iskangattackingbicycle = true
iskangpickingtarget = true
iskangtargetpicked = false
kangbuttonselected = true
if (iskangtargetpicked == false) {
if (enemy1name == 'Subzero') {
subzero.setTint(0xFF0000);
}
}
}
if (autotarget == true) {
if (iskangpickingtarget == true){
if (iskangattackingbicycle == true){
        
        kangbuttonselected = true
        kangcurrenttargetx = subzero.x
        kangcurrenttargety = subzero.y
        iskangattackingnow = true
        iskangtargetpicked = true
        kangidle = false 
        
}
}
}
}
}
}
});
kangdragonbox = this.physics.add.sprite(kangdragonboxx   , kangdragonboxy , 'kangdragonbox').setInteractive();
kangdragonbox.on('pointerdown', function (pointer) {
if (battlemode == true) {
if (kangstatus == 'normal') {
if (kangbuttonselected == false) {
if (kangaction > 99) {
    actionquenumber += 1
iskangattackingdragon = true
iskangpickingtarget = true
iskangtargetpicked = false
kangbuttonselected = true
if (iskangtargetpicked == false) {
if (enemy1name == 'Subzero') {
subzero.setTint(0xFF0000);
}
}
}
if (autotarget == true) {
if (iskangpickingtarget == true){
if (iskangattackingdragon == true){
        
        kangbuttonselected = true
        endkangattacknumber = 0
        kangcurrenttargetx = subzero.x
        kangcurrenttargety = subzero.y
        iskangattackingnow = true
        iskangtargetpicked = true
        kangidle = false 

        
}
}
}
}
}
}
});

kangprayerbox = this.physics.add.sprite(kangprayerboxx   , kangprayerboxy , 'kangprayerbox').setInteractive();
kangprayerbox.on('pointerdown', function (pointer) {
if (battlemode == true) {
if (kangstatus == 'normal') {
if (kangbuttonselected == false) {
if (kangaction > 99) {
    actionquenumber += 1
iskangattackingprayer = true
iskangpickingtarget = true
iskangtargetpicked = false
kangbuttonselected = true
if (iskangtargetpicked == false) {
if (enemy1name == 'Subzero') {
subzero.setTint(0xFF0000);
}
}
}
if (autotarget == true) {
if (iskangpickingtarget == true){
if (iskangattackingprayer == true){
        
        kangbuttonselected = true
        endkangattacknumber = 0
        kangcurrenttargetx = subzero.x
        kangcurrenttargety = subzero.y
        iskangattackingnow = true
        iskangtargetpicked = true
        kangidle = false 

        
}
}
}
}
}
}
});
}

if (spinalactive == true) {
//spinalbuttons
spinalslicebox = this.physics.add.sprite(spinalsliceboxx , spinalsliceboxy , 'spinalslicebox').setInteractive();
spinalslicebox.on('pointerdown', function (pointer) {
if (battlemode == true) {
if (spinalstatus == 'normal') {
if (spinalbuttonselected == false) {
if (spinalaction > 99) {
    actionquenumber += 1
isspinalattackingslice = true
isspinalpickingtarget = true
isspinaltargetpicked = false
spinalbuttonselected = true
if (isspinaltargetpicked == false) {
if (enemy1name == 'Subzero') {
subzero.setTint(0xFF0000);
}
}
}
if (autotarget == true) {
 if (isspinalpickingtarget == true){
if (isspinalattackingslice == true){
        spinalaction = 0 
        endspinalattacknumber = 0
        spinalbuttonselected = true
        spinalcurrenttargetx = subzero.x
        spinalcurrenttargety = subzero.y
        isspinalattackingnow = true
        isspinaltargetpicked = true
        spinalidle = false 
        spinalslicevoicesound.play();
        
}
}
}
}
}
}
});
spinalslashbox = this.physics.add.sprite(spinalslashboxx , spinalslashboxy , 'spinalslashbox').setInteractive();
spinalslashbox.on('pointerdown', function (pointer) {
if (battlemode == true) {
if (spinalstatus == 'normal') {
if (spinalbuttonselected == false) {
if (spinalaction > 99) {
    actionquenumber += 1
isspinalattackingslash = true
isspinalpickingtarget = true
isspinaltargetpicked = false
spinalbuttonselected = true
if (isspinaltargetpicked == false) {
if (enemy1name == 'Subzero') {
subzero.setTint(0xFF0000);
}
}
}
if (autotarget == true) {
 if (isspinalpickingtarget == true){
if (isspinalattackingslash == true){
        spinalaction = 0 
        endspinalattacknumber = 0
        spinalcurrenttargetx = subzero.x
        spinalcurrenttargety = subzero.y
        isspinalattackingnow = true
        isspinaltargetpicked = true
        spinalbuttonselected = true
        spinalidle = false 
        spinalslashvoicesound.play();
        
}
}
}
}
}
}
});
spinalbashbox = this.physics.add.sprite(spinalbashboxx , spinalbashboxy , 'spinalbashbox').setInteractive();
spinalbashbox.on('pointerdown', function (pointer) {
if (battlemode == true) {
if (spinalstatus == 'normal') {
if (spinalbuttonselected == false) {
if (spinalaction > 99) {
    actionquenumber += 1
isspinalattackingbash = true
isspinalpickingtarget = true
isspinaltargetpicked = false
spinalbuttonselected = true
if (isspinaltargetpicked == false) {
if (enemy1name == 'Subzero') {
subzero.setTint(0xFF0000);
}
}
}
if (autotarget == true) {
if (isspinalpickingtarget == true){
if (isspinalattackingbash == true){
        spinalaction = 0 
        endspinalattacknumber = 0
        spinalcurrenttargetx = subzero.x
        spinalcurrenttargety = subzero.y
        isspinalattackingnow = true
        isspinaltargetpicked = true
        spinalbuttonselected = true
        spinalidle = false 
        spinalbashvoicesound.play();
}
}
}
}
}
}
});
spinalspikebox = this.physics.add.sprite(spinalspikeboxx , spinalspikeboxy , 'spinalspikebox').setInteractive();
spinalspikebox.on('pointerdown', function (pointer) {
if (battlemode == true) {
if (spinalstatus == 'normal') {
if (spinalbuttonselected == false) {
if (spinalaction > 99) {
    actionquenumber += 1
isspinalattackingspike = true
isspinalpickingtarget = true
isspinaltargetpicked = false
spinalbuttonselected = true
if (isspinaltargetpicked == false) {
if (enemy1name == 'Subzero') {
subzero.setTint(0xFF0000);
}
}
}
if (autotarget == true) {
if (isspinalpickingtarget == true){
if (isspinalattackingspike == true){
        spinalaction = 0 
        endspinalattacknumber = 0
        spinalcurrenttargetx = subzero.x
        spinalcurrenttargety = subzero.y
        isspinalattackingnow = true
        isspinaltargetpicked = true
        spinalbuttonselected = true
        spinalidle = false 

        
}
}
}
}
}
}
});
spinalblockbox = this.physics.add.sprite(spinalblockboxx , spinalblockboxy , 'spinalblockbox').setInteractive();
spinalblockbox.on('pointerdown', function (pointer) {
if (battlemode == true) {
if (spinalstatus == 'normal') {
if (spinalbuttonselected == false) {
if (spinalaction > 99) {
    actionquenumber += 1
isspinalattackingblock = true
isspinalpickingtarget = true
isspinaltargetpicked = false
spinalbuttonselected = true
if (isspinaltargetpicked == false) {
if (enemy1name == 'Subzero') {
subzero.setTint(0xFF0000);
}
}
}
if (autotarget == true) {
if (isspinalpickingtarget == true){
if (isspinalattackingblock == true){
        spinalaction = 0 
        endspinalattacknumber = 0
        spinalcurrenttargetx = subzero.x
        spinalcurrenttargety = subzero.y
        isspinalattackingnow = true
        isspinaltargetpicked = true
        spinalbuttonselected = true
        spinalidle = false 
        
}
}
}
}
}
}
});
}

if (comboactive == true) {
//combobuttons
combopunchbox = this.physics.add.sprite(combopunchboxx , combopunchboxy , 'combopunchbox').setInteractive();
combopunchbox.on('pointerdown', function (pointer) {
if (battlemode == true) {
if (combostatus == 'normal') {
if (combobuttonselected == false) {
if (comboaction > 99) {
iscomboattackingpunch = true
iscombopickingtarget = true
iscombotargetpicked = false
combobuttonselected = true
if (iscombotargetpicked == false) {
if (enemy1name == 'Subzero') {
subzero.setTint(0xFF0000);
}
}
}
if (autotarget == true) {
if (iscombopickingtarget == true){
if (iscomboattackingpunch == true){
        comboaction = 0 
        endcomboattacknumber = 0
        combobuttonselected = true
        combocurrenttargetx = subzero.x
        combocurrenttargety = subzero.y
        iscomboattackingnow = true
        iscombotargetpicked = true
        comboidle = false 
        
}
}
}
}
}
}
});
combojumpkickbox = this.physics.add.sprite(combojumpkickboxx , combojumpkickboxy , 'combojumpkickbox').setInteractive();
combojumpkickbox.on('pointerdown', function (pointer) {
if (battlemode == true) {
if (combostatus == 'normal') {
if (combobuttonselected == false) {
if (comboaction > 99) {
iscomboattackingjumpkick = true
iscombopickingtarget = true
iscombotargetpicked = false
combobuttonselected = true
if (iscombotargetpicked == false) {
if (enemy1name == 'Subzero') {
subzero.setTint(0xFF0000);
}
}
}
if (autotarget == true) {
 if (iscombopickingtarget == true){
if (iscomboattackingjumpkick == true){
        comboaction = 0 
        endcomboattacknumber = 0
        combocurrenttargetx = subzero.x
        combocurrenttargety = subzero.y
        iscomboattackingnow = true
        iscombotargetpicked = true
        combobuttonselected = true
        comboidle = false 
        
}
}
}
}
}
}
});
combogunbox = this.physics.add.sprite(combogunboxx , combogunboxy , 'combogunbox').setInteractive();
combogunbox.on('pointerdown', function (pointer) {
if (battlemode == true) {
if (combostatus == 'normal') {
if (combobuttonselected == false) {
if (comboaction > 99) {
iscomboattackinggun = true
iscombopickingtarget = true
iscombotargetpicked = false
combobuttonselected = true
if (iscombotargetpicked == false) {
if (enemy1name == 'Subzero') {
subzero.setTint(0xFF0000);
}
}
}
if (autotarget == true) {
if (iscombopickingtarget == true){
if (iscomboattackinggun == true){
        comboaction = 0 
        endcomboattacknumber = 0
        combocurrenttargetx = subzero.x
        combocurrenttargety = subzero.y
        iscomboattackingnow = true
        iscombotargetpicked = true
        combobuttonselected = true
        comboidle = false 
        
}
}
}
}
}
}
});
comboslambox = this.physics.add.sprite(comboslamboxx , comboslamboxy , 'comboslambox').setInteractive();
comboslambox.on('pointerdown', function (pointer) {
if (battlemode == true) {
if (combostatus == 'normal') {
if (combobuttonselected == false) {
if (comboaction > 99) {
iscomboattackingslam = true
iscombopickingtarget = true
iscombotargetpicked = false
combobuttonselected = true
if (iscombotargetpicked == false) {
if (enemy1name == 'Subzero') {
subzero.setTint(0xFF0000);
}
}
}
if (autotarget == true) {
if (iscombopickingtarget == true){
if (iscomboattackingslam == true){
        comboaction = 0 
        endcomboattacknumber = 0
        combocurrenttargetx = subzero.x
        combocurrenttargety = subzero.y
        iscomboattackingnow = true
        iscombotargetpicked = true
        combobuttonselected = true
        comboidle = false 

        
}
}
}
}
}
}
});
combomusclebox = this.physics.add.sprite(combomuscleboxx , combomuscleboxy , 'combomusclebox').setInteractive();
combomusclebox.on('pointerdown', function (pointer) {
if (battlemode == true) {
if (combostatus == 'normal') {
if (combobuttonselected == false) {
if (comboaction > 99) {
iscomboattackingmuscle = true
iscombopickingtarget = true
iscombotargetpicked = false
combobuttonselected = true
if (iscombotargetpicked == false) {
if (enemy1name == 'Subzero') {
subzero.setTint(0xFF0000);
}
}
}
if (autotarget == true) {
if (iscombopickingtarget == true){
if (iscomboattackingmuscle == true){
        comboaction = 0 
        endcomboattacknumber = 0
        combocurrenttargetx = subzero.x
        combocurrenttargety = subzero.y
        iscomboattackingnow = true
        iscombotargetpicked = true
        combobuttonselected = true
        comboidle = false 
        
}
}
}
}
}
}
});
}
//kanobuttons
kanobladesbox = this.physics.add.sprite(kanobladesboxx , kanobladesboxy , 'kanobladesbox').setInteractive();
kanobladesbox.on('pointerdown', function (pointer) {
if (battlemode == true) {
if (kanostatus == 'normal') {
if (kanobuttonselected == false) {
if (kanoaction > 99) {
    actionquenumber += 1
kanobladesound.play();
kanobladevoicesound.play();
iskanoattackingblades = true
iskanopickingtarget = true
iskanotargetpicked = false
kanobuttonselected = true
if (iskanotargetpicked == false) {
if (enemy1name == 'Subzero') {
subzero.setTint(0xFF0000);
}
}
}
if (autotarget == true) {
if (iskanopickingtarget == true){
if (iskanoattackingblades == true){
        kanoaction = 0
        kanocurrenttargetx = subzero.x
        kanocurrenttargety = subzero.y
        iskanoattackingnow = true
        iskanotargetpicked = true
        kano.anims.play('kanoblades', true);
        kanoidle = false 
        kanobuttonselected = true
}
}
}
}
}
}
});
kanocutbox = this.physics.add.sprite(kanocutboxx , kanocutboxy , 'kanocutbox').setInteractive();
kanocutbox.on('pointerdown', function (pointer) {
if (battlemode == true) {
if (kanostatus == 'normal') {
if (kangbuttonselected == false) {
if (kanoaction > 99) {
    actionquenumber += 1
kanocutvoicesound.play();
iskanoattackingcut = true
iskanopickingtarget = true
iskanotargetpicked = false
kanobuttonselected = true
if (iskanotargetpicked == false) {
if (enemy1name == 'Subzero') {
subzero.setTint(0xFF0000);
}
}
}
if (autotarget == true) {
if (iskanopickingtarget == true){
if (iskanoattackingcut == true){
        kanoaction = 0 
        endkanoattacknumber = 0
        kanocurrenttargetx = subzero.x
        kanocurrenttargety = subzero.y
        iskanoattackingnow = true
        iskanotargetpicked = true
        kanoidle = false 
        kanobuttonselected = true
        
}
}
}
}
}
}
});
kanolaserbox = this.physics.add.sprite(kanolaserboxx , kanolaserboxy , 'kanolaserbox').setInteractive();
kanolaserbox.on('pointerdown', function (pointer) {
if (battlemode == true) {
if (kanostatus == 'normal') {
if (kangbuttonselected == false) {
if (kanoaction > 99) {
    actionquenumber += 1
iskanoattackinglaser = true
iskanopickingtarget = true
iskanotargetpicked = false

if (iskanotargetpicked == false) {
if (enemy1name == 'Subzero') {
subzero.setTint(0xFF0000);
}
}
}
if (autotarget == true) {
        kanoaction = 0 
        endkanoattacknumber = 0
        kanocurrenttargetx = subzero.x
        kanocurrenttargety = subzero.y
        iskanoattackingnow = true
        iskanotargetpicked = true
        kanoidle = false 
        kanobuttonselected = true
}
}
}
}
});
kanohellbox = this.physics.add.sprite(kanohellboxx, kanohellboxy, 'kanohellbox').setInteractive();
kanohellbox.on('pointerdown', function (pointer) {
if (battlemode == true) {
if (kanostatus == 'normal') {
if (kangbuttonselected == false) {
if (kanoaction > 99) {
    actionquenumber += 1
kanohellvoicesound.play();
iskanoattackinghell = true
iskanopickingtarget = true
iskanotargetpicked = false

if (iskanotargetpicked == false) {
if (enemy1name == 'Subzero') {
subzero.setTint(0xFF0000);
}
}
}
if (autotarget == true) {
        kanoaction = 0 
        endkanoattacknumber = 0
        kanocurrenttargetx = subzero.x
        kanocurrenttargety = subzero.y
        iskanoattackingnow = true
        iskanotargetpicked = true
        kanoidle = false 
        kanobuttonselected = true

}
}
}
}
});
kanokickbox = this.physics.add.sprite(kanokickboxx , kanokickboxy , 'kanokickbox').setInteractive();
kanokickbox.on('pointerdown', function (pointer) {
if (battlemode == true) {
if (kanostatus == 'normal') {
if (kangbuttonselected == false) {
if (kanoaction > 99) {
    actionquenumber += 1
kanokickvoicesound.play();
iskanoattackingkick = true
iskanopickingtarget = true
iskanotargetpicked = false
kanobuttonselected = true
if (iskanotargetpicked == false) {
if (enemy1name == 'Subzero') {
subzero.setTint(0xFF0000);
}
}
}
if (autotarget == true) {
if (iskanopickingtarget == true){
if (iskanoattackingkick == true){
     
        kanoaction = 0 
        endkanoattacknumber = 0
        kanocurrenttargetx = subzero.x
        kanocurrenttargety = subzero.y
        iskanoattackingnow = true
        iskanotargetpicked = true
        kanoidle = false 
        kanobuttonselected = true

        

}
}
}
}
}
}
});
//orchidbuttons
orchidwheelbox = this.physics.add.sprite(orchidwheelboxx , orchidwheelboxy , 'orchidwheelbox').setInteractive();
orchidwheelbox.on('pointerdown', function (pointer) {
if (battlemode == true) {
if (orchidstatus == 'normal') {
if (orchidbuttonselected == false) {
if (orchidaction > 99) {
    actionquenumber += 1
orchidwheelvoicesound.play();
endorchidattacknumber = 0
isorchidattackingwheel = true
isorchidpickingtarget = true
isorchidtargetpicked = false
orchidbuttonselected = true
if (isorchidtargetpicked == false) {
if (enemy1name == 'Subzero') {
subzero.setTint(0xFF0000);
}
}
}
if (autotarget == true) {
if (isorchidpickingtarget == true){
if (isorchidattackingwheel == true){
        orchidaction = 0 
        endorchidattacknumber = 0
        orchidcurrenttargetx = subzero.x
        orchidcurrenttargety = subzero.y
        isorchidattackingnow = true
        isorchidtargetpicked = true
        orchid.anims.play('orchidwheel', true);
        orchididle = false 
        orchidbuttonselected = true
        
}
}
}
}
}
}
});
orchidfirebabox = this.physics.add.sprite(orchidfirebaboxx , orchidfirebaboxy , 'orchidfirebabox').setInteractive();
orchidfirebabox.on('pointerdown', function (pointer) {
if (battlemode == true) {
if (orchidstatus == 'normal') {
if (orchidbuttonselected == false) {
if (orchidaction > 99) {
    actionquenumber += 1
orchidlasakensound.play();
endorchidattacknumber = 0
isorchidattackingfireba = true
isorchidpickingtarget = true
isorchidtargetpicked = false
orchidbuttonselected = true
if (isorchidtargetpicked == false) {
if (enemy1name == 'Subzero') {
subzero.setTint(0xFF0000);
}
}
}
if (autotarget == true) {
 if (isorchidpickingtarget == true){
if (isorchidattackingfireba == true){
        orchidaction = 0 
        orchidcurrenttargetx = subzero.x
        orchidcurrenttargety = subzero.y
        isorchidattackingnow = true
        isorchidtargetpicked = true
        orchid.anims.play('orchidfireba', true);
        orchididle = false 
        orchidbuttonselected = true
}
}
}
}
}
}
});
orchidbatonbox = this.physics.add.sprite(orchidbatonboxx , orchidbatonboxy , 'orchidbatonbox').setInteractive();
orchidbatonbox.on('pointerdown', function (pointer) {
if (battlemode == true) {
if (orchidstatus == 'normal') {
if (orchidbuttonselected == false) {
if (orchidaction > 99) {
    actionquenumber += 1
orchidbatonvoicesound.play();
endorchidattacknumber = 0
isorchidattackingbaton = true
isorchidpickingtarget = true
isorchidtargetpicked = false
orchidbuttonselected = true
if (isorchidtargetpicked == false) {
if (enemy1name == 'Subzero') {
subzero.setTint(0xFF0000);
}
}
}
if (autotarget == true) {
if (isorchidpickingtarget == true){
if (isorchidattackingbaton == true){
        orchidcurrenttargetx = subzero.x
        orchidcurrenttargety = subzero.y
        isorchidattackingnow = true
        isorchidtargetpicked = true
        orchid.anims.play('orchidbaton', true);
        orchidaction = 0 
        endorchidattacknumber = 0
        orchididle = false 
        orchidbuttonselected = true
}
}
}
}
}
}
});
orchidcatbox = this.physics.add.sprite(orchidcatboxx , orchidcatboxy , 'orchidcatbox').setInteractive();
orchidcatbox.on('pointerdown', function (pointer) {
if (battlemode == true) {
if (orchidstatus == 'normal') {
if (orchidbuttonselected == false) {
if (orchidaction > 99) {
    actionquenumber += 1
orchidcatsound.play();
endorchidattacknumber = 0
isorchidattackingcat = true
isorchidpickingtarget = true
isorchidtargetpicked = false
orchidbuttonselected = true
if (isorchidtargetpicked == false) {
if (enemy1name == 'Subzero') {
subzero.setTint(0xFF0000);
}
}
}
if (autotarget == true) {
if (isorchidpickingtarget == true){
if (isorchidattackingcat == true){
        endorchidattacknumber = 0
        orchidaction = 0 
        orchidcurrenttargetx = subzero.x
        orchidcurrenttargety = subzero.y
        isorchidattackingnow = true
        isorchidtargetpicked = true
        orchid.anims.play('orchidcat', true);
        orchididle = false 
        orchidbuttonselected = true

        
}
}
}
}
}
}
});
orchidfitbox = this.physics.add.sprite(orchidfitboxx , orchidfitboxy , 'orchidfitbox').setInteractive();
orchidfitbox.on('pointerdown', function (pointer) {
if (battlemode == true) {
if (orchidstatus == 'normal') {
if (orchidbuttonselected == false) {
if (fighter2action > 99) {
    actionquenumber += 1
orchidfitvoicesound.play();
isorchidattackingfit = true
isorchidpickingtarget = true
isorchidtargetpicked = false
if (isorchidtargetpicked == false) {
if (enemy1name == 'Subzero') {
subzero.setTint(0xFF0000);
}
}
}
if (autotarget == true) {
if (isorchidpickingtarget == true){
if (isorchidattackingfit == true){
        endorchidattacknumber = 0
        orchidaction = 0 
        orchidcurrenttargetx = subzero.x
        orchidcurrenttargety = subzero.y
        isorchidattackingnow = true
        isorchidtargetpicked = true
        orchididle = false 
        orchidbuttonselected = true
}
}
}
}
}
}
});
//jagobuttons
jagoswordbox = this.physics.add.sprite(jagoswordboxx, jagoswordboxy , 'jagoswordbox').setInteractive();
jagoswordbox.on('pointerdown', function (pointer) {
if (battlemode == true) {
if (jagostatus == 'normal') {
if (jagobuttonselected == false) {
if (jagoaction > 99) {
    actionquenumber += 1
isjagoattackingsword = true
isjagopickingtarget = true
isjagotargetpicked = false
jagobuttonselected = true
if (isjagotargetpicked == false) {
if (enemy1name == 'Subzero') {
subzero.setTint(0xFF0000);
}
}
}
if (autotarget == true) {
if (isjagopickingtarget == true){
if (isjagoattackingsword == true){
         endjagoattacknumber = 0
         jagoaction = 0 
        jagocurrenttargetx = subzero.x
        jagocurrenttargety = subzero.y
        isjagoattackingnow = true
        isjagotargetpicked = true
        jago.anims.play('jagosword', true);
        jagoidle = false 
        jagobuttonselected = true
        jagoswordvoicesound.play();
}
}
}
}
}
}
});
jagoplasmabox = this.physics.add.sprite(jagoplasmaboxx , jagoplasmaboxy , 'jagoplasmabox').setInteractive();
jagoplasmabox.on('pointerdown', function (pointer) {
if (battlemode == true) {
if (jagostatus == 'normal') {
if (jagobuttonselected == false) {
if (jagoaction > 99) {
    actionquenumber += 1
jagoplasmavoicesound.play();
isjagoattackingplasma = true
isjagopickingtarget = true
isjagotargetpicked = false
jagobuttonselected = true
if (isjagotargetpicked == false) {
if (enemy1name == 'Subzero') {
subzero.setTint(0xFF0000);
}
}
}
if (autotarget == true) {
 if (isjagopickingtarget == true){
if (isjagoattackingplasma == true){
        endjagoattacknumber = 0
        jagoaction = 0 
        jagocurrenttargetx = subzero.x
        jagocurrenttargety = subzero.y
        isjagoattackingnow = true
        isjagotargetpicked = true
        jago.anims.play('jagoplasma', true);
        jagoidle = false 
        jagobuttonselected = true
        
}
}
}
}
}
}
});
jagorkickbox = this.physics.add.sprite(jagorkickboxx , jagorkickboxy , 'jagorkickbox').setInteractive();
jagorkickbox.on('pointerdown', function (pointer) {
if (battlemode == true) {
if (jagostatus == 'normal') {
if (jagobuttonselected == false) {
if (jagoaction > 99) {
    actionquenumber += 1
isjagoattackingrkick = true
isjagopickingtarget = true
isjagotargetpicked = false
jagobuttonselected = true
if (isjagotargetpicked == false) {
if (enemy1name == 'Subzero') {
subzero.setTint(0xFF0000);
}
}
}
if (autotarget == true) {
if (isjagopickingtarget == true){
if (isjagoattackingrkick == true){
        endjagoattacknumber = 0
        jagoaction = 0 
        jagocurrenttargetx = subzero.x
        jagocurrenttargety = subzero.y
        isjagoattackingnow = true
        isjagotargetpicked = true
        jago.anims.play('jagorkick', true);
        jagoidle = false 
        jagobuttonselected = true
        
}
}
}
}
}
}
});
jagofocusbox = this.physics.add.sprite(jagofocusboxx , jagofocusboxy, 'jagofocusbox').setInteractive();
jagofocusbox.on('pointerdown', function (pointer) {
if (battlemode == true) {
if (jagostatus == 'normal') {
if (jagobuttonselected == false) {
if (jagoaction > 99) {
    actionquenumber += 1
isjagoattackingfocus = true
isjagopickingtarget = true
isjagotargetpicked = false

if (isjagotargetpicked == false) {
if (enemy1name == 'Subzero') {
subzero.setTint(0xFF0000);
}
}
}
if (autotarget == true) {
if (isjagopickingtarget == true){
if (isjagoattackingfocus == true){
        endjagoattacknumber = 0
        jagoaction = 0 
        jagocurrenttargetx = subzero.x
        jagocurrenttargety = subzero.y
        isjagoattackingnow = true
        isjagotargetpicked = true
        jagoidle = false 
        jagobuttonselected = true
        jagofocusvoicesound.play();
        
}
}
}
}
}
}
});
jagostabbox = this.physics.add.sprite(jagostabboxx , jagostabboxy , 'jagostabbox').setInteractive();
jagostabbox.on('pointerdown', function (pointer) {
if (battlemode == true) {
if (jagostatus == 'normal') {
if (jagobuttonselected == false) {
if (jagoaction > 99) {
    actionquenumber += 1
isjagoattackingstab = true
isjagopickingtarget = true
isjagotargetpicked = false

if (isjagotargetpicked == false) {
if (enemy1name == 'Subzero') {
subzero.setTint(0xFF0000);
}
}
}
if (autotarget == true) {
if (isjagopickingtarget == true){
if (isjagoattackingstab == true){
         endjagoattacknumber = 0
         jagoaction = 0 
        jagocurrenttargetx = subzero.x
        jagocurrenttargety = subzero.y
        isjagoattackingnow = true
        isjagotargetpicked = true
        jagoidle = false 
        jagobuttonselected = true
        
}
}
}
}
}
}
});
//kunglaobuttons
kunglaopalmkickbox = this.physics.add.sprite(kunglaopalmkickboxx , kunglaopalmkickboxy , 'kunglaopalmkickbox').setInteractive();
kunglaopalmkickbox.on('pointerdown', function (pointer) {
if (battlemode == true) {
if (kunglaostatus == 'normal') {
if (kunglaobuttonselected == false) {
if (kunglaoaction > 99) {
    actionquenumber += 1
iskunglaoattackingpalmkick = true
iskunglaopickingtarget = true
iskunglaotargetpicked = false
kunglaobuttonselected = true
if (iskunglaotargetpicked == false) {
if (enemy1name == 'Subzero') {
subzero.setTint(0xFF0000);
}
}
}
if (autotarget == true) {
if (iskunglaopickingtarget == true){
if (iskunglaoattackingpalmkick == true){
        endkunglaoattacknumber = 0
        kunglaoaction = 0 
        kunglaocurrenttargetx = subzero.x
        kunglaocurrenttargety = subzero.y
        iskunglaoattackingnow = true
        iskunglaotargetpicked = true
        kunglaoidle = false 
        kunglaobuttonselected = true
        
}
}
}
}
}
}
});
kunglaohatthrowbox = this.physics.add.sprite(kunglaohatthrowboxx , kunglaohatthrowboxy , 'kunglaohatthrowbox').setInteractive();
kunglaohatthrowbox.on('pointerdown', function (pointer) {
if (battlemode == true) {
if (kunglaostatus == 'normal') {
if (kunglaobuttonselected == false) {
if (kunglaoaction > 99) {
    actionquenumber += 1
kunglaohatthrowsound.play();
iskunglaoattackinghatthrow = true
iskunglaopickingtarget = true
iskunglaotargetpicked = false
kunglaobuttonselected = true
if (iskunglaotargetpicked == false) {
if (enemy1name == 'Subzero') {
subzero.setTint(0xFF0000);
}
}
}
if (autotarget == true) {
if (iskunglaopickingtarget == true){
if (iskunglaoattackinghatthrow == true){
        endkunglaoattacknumber = 0
        kunglaoaction = 0 
        kunglaocurrenttargetx = subzero.x
        kunglaocurrenttargety = subzero.y
        iskunglaoattackingnow = true
        iskunglaotargetpicked = true
        kunglao.anims.play('kunglaohatthrow', true);
        kunglaoidle = false 
        kunglaobuttonselected = true
        
}
}
}
}
}
}
});
kunglaowhirlbox = this.physics.add.sprite(kunglaowhirlboxx , kunglaowhirlboxy , 'kunglaowhirlbox').setInteractive();
kunglaowhirlbox.on('pointerdown', function (pointer) {
if (battlemode == true) {
if (kunglaostatus == 'normal') {
if (kunglaobuttonselected == false) {
if (kunglaoaction > 99) {
    actionquenumber += 1
kunglaowhirlvoicesound.play();
iskunglaoattackingwhirl = true
iskunglaopickingtarget = true
iskunglaotargetpicked = false
kunglaobuttonselected = true
if (iskunglaotargetpicked == false) {
if (enemy1name == 'Subzero') {
subzero.setTint(0xFF0000);
}
}
}
if (autotarget == true) {
if (iskunglaopickingtarget == true){
if (iskunglaoattackingwhirl == true){
        endkunglaoattacknumber = 0
        kunglaoaction = 0  
        kunglaocurrenttargetx = subzero.x
        kunglaocurrenttargety = subzero.y
        iskunglaoattackingnow = true
        iskunglaotargetpicked = true
        kunglaoidle = false 
        kunglaobuttonselected = true
        
}
}
}
}
}
}
});
kunglaobrimbox = this.physics.add.sprite(kunglaobrimboxx, kunglaobrimboxy , 'kunglaobrimbox').setInteractive();
kunglaobrimbox.on('pointerdown', function (pointer) {
if (battlemode == true) {
if (kunglaostatus == 'normal') {
if (kunglaobuttonselected == false) {
if (kunglaoaction > 99) {
    actionquenumber += 1
iskunglaoattackingbrim = true
iskunglaopickingtarget = true
iskunglaotargetpicked = false

if (iskunglaotargetpicked == false) {
if (enemy1name == 'Subzero') {
subzero.setTint(0xFF0000);
}
}
}
if (autotarget == true) {
if (iskunglaopickingtarget == true){
if (iskunglaoattackingbrim == true){
         endkunglaoattacknumber = 0
         kunglaoaction = 0 
        kunglaocurrenttargetx = subzero.x
        kunglaocurrenttargety = subzero.y
        iskunglaoattackingnow = true
        iskunglaotargetpicked = true
        kunglaoidle = false 
        kunglaobuttonselected = true
        
}
}
}
}
}
}
});
kunglaokickbox = this.physics.add.sprite(kunglaokickboxx, kunglaokickboxy , 'kunglaokickbox').setInteractive();
kunglaokickbox.on('pointerdown', function (pointer) {
if (battlemode == true) {
if (kunglaostatus == 'normal') {
if (kunglaobuttonselected == false) {
if (kunglaoaction > 99) {
    actionquenumber += 1
iskunglaoattackingkick = true
iskunglaopickingtarget = true
iskunglaotargetpicked = false
kunglaobuttonselected = true
if (iskunglaotargetpicked == false) {
if (enemy1name == 'Subzero') {
subzero.setTint(0xFF0000);
}
}
}
if (autotarget == true) {
if (iskunglaopickingtarget == true){
if (iskunglaoattackingkick == true){
        endkunglaoattacknumber = 0
        kunglaoaction = 0 
        kunglaocurrenttargetx = subzero.x
        kunglaocurrenttargety = subzero.y
        iskunglaoattackingnow = true
        iskunglaotargetpicked = true
        kunglaoidle = false 
        kunglaobuttonselected = true
        
}
}
}
}
}
}
});

//terrabuttons
//terrabutton
terrafirebox = this.physics.add.sprite(terrafireboxx , terrafireboxy , 'terrafirebox').setInteractive();
terrafirebox.on('pointerdown', function (pointer) {
if (battlemode == true) {
if (terrastatus == 'normal') {
if (terrabuttonselected == false) {
if (terraaction > 99) {
actionquenumber +=1
isterracastingfire = true
isterrapickingtarget = true
isterratargetpicked = false
terrabuttonselected = true
if (isterratargetpicked == false) {
if (enemy1name == 'Subzero') {
subzero.setTint(0xFF0000);
}
}
}
if (autotarget == true) {
if (isterrapickingtarget == true){
 if (isterracastingfire == true){
        terraaction = 0 
        endterracastnumber = 1
        terraspelltargetx = enemy1x
        terraspelltargety = enemy1y
        isterracastingnow = true
        isterratargetpicked = true
        terrabuttonselected = true
        terraspells.anims.play('terrafirespell', true);
        terrafiresound.play();
       
}        
}
}
}
}
}
});
terraicebox = this.physics.add.sprite(terraiceboxx , terraiceboxy , 'terraicebox').setInteractive();
terraicebox.on('pointerdown', function (pointer) {
if (battlemode == true) {
if (terrastatus == 'normal') {
if (terrabuttonselected == false) {
if (terraaction > 99) {
actionquenumber += 1
isterracastingice = true
isterrapickingtarget = true
isterratargetpicked = false
terrabuttonselected = true
if (isterratargetpicked == false) {
if (enemy1name == 'Subzero') {
subzero.setTint(0xFF0000);
}
}
}
if (autotarget == true) {
if (isterrapickingtarget == true){
if (isterracastingice == true){
        endterracastnumber = 1
        terraaction = 0 
        endterracastnumber = 1
        terraspelltargetx = subzero.x
        terraspelltargety = subzero.y
        isterracastingnow = true
        isterratargetpicked = true
        terraspells.anims.play('terraicespell', true);
        terraidle = false 
        terrabuttonselected = true
        
}
}
}
}
}
}
});
terrawindbox = this.physics.add.sprite(terrawindboxx , terrawindboxy , 'terrawindbox').setInteractive();
terrawindbox.on('pointerdown', function (pointer) {
if (battlemode == true) {
if (terrastatus == 'normal') {
if (terrabuttonselected == false) {
if (terraaction > 99) {
actionquenumber += 1
isterracastingwind = true
isterrapickingtarget = true
isterratargetpicked = false
terrabuttonselected = true
if (isterratargetpicked == false) {
if (enemy1name == 'Subzero') {
subzero.setTint(0xFF0000);
}
}
}
if (autotarget == true) {
if (isterrapickingtarget == true){
if (isterracastingwind == true){
        terraaction = 0 
        endterracastnumber = 1
        endterracastnumber = 1
        terraspelltargetx = subzero.x -35
        terraspelltargety = subzero.y
        isterracastingnow = true
        isterratargetpicked = true
        terraspells.anims.play('terrawindspell', true);
        terraidle = false 
        terrabuttonselected = true
        terrawindsound.play();
        
}
}
}
}
}
}
});
terraearthbox = this.physics.add.sprite(terraearthboxx , terraearthboxy , 'terraearthbox').setInteractive();
terraearthbox.on('pointerdown', function (pointer) {
if (battlemode == true) {
if (terrastatus == 'normal') {
if (terrabuttonselected == false) {
if (terraaction > 99) {
actionquenumber += 1
isterracastingearth = true
isterrapickingtarget = true
isterratargetpicked = false
terrabuttonselected = true
if (isterratargetpicked == false) {
if (enemy1name == 'Subzero') {
subzero.setTint(0xFF0000);
}
}
}
if (autotarget == true) {
if (isterrapickingtarget == true){
if (isterracastingearth == true){
        terraaction = 0 
        endterracastnumber = 1
        endterraattacknumber = 1
        terraspelltargetx = subzero.x
        terraspelltargety = subzero.y
        isterracastingnow = true
        isterratargetpicked = true
        terraspells.anims.play('terraearthspell', true);
        terraidle = false 
        terrabuttonselected = true
        terraearthsound.play();
        
}
}
}
}
}
}
});
terracallbox = this.physics.add.sprite(terracallboxx, terracallboxy , 'terracallbox').setInteractive();
terracallbox.on('pointerdown', function (pointer) {
if (battlemode == true) {
if (terrastatus == 'normal') {
if (terrabuttonselected == false) {
if (terraaction > 99) {
actionquenumber += 1
isterracastingcall = true
isterrapickingtarget = true
isterratargetpicked = false
if (isterratargetpicked == false) {
if (enemy1name == 'Subzero') {
subzero.setTint(0xFF0000);
}
}
}
if (autotarget == true) {
}
}
}
}
});

//sonjabuttons
//sonjabutton

sonjahandstbox = this.physics.add.sprite(sonjahandstboxx , sonjahandstboxy , 'sonjahandstbox').setInteractive();
sonjahandstbox.on('pointerdown', function (pointer) {
if (battlemode == true) {
if (sonjastatus == 'normal') {
if (sonjabuttonselected == false) {
if (sonjaaction > 99) {
actionquenumber += 1
issonjaattackinghandst = true
issonjapickingtarget = true
issonjatargetpicked = false
sonjabuttonselected = true
if (issonjatargetpicked == false) {
if (enemy1name == 'Subzero') {
subzero.setTint(0xFF0000);
}
}
}
if (autotarget == true) {
 if (issonjapickingtarget == true){
if (issonjaattackinghandst == true){
        endsonjaattacknumber = 0
        sonjaaction = 0 
        sonjacurrenttargetx = subzero.x
        sonjacurrenttargety = subzero.y
        issonjaattackingnow = true
        issonjatargetpicked = true
        sonjaidle = false 
        sonjabuttonselected = true
        sonjahandstsound.play();
        
}
}
}
}
}
}
});
sonjablasterbox = this.physics.add.sprite(sonjablasterboxx, sonjablasterboxy , 'sonjablasterbox').setInteractive();
sonjablasterbox.on('pointerdown', function (pointer) {
if (battlemode == true) {
if (sonjastatus == 'normal') {
if (sonjabuttonselected == false) {
if (sonjaaction > 99) {
actionquenumber += 1
issonjaattackingblaster = true
issonjapickingtarget = true
issonjatargetpicked = false
sonjabuttonselected = true
if (issonjatargetpicked == false) {
if (enemy1name == 'Subzero') {
subzero.setTint(0xFF0000);
}
}
}
if (autotarget == true) {
 if (issonjapickingtarget == true){
if (issonjaattackingblaster == true){
        endsonjaattacknumber = 0
        sonjaaction = 0 
        sonjacurrenttargetx = subzero.x
        sonjacurrenttargety = subzero.y
        issonjaattackingnow = true
        issonjatargetpicked = true
        sonja.anims.play('sonjablaster', true);
        sonjablastersound.play();
        sonjablastervoicesound.play();
        sonjaidle = false 
        sonjabuttonselected = true
        
}
}
}
}
}
}
});
sonjakissbox = this.physics.add.sprite(sonjakissboxx , sonjakissboxy , 'sonjakissbox').setInteractive();
sonjakissbox.on('pointerdown', function (pointer) {
if (battlemode == true) {
if (sonjastatus == 'normal') {
if (sonjabuttonselected == false) {
if (sonjaaction > 99) {
actionquenumber += 1
issonjaattackingkiss = true
issonjapickingtarget = true
issonjatargetpicked = false
if (issonjatargetpicked == false) {
if (enemy1name == 'Subzero') {
subzero.setTint(0xFF0000);
}
}
}
if (autotarget == true) {
if (issonjapickingtarget == true){
if (issonjaattackingkiss == true){
         endsonjaattacknumber = 0
         sonjaaction = 0 
        sonjacurrenttargetx = subzero.x
        sonjacurrenttargety = subzero.y
        issonjaattackingnow = true
        issonjatargetpicked = true
        sonjaidle = false 
        sonjabuttonselected = true
        
}
}
}
}
}
}
});
sonjadancerbox = this.physics.add.sprite(sonjadancerboxx, sonjadancerboxy , 'sonjadancerbox').setInteractive();
sonjadancerbox.on('pointerdown', function (pointer) {
if (battlemode == true) {
if (sonjastatus == 'normal') {
if (sonjabuttonselected == false) {
if (sonjaaction > 99) {
actionquenumber += 1
issonjaattackingdancer = true
issonjapickingtarget = true
issonjatargetpicked = false
if (issonjatargetpicked == false) {
if (enemy1name == 'Subzero') {
subzero.setTint(0xFF0000);
}
}
}
if (autotarget == true) {
if (issonjapickingtarget == true){
if (issonjaattackingdancer == true){
         endsonjaattacknumber = 0
         sonjaaction = 0 
        sonjacurrenttargetx = subzero.x
        sonjacurrenttargety = subzero.y
        issonjaattackingnow = true
        issonjatargetpicked = true
        sonjaidle = false 
        sonjabuttonselected = true
        
}
}
}
}
}
}
});
sonjakicksbox = this.physics.add.sprite(sonjakicksboxx , sonjakicksboxy , 'sonjakicksbox').setInteractive();
sonjakicksbox.on('pointerdown', function (pointer) {
if (battlemode == true) {
if (sonjastatus == 'normal') {
if (sonjabuttonselected == false) {
if (sonjaaction > 99) {
actionquenumber += 1
issonjaattackingkicks = true
issonjapickingtarget = true
issonjatargetpicked = false
sonjabuttonselected = true
if (issonjatargetpicked == false) {
if (enemy1name == 'Subzero') {
subzero.setTint(0xFF0000);
}
}
}
if (autotarget == true) {
 if (issonjapickingtarget == true){
if (issonjaattackingkicks == true){
        endsonjaattacknumber = 0
        sonjaaction = 0 
        sonjacurrenttargetx = subzero.x
        sonjacurrenttargety = subzero.y
        issonjaattackingnow = true
        issonjatargetpicked = true
        sonjaidle = false 
        sonjabuttonselected = true
        
}
}
}
}
}
}
});

//rosacureboxstuff
//rosabuttons
//rosa
rosacurebox = this.physics.add.sprite(rosacureboxx , rosacureboxy , 'rosacurebox').setInteractive();
rosacurebox.on('pointerdown', function (pointer) {
if (battlemode == true) {
if (rosaaction > 99) {
actionquenumber += 1
isrosacastingcure = true
isrosapickingtarget = true
isrosatargetpicked = false
if (isrosatargetpicked == false) {
supporttinton()
}
}
}
});
//rosa healboxstuff

rosahealbox = this.physics.add.sprite(rosahealboxx, rosahealboxy , 'rosahealbox').setInteractive();
rosahealbox.on('pointerdown', function (pointer) {
if (battlemode == true) {
if (rosaaction > 99) {
actionquenumber += 1
isrosacastingheal = true
isrosapickingtarget = true
isrosatargetpicked = false
if (isrosatargetpicked == false) {
supporttinton()
}
}
}
});

rosafastbox = this.physics.add.sprite(rosafastboxx, rosafastboxy , 'rosafastbox').setInteractive();
rosafastbox.on('pointerdown', function (pointer) {
if (battlemode == true) {
if (rosaaction > 99) {
actionquenumber += 1
isrosacastingfast = true
isrosapickingtarget = true
isrosatargetpicked = false
if (isrosatargetpicked == false) {
supporttinton()
}
}
}
});
rosashellbox = this.physics.add.sprite(rosashellboxx , rosashellboxy , 'rosashellbox').setInteractive();
rosashellbox.on('pointerdown', function (pointer) {
if (battlemode == true) {
if (rosaaction > 99) {
actionquenumber += 1
isrosacastingshell = true
isrosapickingtarget = true
isrosatargetpicked = false
if (isrosatargetpicked == false) {
supporttinton()
}
}
}
});
rosabowbox = this.physics.add.sprite(rosabowboxx , rosabowboxy , 'rosabowbox').setInteractive();
rosabowbox.on('pointerdown', function (pointer) {
if (battlemode == true) {
this.setTint(0x000000);
}
});

//mog moonboxstuff
//mogspells
//mogbuttons
//mogspellbutton

mogmoonbox = this.physics.add.sprite(mogmoonboxx , mogmoonboxy , 'mogmoonbox').setInteractive();
mogmoonbox.on('pointerdown', function (pointer) {
if (battlemode == true) {
if (mogaction > 99) {
actionquenumber += 1
endmogcastnumber = 1
ismogcastingmoon = true
ismogcastingnow = true
ismogtargetpicked = true
ismogpickingtarget = true
supportfmog()

}
}

//mog powerboxstuff
});
mogpowerbox = this.physics.add.sprite(mogpowerboxx, mogpowerboxy , 'mogpowerbox').setInteractive();
mogpowerbox.on('pointerdown', function (pointer) {
if (battlemode == true) {
if (mogaction > 99) {
actionquenumber += 1
endmogcastnumber = 1
ismogcastingpower = true
ismogcastingnow = true
ismogtargetpicked = true
ismogpickingtarget = true
supportfmog()
mogpowersound.play();
}
}
});

mogdancebox = this.physics.add.sprite(mogdanceboxx, mogdanceboxy , 'mogdancebox').setInteractive();
mogdancebox.on('pointerdown', function (pointer) {
if (battlemode == true) {
if (mogaction > 99) {
actionquenumber += 1
endmogcastnumber = 1
ismogcastingdance = true
ismogcastingnow = true
ismogtargetpicked = true
ismogpickingtarget = true
supportfmog()
mogdancesound.play();
}
}
});
mogdreambox = this.physics.add.sprite(mogdreamboxx , mogdreamboxy , 'mogdreambox').setInteractive();
mogdreambox.on('pointerdown', function (pointer) {
if (battlemode == true) {
if (mogaction > 99) {
actionquenumber += 1
endmogcastnumber = 1
ismogcastingdream = true
ismogcastingnow = true
ismogtargetpicked = true
ismogpickingtarget = true
supportfmog()
}
}
});
mogbullbox = this.physics.add.sprite(mogbullboxx , mogbullboxy , 'mogbullbox').setInteractive();
mogbullbox.on('pointerdown', function (pointer) {
if (battlemode == true) {
if (mogaction > 99) {
actionquenumber += 1
endmogcastnumber = 1
ismogcastingbull = true
ismogcastingnow = true
ismogtargetpicked = true
ismogpickingtarget = true
supportfmog()
}
}
});


//spells

subzerospells = this.physics.add.sprite(subzero.x -200 , subzero.y - 125, 'subzeroiceblastgr').setOrigin(0, 0);
scorpionspeargr = this.physics.add.sprite(scorpion.x -200 , scorpion.y - 125, 'scorpionspeargr').setOrigin(0, 0);


rosaspells = this.physics.add.sprite(rosaspelltargetx, rosaspelltargety, 'rosacurespell').setOrigin(0, 0);
mogspells = this.physics.add.sprite(mogspelltargetx, mogspelltargety, 'mogmoonspell').setOrigin(0, 0);

kanospells = this.physics.add.sprite(kano.x, kano.y -50, '').setOrigin(0, 0);
kanospellsfx = this.physics.add.sprite(kano.x, kano.y -= 20, '').setOrigin(0, 0);
kanobladespells = this.physics.add.sprite(kano.x, kano.y -50, '').setOrigin(0, 0);
kanobladebleed = this.physics.add.sprite(kano.x, kano.y -50, 'kanobladebleed').setOrigin(0, 0);

if (kangactive == true) {
kangspells = this.physics.add.sprite(kang.x, kang.y -50, '').setOrigin(0, 0);
kangfireballexplode = this.physics.add.sprite(kang.x, kang.y -50, 'kangfireballexplode').setOrigin(0, 0);
kangprayerboltstrike = this.physics.add.sprite(kang.x, kang.y -450, 'kangprayerbolt').setOrigin(0, 0);
}


orchidspells = this.physics.add.sprite(orchid.x, orchid.y -50, 'orchidfirebagr').setOrigin(0, 0);
orchidfirebaexplode = this.physics.add.sprite(orchid.x, orchid.y -75, 'orchidfirebaexplode').setOrigin(0, 0);

jagospells = this.physics.add.sprite(jago.x, jago.y -50, 'jagoplasmagr').setOrigin(0, 0);
kunglaospells = this.physics.add.sprite(kunglao.x, kunglao.y -50, 'kunglaohatthrowgr').setOrigin(0, 0);
terraspells = this.physics.add.sprite(terraspelltargetx, terraspelltargety, 'terrafirespell').setOrigin(0, 0);
sonjaspells = this.physics.add.sprite(sonja.x, sonja.y - 20, 'sonjablastergr').setOrigin(0, 0);
sonjablasterexplode = this.physics.add.sprite(sonja.x, sonja.y - 20, 'sonjablasterexplode').setOrigin(0, 0);


//floats
//txt

lairstatscreennametxt = this.add.text(175, 12, 'statname', { font: '20px Arial bold', fill: '#ffffff' }).setScrollFactor(0);
lairstatscreenmaxhealthtxt = this.add.text(130, 50, 'statname', { font: '20px Arial bold', fill: '#ffffff' }).setScrollFactor(0);
lairstatscreenactionregentxt = this.add.text(130, 75, 'statname', { font: '20px Arial bold', fill: '#ffffff' }).setScrollFactor(0);
lairstatscreenattackratingtxt = this.add.text(130, 100, 'statname', { font: '20px Arial bold', fill: '#ffffff' }).setScrollFactor(0);
lairstatscreendefenseratingtxt = this.add.text(130, 125, 'statname', { font: '20px Arial bold', fill: '#ffffff' }).setScrollFactor(0);
lairstatscreensupportratingtxt = this.add.text(130, 150, 'statname', { font: '20px Arial bold', fill: '#ffffff' }).setScrollFactor(0);
lairstatbuttoninfo1txt = this.add.text(130, 50, 'buttoninformation', { font: '20px Arial bold', fill: '#ffffff' }).setScrollFactor(0);
lairstatbuttoninfo2txt = this.add.text(95, 75, 'Morebuttoninformation', { font: '15px Arial bold', fill: '#ffffff' }).setScrollFactor(0);
lairstatbuttoninfo3txt = this.add.text(95, 100, 'Morebuttoninformation', { font: '15px Arial bold', fill: '#ffffff' }).setScrollFactor(0);
lairstatbuttoninfo4txt = this.add.text(75, 125, 'Morebuttoninformation', { font: '15px Arial bold', fill: '#00ff00' }).setScrollFactor(0);
lairstatbuttoninfo5txt = this.add.text(75, 140, 'Morebuttoninformation', { font: '15px Arial bold', fill: '#00ff00' }).setScrollFactor(0);
lairstatbuttoninfo6txt = this.add.text(75, 155, 'Morebuttoninformation', { font: '15px Arial bold', fill: '#00ff00' }).setScrollFactor(0);
lairstatbuttoninfo7txt = this.add.text(75, 170, 'Morebuttoninformation', { font: '15px Arial bold', fill: '#00ff00' }).setScrollFactor(0);
lairstatbuttoninfo8txt = this.add.text(75, 185, 'Morebuttoninformation', { font: '15px Arial bold', fill: '#00ff00' }).setScrollFactor(0);
lairstatbuttoninfo9txt = this.add.text(75, 200, 'Morebuttoninformation', { font: '15px Arial bold', fill: '#00ff00' }).setScrollFactor(0);



support1chargetxt = this.add.text(support1uibox.x + 40,support1uibox.y +115 , '', { font: '32px Arial bold', fill: '#ffffff' }).setScrollFactor(0);
support2chargetxt = this.add.text(support2uibox.x + 40,support2uibox.y +115 , '', { font: '32px Arial bold', fill: '#ffffff' }).setScrollFactor(0);
leader1chargetxt = this.add.text(leader1uibox.x + 40,leader1uibox.y +115 , '', { font: '32px Arial bold', fill: '#ffffff' }).setScrollFactor(0);
leader2chargetxt = this.add.text(leader2uibox.x + 40,leader2uibox.y +115 , '', { font: '32px Arial bold', fill: '#ffffff' }).setScrollFactor(0);
fighter1chargetxt = this.add.text(fighter1uibox.x + 40,fighter1uibox.y +115 , '', { font: '32px Arial bold', fill: '#ffffff' }).setScrollFactor(0);
fighter2chargetxt = this.add.text(fighter2uibox.x + 40,fighter2uibox.y +115 , '', { font: '32px Arial bold', fill: '#ffffff' }).setScrollFactor(0);
fighter3chargetxt = this.add.text(fighter3uibox.x + 40,fighter3uibox.y +115 , '', { font: '32px Arial bold', fill: '#ffffff' }).setScrollFactor(0);
fighter4chargetxt = this.add.text(fighter4uibox.x + 40,fighter4uibox.y +115 , '', { font: '32px Arial bold', fill: '#ffffff' }).setScrollFactor(0);
fighter5chargetxt = this.add.text(fighter5uibox.x + 40,fighter5uibox.y +115 , '', { font: '32px Arial bold', fill: '#ffffff' }).setScrollFactor(0);
fighter6chargetxt = this.add.text(fighter6uibox.x + 40,fighter6uibox.y +115 , '', { font: '32px Arial bold', fill: '#ffffff' }).setScrollFactor(0);

support1uiactionbar = this.physics.add.sprite(support1uibox.x + 1, 652, 'actionbar100gr').setOrigin(0, 0);
support1actiontxt = this.add.text(support1uibox.x + 45, 650, support1action, { font: '16px Arial bold', fill: '#ff0000' }).setScrollFactor(0);
support2uiactionbar = this.physics.add.sprite(support2uibox.x + 1, 652, 'actionbar100gr').setOrigin(0, 0);
support2actiontxt = this.add.text(support2uibox.x + 45, 650, support2action, { font: '16px Arial bold', fill: '#ff0000' }).setScrollFactor(0);
leader1uiactionbar = this.physics.add.sprite(leader1uibox.x + 1, 652, 'actionbar100gr').setOrigin(0, 0);
leader1actiontxt = this.add.text(leader1uibox.x + 45, 650, leader1action, { font: '16px Arial bold', fill: '#ff0000' }).setScrollFactor(0);
leader2uiactionbar = this.physics.add.sprite(leader2uibox.x + 1, 652, 'actionbar100gr').setOrigin(0, 0);
leader2actiontxt = this.add.text(leader2uibox.x + 45, 650, leader2action, { font: '16px Arial bold', fill: '#ff0000' }).setScrollFactor(0);
fighter1uiactionbar = this.physics.add.sprite(fighter1uibox.x + 1, 652, 'actionbar100gr').setOrigin(0, 0);
fighter1actiontxt = this.add.text(fighter1uibox.x + 45, 650, fighter1action, { font: '16px Arial bold', fill: '#ff0000' }).setScrollFactor(0);
fighter2uiactionbar = this.physics.add.sprite(fighter2uibox.x + 1, 652, 'actionbar100gr').setOrigin(0, 0);
fighter2actiontxt = this.add.text(fighter2uibox.x + 45, 650, fighter2action, { font: '16px Arial bold', fill: '#ff0000' }).setScrollFactor(0);
fighter3uiactionbar = this.physics.add.sprite(fighter3uibox.x + 1, 652, 'actionbar100gr').setOrigin(0, 0);
fighter3actiontxt = this.add.text(fighter3uibox.x + 45, 650, fighter3action, { font: '16px Arial bold', fill: '#ff0000' }).setScrollFactor(0);
fighter4uiactionbar = this.physics.add.sprite(fighter4uibox.x + 1, 652, 'actionbar100gr').setOrigin(0, 0);
fighter4actiontxt = this.add.text(fighter4uibox.x + 45, 650, fighter4action, { font: '16px Arial bold', fill: '#ff0000' }).setScrollFactor(0);
fighter5uiactionbar = this.physics.add.sprite(fighter5uibox.x + 1, 652, 'actionbar100gr').setOrigin(0, 0);
fighter5actiontxt = this.add.text(fighter5uibox.x + 45, 650, fighter5action, { font: '16px Arial bold', fill: '#ff0000' }).setScrollFactor(0);
fighter6uiactionbar = this.physics.add.sprite(fighter6uibox.x + 1, 652, 'actionbar100gr').setOrigin(0, 0);
fighter6actiontxt = this.add.text(fighter6uibox.x + 45, 650, fighter6action, { font: '16px Arial bold', fill: '#ff0000' }).setScrollFactor(0);

enemy1actiontxt = this.add.text(1200, 50, enemy1action, { font: '30px Arial bold', fill: '#ff0000' }).setScrollFactor(0);
enemy1actiontxt.visible = false
enemy1uiactionbar = this.physics.add.sprite(975, 50, '').setOrigin(0, 0);
enemy1uihealthbar = this.physics.add.sprite(975, 5, '').setOrigin(0, 0);
enemy1uiactionbar.visible = false
subzeronameplate = this.add.sprite(970,5, 'subzeronameplate').setOrigin(0, 0);
subzeronameplate.visible = false
scorpionnameplate = this.add.sprite(970,5, 'scorpionnameplate').setOrigin(0, 0);
scorpionnameplate.visible = false
enemytargetplate = this.add.sprite(970,95, 'enemytargetplate').setOrigin(0, 0);
enemy1leader1damagetxt = this.add.text(1100, 400, '', { font: '30px Arial bold', fill: '#ff0000' }).setScrollFactor(0);
enemy1leader2damagetxt = this.add.text(1100, 400, '', { font: '30px Arial bold', fill: '#ff0000' }).setScrollFactor(0);
enemy1fighter1damagetxt = this.add.text(1100, 400, '', { font: '30px Arial bold', fill: '#ff0000' }).setScrollFactor(0);
enemy1fighter2damagetxt = this.add.text(1100, 400, '', { font: '30px Arial bold', fill: '#ff0000' }).setScrollFactor(0);
enemy1fighter3damagetxt = this.add.text(1100, 400, '', { font: '30px Arial bold', fill: '#ff0000' }).setScrollFactor(0);
enemy1fighter4damagetxt = this.add.text(1100, 400, '', { font: '30px Arial bold', fill: '#ff0000' }).setScrollFactor(0);
enemy1fighter5damagetxt = this.add.text(1100, 400, '', { font: '30px Arial bold', fill: '#ff0000' }).setScrollFactor(0);
enemy1fighter6damagetxt = this.add.text(1100, 400, '', { font: '30px Arial bold', fill: '#ff0000' }).setScrollFactor(0);
enemy1healthtxt = this.add.text(1150, 60, enemy1health, { font: '40px Arial bold', fill: '#ff0000' }).setScrollFactor(0);
enemy1healthtxt.visible = false
enemy1targettxt = this.add.text(enemytargetplate.x + 125, enemytargetplate.y + 9, 'enemytarget', { font: '25px Arial bold', fill: '#ff0000' }).setScrollFactor(0);


support1damagetakentxt = this.add.text(support1x, support1y, '0000', { font: '15px Arial bold', fill: '#ff0000' }).setScrollFactor(0);
support2damagetakentxt = this.add.text(support2x, support2y, '0000', { font: '15px Arial bold', fill: '#ff0000' }).setScrollFactor(0);

leader1damagetakentxt = this.add.text(leader1x, leader1y, '0000', { font: '15px Arial bold', fill: '#ff0000' }).setScrollFactor(0);
leader2damagetakentxt = this.add.text(leader2x, leader2y, '0000', { font: '15px Arial bold', fill: '#ff0000' }).setScrollFactor(0);
fighter1damagetakentxt = this.add.text(fighter1x, fighter1y, '0000', { font: '15px Arial bold', fill: '#ff0000' }).setScrollFactor(0);
fighter2damagetakentxt = this.add.text(fighter2x, fighter2y, '0000', { font: '15px Arial bold', fill: '#ff0000' }).setScrollFactor(0);
fighter3damagetakentxt = this.add.text(fighter3x, fighter3y, '0000', { font: '15px Arial bold', fill: '#ff0000' }).setScrollFactor(0);
fighter4damagetakentxt = this.add.text(fighter4x, fighter4y, '0000', { font: '15px Arial bold', fill: '#ff0000' }).setScrollFactor(0);
fighter5damagetakentxt = this.add.text(fighter5x, fighter5y, '0000', { font: '15px Arial bold', fill: '#ff0000' }).setScrollFactor(0);
fighter6damagetakentxt = this.add.text(fighter6x, fighter6y, '0000', { font: '15px Arial bold', fill: '#ff0000' }).setScrollFactor(0);

actionquenumbertxt = this.add.text(aquibox.x + 23, aquibox.y + 70, '0', { font: '35px Arial bold', fill: '#ffffff' }).setScrollFactor(0);
actionqueeffecttxt = this.add.text(aquibox.x +27 , aquibox.y + 122, '0', { font: '35px Arial bold', fill: '#ffffff' }).setScrollFactor(0);


text = this.add.text(700, 0, 'Cursors to move', { font: '10px Courier', fill: '#00ff00' }).setScrollFactor(0);

}



function loadrosasupport1 ()
{
activesupport1name = 'Rosa'
rosaactive = true
rosa.setScale(1.0, 1.0);
support1health = rosahealth
support1maxhealth = rosahealth
support1action = rosaaction
support1actionregen = rosaactionregen
support1defenserating = rosadefenserating
support1attackrating = rosaattackrating
support1supportrating = rosasupportrating

rosa.x = support1x
rosa.y = support1y
rosacureboxx = support1backx
rosacureboxy = support1backy + 25
rosahealboxx = support1backx
rosahealboxy = support1backy + 75
rosafastboxx = support1backx
rosafastboxy = support1backy + 125
rosashellboxx = support1backx
rosashellboxy = support1backy + 175
rosabowboxx = support1backx
rosabowboxy = support1backy + 225
}

function loadrosasupport2 ()
{
activesupport2name = 'Rosa'
rosaactive = true
rosa.setScale(1.0, 1.0);
support2health = rosahealth
support2maxhealth = rosahealth
support2action = rosaaction
support2actionregen = rosaactionregen
support2defenserating = rosadefenserating
support2attackrating = rosaattackrating
support2supportrating = rosasupportrating
rosa.x = support2x
rosa.y = support2y
rosacureboxx = support2backx
rosacureboxy = support2backy + 25
rosahealboxx = support2backx
rosahealboxy = support2backy + 75
rosafastboxx = support2backx
rosafastboxy = support2backy + 125
rosashellboxx = support2backx
rosashellboxy = support2backy + 175
rosabowboxx = support2backx
rosabowboxy = support2backy + 225
}

function loadmogsupport1 ()
{
activesupport1name = 'Mog'
mogactive = true
mog.setScale(1.0, 1.0);
support1health = moghealth
support1maxhealth = moghealth
support1action = mogaction
support1actionregen = mogactionregen
support1defenserating = mogdefenserating
support1attackrating = mogattackrating
support1supportrating = mogsupportrating
mog.x = support1x
mog.y = support1y
mogmoonboxx = support1backx
mogmoonboxy = support1backy + 25
mogpowerboxx = support1backx
mogpowerboxy = support1backy + 75
mogdanceboxx = support1backx
mogdanceboxy = support1backy + 125
mogdreamboxx = support1backx
mogdreamboxy = support1backy + 175

}

function loadmogsupport2 ()
{
activesupport2name = 'Mog'
mogactive = true
mog.setScale(1.0, 1.0);
support2health = moghealth
support2maxhealth = moghealth
support2action = mogaction
support2actionregen = mogactionregen
support2defenserating = mogdefenserating
support2attackrating = mogattackrating
support2supportrating = mogsupportrating
mog.x = support2x
mog.y = support2y
mogmoonboxx = support2backx
mogmoonboxy = support2backy + 25
mogpowerboxx = support2backx
mogpowerboxy = support2backy + 75
mogdanceboxx = support2backx
mogdanceboxy = support2backy + 125
mogdreamboxx = support2backx
mogdreamboxy = support2backy + 175
mogbullboxx = support2backx
mogbullboxy = support2backy + 225
}
//loadleaders
//load
function loadkangleader1 ()
{
activeleader1name = 'Kang'
kangactive = true
kang.setScale(1.4, 1.4);
leader1health = kanghealth
leader1maxhealth = kanghealth
leader1action = kangaction
leader1actionregen = kangactionregen
leader1defenserating = kangdefenserating
leader1attackrating = kangattackrating
leader1supportrating = kangsupportrating

kang.x = leader1x
kang.y = leader1y
kangflykickboxx = leader1backx
kangflykickboxy = leader1backy + 25
kangfireballboxx = leader1backx
kangfireballboxy = leader1backy + 75
kangbicycleboxx = leader1backx
kangbicycleboxy = leader1backy + 125
kangdragonboxx = leader1backx
kangdragonboxy = leader1backy + 175
kangprayerboxx = leader1backx
kangprayerboxy = leader1backy + 225
}

function loadspinalleader1 ()
{
activeleader1name = 'Spinal'
spinalactive = true
spinal.setScale(1.0, 1.0);
leader1health = spinalhealth
leader1maxhealth = spinalhealth
leader1action = spinalaction
leader1actionregen = spinalactionregen
leader1defenserating = spinaldefenserating
leader1attackrating = spinalattackrating
leader1supportrating = spinalsupportrating
spinal.x = leader1x
spinal.y = leader1y
spinalsliceboxx = leader1backx
spinalslashboxx = leader1backx
spinalbashboxx = leader1backx
spinalspikeboxx = leader1backx
spinalblockboxx = leader1backx
spinalsliceboxy = leader1backy + 25
spinalslashboxy = leader1backy + 75
spinalbashboxy = leader1backy + 125
spinalspikeboxy = leader1backy + 175
spinalblockboxy = leader1backy + 225
}

function loadcomboleader1 ()
{
activeleader1name = 'Combo'
comboactive = true
combo.setScale(1.0, 1.0);
leader1health = combohealth
leader1maxhealth = combohealth
leader1action = comboaction
leader1actionregen = comboactionregen
leader1defenserating = combodefenserating
leader1attackrating = comboattackrating
leader1supportrating = combosupportrating
combo.x = leader1x
combo.y = leader1y
combopunchboxx = leader1backx
combopunchboxy = leader1backy + 25
combojumpkickboxx = leader1backx
combojumpkickboxy = leader1backy + 75
combogunboxx = leader1backx
combogunboxy = leader1backy + 125
comboslamboxx = leader1backx
comboslamboxy = leader1backy + 175
combomuscleboxx = leader1backx
combomuscleboxy = leader1backy + 225
}

function loadglaciusleader1 ()
{
activeleader1name = 'Glacius'
glaciusactive = true
glacius.setScale(1.0, 1.0);
leader1health = glaciushealth
glacius.x = leader1x
glacius.y = leader1y
}



function loadcecilleader1 ()
{
activeleader1name = 'Cecil'
cecilactive = true
cecil.setScale(1.0, 1.0);
leader1health = cecilhealth
cecil.x = leader1x
cecil.y = leader1y
}

function loadkangleader2 ()
{
activeleader2name = 'Kang'
kangactive = true
kang.setScale(1.4, 1.4);
leader1health = kanghealth

leader1maxhealth = kanghealth
leader2action = kangaction
leader2actionregen = kangactionregen
leader2defenserating = kangdefenserating
leader2attackrating = kangattackrating
leader2supportrating = kangsupportrating
leader2maxhealth = kanghealth
kang.x = leader2x
kang.y = leader2y
kangflykickboxx = leader2backx
kangflykickboxy = leader2backy + 25
kangfireballboxx = leader2backx
kangfireballboxy = leader2backy + 75
kangbicycleboxx = leader2backx
kangbicycleboxy = leader2backy + 125
kangdragonboxx = leader2backx
kangdragonboxy = leader2backy + 175
kangprayerboxx = leader2backx
kangprayerboxy = leader2backy + 225
}

function loadspinalleader2 ()
{
activeleader2name = 'Spinal'
spinalactive = true
spinal.setScale(1.0, 1.0);
leader2health = spinalhealth
leader2maxhealth = spinalhealth
leader2action = spinalaction
leader2actionregen = spinalactionregen
leader2defenserating = spinaldefenserating
leader2attackrating = spinalattackrating
leader2supportrating = spinalsupportrating
spinal.x = leader2x
spinal.y = leader2y
spinalsliceboxx = leader2backx
spinalslashboxx = leader2backx
spinalbashboxx = leader2backx
spinalspikeboxx = leader2backx
spinalblockboxx = leader2backx
spinalsliceboxy = leader2backy + 25
spinalslashboxy = leader2backy + 75
spinalbashboxy = leader2backy + 125
spinalspikeboxy = leader2backy + 175
spinalblockboxy = leader2backy + 225
}

function loadglaciusleader2 ()
{
activeleader2name = 'Glacius'
glaciusactive = true
glacius.setScale(1.0, 1.0);
leader2health = glaciushealth
glacius.x = leader2x
glacius.y = leader2y
}

function loadcomboleader2 ()
{
activeleader2name = 'Combo'
comboactive = true
combo.setScale(1.0, 1.0);
leader2health = combohealth
leader2maxhealth = combohealth
leader2action = comboaction
leader2actionregen = comboactionregen
leader2defenserating = combodefenserating
leader2attackrating = comboattackrating
leader2supportrating = combosupportrating
combo.x = leader2x
combo.y = leader2y
combopunchboxx = leader2backx
combopunchboxy = leader2backy + 25
combojumpkickboxx = leader2backx
combojumpkickboxy = leader2backy + 75
combogunboxx = leader2backx
combogunboxy = leader2backy + 125
comboslamboxx = leader2backx
comboslamboxy = leader2backy + 175
combomuscleboxx = leader2backx
combomuscleboxy = leader2backy + 225
}

function loadcecilleader2 ()
{
activeleader2name = 'Cecil'
cecilactive = true
cecil.setScale(1.0, 1.0);
leader2health = cecilhealth
leader2maxhealth = cecilhealth
cecil.x = leader2x
cecil.y = leader2y
}

function loadkanofighter1 ()
{
activefighter1name = 'Kano'
kanoactive = true
kano.setScale(1.4, 1.4);
fighter1health = kanohealth
fighter1maxhealth = kanohealth
fighter1action = kanoaction
fighter1actionregen = kanoactionregen
fighter1defenserating = kanodefenserating
fighter1attackrating = kanoattackrating
fighter1supportrating = kanosupportrating
kano.x = fighter1x
kano.y = fighter1y
kanobladesboxx = fighter1backx
kanobladesboxy = fighter1backy + 25
kanocutboxx = fighter1backx
kanocutboxy = fighter1backy + 75
kanolaserboxx = fighter1backx
kanolaserboxy = fighter1backy + 125
kanohellboxx = fighter1backx
kanohellboxy = fighter1backy + 175
kanokickboxx = fighter1backx
kanokickboxy = fighter1backy + 225
}
function loadkanofighter2 ()
{
activefighter2name = 'Kano'
kanoactive = true
kano.setScale(1.4, 1.4);
fighter2health = kanohealth
fighter2maxhealth = kanohealth
fighter2action = kanoaction 
kano.x = fighter2x
kano.y = fighter2y
kanobladesboxx = fighter2backx
kanobladesboxy = fighter2backy + 25
kanocutboxx = fighter2backx
kanocutboxy = fighter2backy + 75
kanolaserboxx = fighter2backx
kanolaserboxy = fighter2backy + 125
kanohellboxx = fighter2backx
kanohellboxy = fighter2backy + 175
kanokickboxx = fighter2backx
kanokickboxy = fighter2backy + 225
}
function loadkanofighter3 ()
{
activefighter3name = 'Kano'
kanoactive = true
kano.setScale(1.4, 1.4);
fighter3health = kanohealth
fighter3maxhealth = kanohealth
fighter3action = kanoaction 
kano.x = fighter3x
kano.y = fighter3y
kanobladesboxx = fighter3backx
kanobladesboxy = fighter3backy + 25
kanocutboxx = fighter3backx
kanocutboxy = fighter3backy + 75
kanolaserboxx = fighter3backx
kanolaserboxy = fighter3backy + 125
kanohellboxx = fighter3backx
kanohellboxy = fighter3backy + 175
kanokickboxx = fighter3backx
kanokickboxy = fighter3backy + 225


}
function loadkanofighter4 ()
{
activefighter4name = 'Kano'
kanoactive = true
kano.setScale(1.4, 1.4);
fighter4health = kanohealth
fighter4maxhealth = kanohealth
fighter4action = kanoaction 
kano.x = fighter4x
kano.y = fighter4y
kanobladesboxx = fighter4backx
kanobladesboxy = fighter4backy + 25
kanocutboxx = fighter4backx
kanocutboxy = fighter4backy + 75
kanolaserboxx = fighter4backx
kanolaserboxy = fighter4backy + 125
kanohellboxx = fighter4backx
kanohellboxy = fighter4backy + 175
kanokickboxx = fighter4backx
kanokickboxy = fighter4backy + 225


}
function loadkanofighter5 ()
{
activefighter5name = 'Kano'
kanoactive = true
kano.setScale(1.4, 1.4);
fighter5health = kanohealth
fighter5maxhealth = kanohealth
fighter5action = kanoaction 
kano.x = fighter5x
kano.y = fighter5y
kanobladesboxx = fighter5backx
kanobladesboxy = fighter5backy + 25
kanocutboxx = fighter5backx
kanocutboxy = fighter5backy + 75
kanolaserboxx = fighter5backx
kanolaserboxy = fighter5backy + 125
kanohellboxx = fighter5backx
kanohellboxy = fighter5backy + 175
kanokickboxx = fighter5backx
kanokickboxy = fighter5backy + 225


}

function loadkanofighter6 ()
{
activefighter6name = 'Kano'
kanoactive = true
kano.setScale(1.4, 1.4);
fighter6health = kanohealth
fighter6maxhealth = kanohealth
fighter6action = kanoaction 
kano.x = fighter6x
kano.y = fighter6y
kanobladesboxx = fighter6backx
kanobladesboxy = fighter6backy + 25
kanocutboxx = fighter6backx
kanocutboxy = fighter6backy + 75
kanolaserboxx = fighter6backx
kanolaserboxy = fighter6backy + 125
kanohellboxx = fighter6backx
kanohellboxy = fighter6backy + 175
kanokickboxx = fighter6backx
kanokickboxy = fighter6backy + 225
}

function loadorchidfighter1 ()
{
activefighter1name = 'Orchid'
orchidactive = true
orchid.setScale(1.0, 1.0);
fighter1health = orchidhealth
fighter1maxhealth = orchidhealth
fighter1action = orchidaction 
orchid.x = fighter1x
orchid.y = fighter1y
orchidwheelboxx = fighter1backx
orchidwheelboxy = fighter1backy + 25
orchidfirebaboxx = fighter1backx
orchidfirebaboxy = fighter1backy + 75
orchidbatonboxx = fighter1backx
orchidbatonboxy = fighter1backy + 125
orchidcatboxx = fighter1backx
orchidcatboxy = fighter1backy + 175
orchidfitboxx = fighter1backx
orchidfitboxy = fighter1backy + 225
}
function loadorchidfighter2 ()
{
activefighter2name = 'Orchid'
orchidactive = true
orchid.setScale(1.0, 1.0);
fighter2health = orchidhealth
fighter2maxhealth = orchidhealth
fighter2action = orchidaction
fighter2actionregen = orchidactionregen
fighter2defenserating = orchiddefenserating
fighter2attackrating = orchidattackrating
fighter2supportrating = orchidsupportrating
orchid.x = fighter2x
orchid.y = fighter2y
orchidwheelboxx = fighter2backx
orchidwheelboxy = fighter2backy + 25
orchidfirebaboxx = fighter2backx
orchidfirebaboxy = fighter2backy + 75
orchidbatonboxx = fighter2backx
orchidbatonboxy = fighter2backy + 125
orchidcatboxx = fighter2backx
orchidcatboxy = fighter2backy + 175
orchidfitboxx = fighter2backx
orchidfitboxy = fighter2backy + 225
}
function loadorchidfighter3 ()
{
activefighter3name = 'Orchid'
orchidactive = true
orchid.setScale(1.0, 1.0);
fighter3health = orchidhealth
fighter3maxhealth = orchidhealth
fighter3action = orchidaction 
orchid.x = fighter3x
orchid.y = fighter3y
orchidwheelboxx = fighter3backx
orchidwheelboxy = fighter3backy + 25
orchidfirebaboxx = fighter3backx
orchidfirebaboxy = fighter3backy + 75
orchidbatonboxx = fighter3backx
orchidbatonboxy = fighter3backy + 125
orchidcatboxx = fighter3backx
orchidcatboxy = fighter3backy + 175
orchidfitboxx = fighter3backx
orchidfitboxy = fighter3backy + 225
}
function loadorchidfighter4 ()
{
activefighter4name = 'Orchid'
orchidactive = true
orchid.setScale(1.0, 1.0);
fighter4health = orchidhealth
fighter4maxhealth = orchidhealth
fighter4action = orchidaction 
orchid.x = fighter4x
orchid.y = fighter4y
orchidwheelboxx = fighter4backx
orchidwheelboxy = fighter4backy + 25
orchidfirebaboxx = fighter4backx
orchidfirebaboxy = fighter4backy + 75
orchidbatonboxx = fighter4backx
orchidbatonboxy = fighter4backy + 125
orchidcatboxx = fighter4backx
orchidcatboxy = fighter4backy + 175
orchidfitboxx = fighter4backx
orchidfitboxy = fighter4backy + 225
}
function loadorchidfighter5 ()
{
activefighter5name = 'Orchid'
orchidactive = true
orchid.setScale(1.0, 1.0);
fighter5health = orchidhealth
fighter5maxhealth = orchidhealth
fighter5action = orchidaction 
orchid.x = fighter5x
orchid.y = fighter5y
orchidwheelboxx = fighter5backx
orchidwheelboxy = fighter5backy + 25
orchidfirebaboxx = fighter5backx
orchidfirebaboxy = fighter5backy + 75
orchidbatonboxx = fighter5backx
orchidbatonboxy = fighter5backy + 125
orchidcatboxx = fighter5backx
orchidcatboxy = fighter5backy + 175
orchidfitboxx = fighter5backx
orchidfitboxy = fighter5backy + 225
}

function loadorchidfighter6 ()
{
activefighter6name = 'Orchid'
orchidactive = true
orchid.setScale(1.0, 1.0);
fighter6health = orchidhealth
fighter6maxhealth = orchidhealth
fighter6action = orchidaction 
orchid.x = fighter6x
orchid.y = fighter6y
orchidwheelboxx = fighter6backx
orchidwheelboxy = fighter6backy + 25
orchidfirebaboxx = fighter6backx
orchidfirebaboxy = fighter6backy + 75
orchidbatonboxx = fighter6backx
orchidbatonboxy = fighter6backy + 125
orchidcatboxx = fighter6backx
orchidcatboxy = fighter6backy + 175
orchidfitboxx = fighter6backx
orchidfitboxy = fighter6backy + 225
}

function loadjagofighter1 ()
{
activefighter1name = 'Jago'
jagoactive = true
jago.setScale(1.4, 1.4);
fighter1health = jagohealth
fighter1maxhealth = jagohealth
fighter1action = jagoaction 
jago.x = fighter1x
jago.y = fighter1y
jagoswordboxx = fighter1backx
jagoswordboxy = fighter1backy + 25
jagoplasmaboxx = fighter1backx
jagoplasmaboxy = fighter1backy + 75
jagorkickboxx = fighter1backx
jagorkickboxy = fighter1backy + 125
jagofocusboxx = fighter1backx
jagofocusboxy = fighter1backy + 175
jagostabboxx = fighter1backx
jagostabboxy = fighter1backy + 225
}
function loadjagofighter2 ()
{
activefighter2name = 'Jago'
jagoactive = true
jago.setScale(1.4, 1.4);
fighter2health = jagohealth
fighter2maxhealth = jagohealth
fighter2action = jagoaction 
jago.x = fighter2x
jago.y = fighter2y
jagoswordboxx = fighter2backx
jagoswordboxy = fighter2backy + 25
jagoplasmaboxx = fighter2backx
jagoplasmaboxy = fighter2backy + 75
jagorkickboxx = fighter2backx
jagorkickboxy = fighter2backy + 125
jagofocusboxx = fighter2backx
jagofocusboxy = fighter2backy + 175
jagostabboxx = fighter2backx
jagostabboxy = fighter2backy + 225
}
function loadjagofighter3 ()
{
activefighter3name = 'Jago'
jagoactive = true
jago.setScale(1.4, 1.4);
fighter3health = jagohealth
fighter3maxhealth = jagohealth
fighter3action = jagoaction
fighter3actionregen = jagoactionregen
fighter3defenserating = jagodefenserating
fighter3attackrating = jagoattackrating
fighter3supportrating = jagosupportrating
jago.x = fighter3x
jago.y = fighter3y
jagoswordboxx = fighter3backx
jagoswordboxy = fighter3backy + 25
jagoplasmaboxx = fighter3backx
jagoplasmaboxy = fighter3backy + 75
jagorkickboxx = fighter3backx
jagorkickboxy = fighter3backy + 125
jagofocusboxx = fighter3backx
jagofocusboxy = fighter3backy + 175
jagostabboxx = fighter3backx
jagostabboxy = fighter3backy + 225
}
function loadjagofighter4 ()
{
activefighter4name = 'Jago'
jagoactive = true
jago.setScale(1.4, 1.4);
fighter4health = jagohealth
fighter4maxhealth = jagohealth
fighter4action = jagoaction 
jago.x = fighter4x
jago.y = fighter4y
jagoswordboxx = fighter4backx
jagoswordboxy = fighter4backy + 25
jagoplasmaboxx = fighter4backx
jagoplasmaboxy = fighter4backy + 75
jagorkickboxx = fighter4backx
jagorkickboxy = fighter4backy + 125
jagofocusboxx = fighter4backx
jagofocusboxy = fighter4backy + 175
jagostabboxx = fighter4backx
jagostabboxy = fighter4backy + 225
}
function loadjagofighter5 ()
{
activefighter5name = 'Jago'
jagoactive = true
jago.setScale(1.4, 1.4);
fighter5health = jagohealth
fighter5maxhealth = jagohealth
fighter5action = jagoaction 
jago.x = fighter5x
jago.y = fighter5y
jagoswordboxx = fighter5backx
jagoswordboxy = fighter5backy + 25
jagoplasmaboxx = fighter5backx
jagoplasmaboxy = fighter5backy + 75
jagorkickboxx = fighter5backx
jagorkickboxy = fighter5backy + 125
jagofocusboxx = fighter5backx
jagofocusboxy = fighter5backy + 175
jagostabboxx = fighter5backx
jagostabboxy = fighter5backy + 225
}

function loadjagofighter6 ()
{
activefighter6name = 'Jago'
jagoactive = true
jago.setScale(1.4, 1.4);
fighter6health = jagohealth
fighter6maxhealth = jagohealth
fighter6action = jagoaction 
jago.x = fighter6x
jago.y = fighter6y
jagoswordboxx = fighter6backx
jagoswordboxy = fighter6backy + 25
jagoplasmaboxx = fighter6backx
jagoplasmaboxy = fighter6backy + 75
jagorkickboxx = fighter6backx
jagorkickboxy = fighter6backy + 125
jagofocusboxx = fighter6backx
jagofocusboxy = fighter6backy + 175
jagostabboxx = fighter6backx
jagostabboxy = fighter6backy + 225
}

function loadkunglaofighter1 ()
{
activefighter1name = 'Kunglao'
kunglaoactive = true
kunglao.setScale(1.4, 1.4);
fighter1health = kunglaohealth
fighter1maxhealth = kunglaohealth
fighter1action = kunglaoaction 
kunglao.x = fighter1x
kunglao.y = fighter1y
kunglaopalmkickboxx = fighter1backx
kunglaopalmkickboxy = fighter1backy + 25
kunglaohatthrowboxx = fighter1backx
kunglaohatthrowboxy = fighter1backy + 75
kunglaowhirlboxx = fighter1backx
kunglaowhirlboxy = fighter1backy + 125
kunglaobrimboxx = fighter1backx
kunglaobrimboxy = fighter1backy + 175
kunglaokickboxx = fighter1backx
kunglaokickboxy = fighter1backy + 225
}
function loadkunglaofighter2 ()
{
activefighter2name = 'Kunglao'
kunglaoactive = true
kunglao.setScale(1.4, 1.4);
fighter2health = kunglaohealth
fighter2maxhealth = kunglaohealth
fighter2action = kunglaoaction 
kunglao.x = fighter2x
kunglao.y = fighter2y
kunglaopalmkickboxx = fighter2backx
kunglaopalmkickboxy = fighter2backy + 25
kunglaohatthrowboxx = fighter2backx
kunglaohatthrowboxy = fighter2backy + 75
kunglaowhirlboxx = fighter2backx
kunglaowhirlboxy = fighter2backy + 125
kunglaobrimboxx = fighter2backx
kunglaobrimboxy = fighter2backy + 175
kunglaokickboxx = fighter2backx
kunglaokickboxy = fighter2backy + 225
}
function loadkunglaofighter3 ()
{
activefighter3name = 'Kunglao'
kunglaoactive = true
kunglao.setScale(1.4, 1.4);
fighter3health = kunglaohealth
fighter3maxhealth = kunglaohealth
fighter3action = kunglaoaction 
kunglao.x = fighter3x
kunglao.y = fighter3y
kunglaopalmkickboxx = fighter3backx
kunglaopalmkickboxy = fighter3backy + 25
kunglaohatthrowboxx = fighter3backx
kunglaohatthrowboxy = fighter3backy + 75
kunglaowhirlboxx = fighter3backx
kunglaowhirlboxy = fighter3backy + 125
kunglaobrimboxx = fighter3backx
kunglaobrimboxy = fighter3backy + 175
kunglaokickboxx = fighter3backx
kunglaokickboxy = fighter3backy + 225
}
function loadkunglaofighter4 ()
{
activefighter4name = 'Kunglao'
kunglaoactive = true
kunglao.setScale(1.4, 1.4);
fighter4health = kunglaohealth
fighter4maxhealth = kunglaohealth
fighter4action = kunglaoaction
fighter4actionregen = kunglaoactionregen
fighter4defenserating = kunglaodefenserating
fighter4attackrating = kunglaoattackrating
fighter4supportrating = kunglaosupportrating
kunglao.x = fighter4x
kunglao.y = fighter4y
kunglaopalmkickboxx = fighter4backx
kunglaopalmkickboxy = fighter4backy + 25
kunglaohatthrowboxx = fighter4backx
kunglaohatthrowboxy = fighter4backy + 75
kunglaowhirlboxx = fighter4backx
kunglaowhirlboxy = fighter4backy + 125
kunglaobrimboxx = fighter4backx
kunglaobrimboxy = fighter4backy + 175
kunglaokickboxx = fighter4backx
kunglaokickboxy = fighter4backy + 225
}
function loadkunglaofighter5 ()
{
activefighter5name = 'Kunglao'
kunglaoactive = true
kunglao.setScale(1.4, 1.0);
fighter5health = kunglaohealth
fighter5maxhealth = kunglaohealth
fighter5action = kunglaoaction 
kunglao.x = fighter5x
kunglao.y = fighter5y
kunglaopalmkickboxx = fighter5backx
kunglaopalmkickboxy = fighter5backy + 25
kunglaohatthrowboxx = fighter5backx
kunglaohatthrowboxy = fighter5backy + 75
kunglaowhirlboxx = fighter5backx
kunglaowhirlboxy = fighter5backy + 125
kunglaobrimboxx = fighter5backx
kunglaobrimboxy = fighter5backy + 175
kunglaokickboxx = fighter5backx
kunglaokickboxy = fighter5backy + 225
}

function loadkunglaofighter6 ()
{
activefighter6name = 'Kunglao'
kunglaoactive = true
kunglao.setScale(1.0, 1.4);
fighter6health = kunglaohealth
fighter6maxhealth = kunglaohealth
fighter6action = kunglaoaction 
kunglao.x = fighter6x
kunglao.y = fighter6y
kunglaopalmkickboxx = fighter6backx
kunglaopalmkickboxy = fighter6backy + 25
kunglaohatthrowboxx = fighter6backx
kunglaohatthrowboxy = fighter6backy + 75
kunglaowhirlboxx = fighter6backx
kunglaowhirlboxy = fighter6backy + 125
kunglaobrimboxx = fighter6backx
kunglaobrimboxy = fighter6backy + 175
kunglaokickboxx = fighter6backx
kunglaokickboxy = fighter6backy + 225
}

function loadterrafighter1 ()
{
activefighter1name = 'Terra'
terraactive = true
terra.setScale(1.0, 1.0);
fighter1health = terrahealth
fighter1maxhealth = terrahealth
fighter1action = terraaction 
terra.x = fighter1x
terra.y = fighter1y
terrafireboxx = fighter1backx
terrafireboxy = fighter1backy + 25
terraiceboxx = fighter1backx
terraiceboxy = fighter1backy + 75
terrawindboxx = fighter1backx
terrawindboxy = fighter1backy + 125
terraearthboxx = fighter1backx
terraearthboxy = fighter1backy + 175
terracallboxx = fighter1backx
terracallboxy = fighter1backy + 225
}
function loadterrafighter2 ()
{
activefighter2name = 'Terra'
terraactive = true
terra.setScale(1.0, 1.0);
fighter2health = terrahealth
fighter2maxhealth = terrahealth
fighter2action = terraaction 
terra.x = fighter2x
terra.y = fighter2y
terrafireboxx = fighter2backx
terrafireboxy = fighter2backy + 25
terraiceboxx = fighter2backx
terraiceboxy = fighter2backy + 75
terrawindboxx = fighter2backx
terrawindboxy = fighter2backy + 125
terraearthboxx = fighter2backx
terraearthboxy = fighter2backy + 175
terracallboxx = fighter2backx
terracallboxy = fighter2backy + 225
}
function loadterrafighter3 ()
{
activefighter3name = 'Terra'
terraactive = true
terra.setScale(1.0, 1.0);
fighter3health = terrahealth
fighter3maxhealth = terrahealth
fighter3action = terraaction 
terra.x = fighter3x
terra.y = fighter3y
terrafireboxx = fighter3backx
terrafireboxy = fighter3backy + 25
terraiceboxx = fighter3backx
terraiceboxy = fighter3backy + 75
terrawindboxx = fighter3backx
terrawindboxy = fighter3backy + 125
terraearthboxx = fighter3backx
terraearthboxy = fighter3backy + 175
terracallboxx = fighter3backx
terracallboxy = fighter3backy + 225
}
function loadterrafighter4 ()
{
activefighter4name = 'Terra'
terraactive = true
terra.setScale(1.0, 1.0);
fighter4health = terrahealth
fighter4maxhealth = terrahealth
fighter4action = terraaction 
terra.x = fighter4x
terra.y = fighter4y
terrafireboxx = fighter4backx
terrafireboxy = fighter4backy + 25
terraiceboxx = fighter4backx
terraiceboxy = fighter4backy + 75
terrawindboxx = fighter4backx
terrawindboxy = fighter4backy + 125
terraearthboxx = fighter4backx
terraearthboxy = fighter4backy + 175
terracallboxx = fighter4backx
terracallboxy = fighter4backy + 225
}
function loadterrafighter5 ()
{
activefighter5name = 'Terra'
terraactive = true
terra.setScale(1.0, 1.0);
fighter5health = terrahealth
fighter5maxhealth = terrahealth
fighter5action = terraaction
fighter5actionregen = terraactionregen
fighter5defenserating = terradefenserating
fighter5attackrating = terraattackrating
fighter5supportrating = terrasupportrating
terra.x = fighter5x
terra.y = fighter5y
terrafireboxx = fighter5backx
terrafireboxy = fighter5backy + 25
terraiceboxx = fighter5backx
terraiceboxy = fighter5backy + 75
terrawindboxx = fighter5backx
terrawindboxy = fighter5backy + 125
terraearthboxx = fighter5backx
terraearthboxy = fighter5backy + 175
terracallboxx = fighter5backx
terracallboxy = fighter5backy + 225
}

function loadterrafighter6 ()
{
activefighter6name = 'Terra'
terraactive = true
terra.setScale(1.0, 1.0);
fighter6health = terrahealth
fighter6maxhealth = terrahealth
fighter6action = terraaction 
terra.x = fighter6x
terra.y = fighter6y
terrafireboxx = fighter6backx
terrafireboxy = fighter6backy + 25
terraiceboxx = fighter6backx
terraiceboxy = fighter6backy + 75
terrawindboxx = fighter6backx
terrawindboxy = fighter6backy + 125
terraearthboxx = fighter6backx
terraearthboxy = fighter6backy + 175
terracallboxx = fighter6backx
terracallboxy = fighter6backy + 225
}

function loadsonjafighter1 ()
{
activefighter1name = 'Sonja'
sonjaactive = true
sonja.setScale(1.4, 1.4);
fighter1health = sonjahealth
fighter1maxhealth = sonjahealth
fighter1action = sonjaaction 
sonja.x = fighter1x
sonja.y = fighter1y
sonjahandstboxx = fighter1backx
sonjahandstboxy = fighter1backy + 25
sonjablasterboxx = fighter1backx
sonjablasterboxy = fighter1backy + 75
sonjakissboxx = fighter1backx
sonjakissboxy = fighter1backy + 125
sonjadancerboxx = fighter1backx
sonjadancerboxy = fighter1backy + 175
sonjakicksboxx = fighter1backx
sonjakicksboxy = fighter1backy + 225
}
function loadsonjafighter2 ()
{
activefighter2name = 'Sonja'
sonjaactive = true
sonja.setScale(1.4, 1.4);
fighter2health = sonjahealth
fighter2maxhealth = sonjahealth
fighter2action = sonjaaction 
sonja.x = fighter2x
sonja.y = fighter2y
sonjahandstboxx = fighter2backx
sonjahandstboxy = fighter2backy + 25
sonjablasterboxx = fighter2backx
sonjablasterboxy = fighter2backy + 75
sonjakissboxx = fighter2backx
sonjakissboxy = fighter2backy + 125
sonjadancerboxx = fighter2backx
sonjadancerboxy = fighter2backy + 175
sonjakicksboxx = fighter2backx
sonjakicksboxy = fighter2backy + 225
}
function loadsonjafighter3 ()
{
activefighter3name = 'Sonja'
sonjaactive = true
sonja.setScale(1.4, 1.4);
fighter3health = sonjahealth
fighter3maxhealth = sonjahealth
fighter3action = sonjaaction 
sonja.x = fighter3x
sonja.y = fighter3y
sonjahandstboxx = fighter3backx
sonjahandstboxy = fighter3backy + 25
sonjablasterboxx = fighter3backx
sonjablasterboxy = fighter3backy + 75
sonjakissboxx = fighter3backx
sonjakissboxy = fighter3backy + 125
sonjadancerboxx = fighter3backx
sonjadancerboxy = fighter3backy + 175
sonjakicksboxx = fighter3backx
sonjakicksboxy = fighter3backy + 225
}
function loadsonjafighter4 ()
{
activefighter4name = 'Sonja'
sonjaactive = true
sonja.setScale(1.4, 1.4);
fighter4health = sonjahealth
fighter4maxhealth = sonjahealth
fighter4action = sonjaaction 
sonja.x = fighter4x
sonja.y = fighter4y
sonjahandstboxx = fighter4backx
sonjahandstboxy = fighter4backy + 25
sonjablasterboxx = fighter4backx
sonjablasterboxy = fighter4backy + 75
sonjakissboxx = fighter4backx
sonjakissboxy = fighter4backy + 125
sonjadancerboxx = fighter4backx
sonjadancerboxy = fighter4backy + 175
sonjakicksboxx = fighter4backx
sonjakicksboxy = fighter4backy + 225
}
function loadsonjafighter5 ()
{
activefighter5name = 'Sonja'
sonjaactive = true
sonja.setScale(1.4, 1.4);
fighter5health = sonjahealth
fighter5maxhealth = sonjahealth
fighter5action = sonjaaction 
sonja.x = fighter5x
sonja.y = fighter5y
sonjahandstboxx = fighter5backx
sonjahandstboxy = fighter5backy + 25
sonjablasterboxx = fighter5backx
sonjablasterboxy = fighter5backy + 75
sonjakissboxx = fighter5backx
sonjakissboxy = fighter5backy + 125
sonjadancerboxx = fighter5backx
sonjadancerboxy = fighter5backy + 175
sonjakicksboxx = fighter5backx
sonjakicksboxy = fighter5backy + 225
}

function loadsonjafighter6 ()
{
activefighter6name = 'Sonja'
sonjaactive = true
sonja.setScale(1.4, 1.4);
fighter6health = sonjahealth
fighter6maxhealth = sonjahealth
fighter6action = sonjaaction
fighter6actionregen = sonjaactionregen
fighter6defenserating = sonjadefenserating
fighter6attackrating = sonjaattackrating
fighter6supportrating = sonjasupportrating
sonja.x = fighter6x
sonja.y = fighter6y
sonjahandstboxx = fighter6backx
sonjahandstboxy = fighter6backy + 25
sonjablasterboxx = fighter6backx
sonjablasterboxy = fighter6backy + 75
sonjakissboxx = fighter6backx
sonjakissboxy = fighter6backy + 125
sonjadancerboxx = fighter6backx
sonjadancerboxy = fighter6backy + 175
sonjakicksboxx = fighter6backx
sonjakicksboxy = fighter6backy + 225
}


//supportmog
//supportfmog
function supportfmog ()
{
 if (mogcancastnow == true){
         if (ismogpickingtarget == true){
         if (ismogcastingpower == true){
         endmogcastnumber = 2
        mogspelltargetx = leader1x
        mogspelltargety = leader1y
        ismogcastingnow = true
        ismogtargetpicked = true
        mogspells.anims.play('mogpowerspell', true);
        mogpowerbufftime = mogpowerbufftimeamount
        mogpowerbuffactive = true

     if (support2charge1active == true){
        support2nochargeactive = false
        mogpowerbuffstat = '1charge'
        leader1attackrating += 200 + mogbonushealamount;
        leader2attackrating += 200 + mogbonushealamount;
        support1attackrating += 200 + mogbonushealamount;
        support2attackrating += 200 + mogbonushealamount;
        fighter1attackrating += 200 + mogbonushealamount;
        fighter2attackrating += 200 + mogbonushealamount; 
        fighter3attackrating += 200 + mogbonushealamount;
        fighter4attackrating += 200 + mogbonushealamount;
        fighter5attackrating += 200 + mogbonushealamount; 
        fighter6attackrating += 200 + mogbonushealamount;
        support2focuscharge -= 1
        support2charge1active = false
        support2focuschargebox1.clearTint();
        
}
     if (support2charge2active == true){
        mogpowerbuffstat = '2charge'
        support2nochargeactive = false
        leader1attackrating += 300 + mogbonushealamount;
        leader2attackrating += 300 + mogbonushealamount;
        support1attackrating += 300 + mogbonushealamount;
        support2attackrating += 300 + mogbonushealamount;
        fighter1attackrating += 300 + mogbonushealamount;
        fighter2attackrating += 300 + mogbonushealamount;
        fighter3attackrating += 300 + mogbonushealamount;
        fighter4attackrating += 300 + mogbonushealamount;
        fighter5attackrating += 300 + mogbonushealamount;
        fighter6attackrating += 300 + mogbonushealamount;
        support2focuscharge -= 2
        support2charge2active = false
        support2focuschargebox1.clearTint();
        support2focuschargebox2.clearTint();

}
    if (support2charge3active == true){
        mogpowerbuffstat = '3charge'
        support2nochargeactive = false
        leader1attackrating += 400 + mogbonushealamount;
        leader2attackrating += 400 + mogbonushealamount;
        support1attackrating += 400 + mogbonushealamount;
        support2attackrating += 400 + mogbonushealamount;
        fighter1attackrating += 400 + mogbonushealamount;
        fighter2attackrating += 400 + mogbonushealamount;
        fighter3attackrating += 400 + mogbonushealamount;
        fighter4attackrating += 400 + mogbonushealamount;
        fighter5attackrating += 400 + mogbonushealamount;
        fighter6attackrating += 400 + mogbonushealamount;
        support2focuscharge -= 3
        support2charge3active = false
        support2focuschargebox1.clearTint();
        support2focuschargebox2.clearTint();
        support2focuschargebox3.clearTint();

}
    if (support2charge4active == true){
        mogpowerbuffstat = '4charge'
        support2nochargeactive = false
        leader1attackrating += 500 + mogbonushealamount;
        leader2attackrating += 500 + mogbonushealamount;
        support1attackrating += 500 + mogbonushealamount;
        support2attackrating += 500 + mogbonushealamount;
        fighter1attackrating += 500 + mogbonushealamount;
        fighter2attackrating += 500 + mogbonushealamount;
        fighter3attackrating += 500 + mogbonushealamount;
        fighter4attackrating += 500 + mogbonushealamount;
        fighter5attackrating += 500 + mogbonushealamount;
        fighter6attackrating += 500 + mogbonushealamount;
        support2focuscharge -= 4
        support2charge4active = false
        support2focuschargebox1.clearTint();
        support2focuschargebox2.clearTint();
        support2focuschargebox3.clearTint();
        support2focuschargebox4.clearTint();

}
if (support2charge5active == true){
        mogpowerbuffstat = '5charge'
        support2nochargeactive = false
        leader1attackrating += 600 + mogbonushealamount;
        leader2attackrating += 600 + mogbonushealamount;
        support1attackrating += 600 + mogbonushealamount;
        support2attackrating += 600 + mogbonushealamount;
        fighter1attackrating += 600 + mogbonushealamount;
        fighter2attackrating += 600 + mogbonushealamount;
        fighter3attackrating += 600 + mogbonushealamount;
        fighter4attackrating += 600 + mogbonushealamount;
        fighter5attackrating += 600 + mogbonushealamount;
        fighter6attackrating += 600 + mogbonushealamount;
        support2focuscharge -= 5
        support2charge5active = false
        support2focuschargebox1.clearTint();
        support2focuschargebox2.clearTint();
        support2focuschargebox3.clearTint();
        support2focuschargebox4.clearTint();
        support2focuschargebox5.clearTint();

}
        if (support2nochargeactive == true){
        mogpowerbuffstat = '0charge'
        leader1attackrating += 100 + mogbonushealamount;
        leader2attackrating += 100 + mogbonushealamount;
        support1attackrating += 100 + mogbonushealamount;
        support2attackrating += 100 + mogbonushealamount;
        fighter1attackrating += 100 + mogbonushealamount;
        fighter2attackrating += 100 + mogbonushealamount;
        fighter3attackrating += 100 + mogbonushealamount;
        fighter4attackrating += 100 + mogbonushealamount;
        fighter5attackrating += 100 + mogbonushealamount;
        fighter6attackrating += 100 + mogbonushealamount;
}
if (activesupport2name == 'Mog'){
support2action = 0
mogaction = 0
}
}
}
}
         if (mogcancastnow == true){
         if (ismogpickingtarget == true){
         if (ismogcastingmoon == true){
         endmogcastnumber = 2
        mogspelltargetx = leader1x
        mogspelltargety = leader1y
        ismogcastingnow = true
        ismogtargetpicked = true
        mogspells.anims.play('mogmoonspell', true);
        mogmoonbufftime = mogmoonbufftimeamount
        mogmoonbuffactive = true
 
     if (support2charge1active == true){
        mogmoonbuffstat = '1charge'
       support2nochargeactive = false
        leader1maxhealth += 2000 + mogbonushealamount;
        leader2maxhealth += 2000 + mogbonushealamount;
        support1maxhealth += 2000 + mogbonushealamount;
        support2maxhealth += 2000 + mogbonushealamount;
        fighter1maxhealth += 2000 + mogbonushealamount;
        fighter2maxhealth += 2000 + mogbonushealamount; 
        fighter3maxhealth += 2000 + mogbonushealamount;
        fighter4maxhealth += 2000 + mogbonushealamount;
        fighter5maxhealth += 2000 + mogbonushealamount; 
        fighter6maxhealth += 2000 + mogbonushealamount;
        support2focuscharge -= 1
        support2charge1active = false
        support2focuschargebox1.clearTint();
        
}
     if (support2charge2active == true){
       mogmoonbuffstat = '2charge'
support2nochargeactive = false
        leader1maxhealth += 3000 + mogbonushealamount;
        leader2maxhealth += 3000 + mogbonushealamount;
        support1maxhealth += 3000 + mogbonushealamount;
        support2maxhealth += 3000 + mogbonushealamount;
        fighter1maxhealth += 3000 + mogbonushealamount;
        fighter2maxhealth += 3000 + mogbonushealamount;
        fighter3maxhealth += 3000 + mogbonushealamount;
        fighter4maxhealth += 3000 + mogbonushealamount;
        fighter5maxhealth += 3000 + mogbonushealamount;
        fighter6maxhealth += 3000 + mogbonushealamount;
        support2focuscharge -= 2
        support2charge2active = false
        support2focuschargebox1.clearTint();
        support2focuschargebox2.clearTint();

}
    if (support2charge3active == true){
        mogmoonbuffstat = '3charge'
support2nochargeactive = false
        leader1maxhealth += 4000 + mogbonushealamount;
        leader2maxhealth += 4000 + mogbonushealamount;
        support1maxhealth += 4000 + mogbonushealamount;
        support2maxhealth += 4000 + mogbonushealamount;
        fighter1maxhealth += 4000 + mogbonushealamount;
        fighter2maxhealth += 4000 + mogbonushealamount;
        fighter3maxhealth += 4000 + mogbonushealamount;
        fighter4maxhealth += 4000 + mogbonushealamount;
        fighter5maxhealth += 4000 + mogbonushealamount;
        fighter6maxhealth += 4000 + mogbonushealamount;
        support2focuscharge -= 3
        support2charge3active = false
        support2focuschargebox1.clearTint();
        support2focuschargebox2.clearTint();
        support2focuschargebox3.clearTint();

}
    if (support2charge4active == true){
        mogmoonbuffstat = '4charge'
        support2nochargeactive = false
        leader1maxhealth += 5000 + mogbonushealamount;
        leader2maxhealth += 5000 + mogbonushealamount;
        support1maxhealth += 5000 + mogbonushealamount;
        support2maxhealth += 5000 + mogbonushealamount;
        fighter1maxhealth += 5000 + mogbonushealamount;
        fighter2maxhealth += 5000 + mogbonushealamount;
        fighter3maxhealth += 5000 + mogbonushealamount;
        fighter4maxhealth += 5000 + mogbonushealamount;
        fighter5maxhealth += 5000 + mogbonushealamount;
        fighter6maxhealth += 5000 + mogbonushealamount;
        support2focuscharge -= 4
        support2charge4active = false
        support2focuschargebox1.clearTint();
        support2focuschargebox2.clearTint();
        support2focuschargebox3.clearTint();
        support2focuschargebox4.clearTint();

}
if (support2charge5active == true){
        mogmoonbuffstat = '5charge'
        support2nochargeactive = false
        leader1maxhealth += 6000 + mogbonushealamount;
        leader2maxhealth += 6000 + mogbonushealamount;
        support1maxhealth += 6000 + mogbonushealamount;
        support2maxhealth += 6000 + mogbonushealamount;
        fighter1maxhealth += 6000 + mogbonushealamount;
        fighter2maxhealth += 6000 + mogbonushealamount;
        fighter3maxhealth += 6000 + mogbonushealamount;
        fighter4maxhealth += 6000 + mogbonushealamount;
        fighter5maxhealth += 6000 + mogbonushealamount;
        fighter6maxhealth += 6000 + mogbonushealamount;
        support2focuscharge -= 5
        support2charge5active = false
        support2focuschargebox1.clearTint();
        support2focuschargebox2.clearTint();
        support2focuschargebox3.clearTint();
        support2focuschargebox4.clearTint();
        support2focuschargebox5.clearTint();

}
       if (support2nochargeactive == true){
        mogmoonbuffstat = '0charge'
        leader1maxhealth += 1000 + mogbonushealamount;
        leader2maxhealth += 1000 + mogbonushealamount;
        support1maxhealth += 1000 + mogbonushealamount;
        support2maxhealth += 1000 + mogbonushealamount;
        fighter1maxhealth += 1000 + mogbonushealamount;
        fighter2maxhealth += 1000 + mogbonushealamount;
        fighter3maxhealth += 1000 + mogbonushealamount;
        fighter4maxhealth += 1000 + mogbonushealamount;
        fighter5maxhealth += 1000 + mogbonushealamount;
        fighter6maxhealth += 1000 + mogbonushealamount;
}
if (activesupport2name == 'Mog'){
support2action = 0
mogaction = 0
}
}
}
}
         if (mogcancastnow == true){
         if (ismogpickingtarget == true){
         if (ismogcastingdance == true){
         endmogcastnumber = 2
        mogspelltargetx = leader1x
        mogspelltargety = leader1y
        ismogcastingnow = true
        ismogtargetpicked = true
        mogspells.anims.play('mogdancespell', true);
        mogdancebufftime = mogdancebufftimeamount
        mogdancebuffactive = true
     
     if (support2charge1active == true){
       support2nochargeactive = false
       mogdancebuffstat = '1charge'
        leader1action += 40 
        leader2action += 40 
        support1action += 40 
        support2action += 40 
        fighter1action += 40 
        fighter2action += 40  
        fighter3action += 40 
        fighter4action += 40 
        fighter5action += 40  
        fighter6action += 40 
        support2focuscharge -= 1
        support2charge1active = false
        support2focuschargebox1.clearTint();
        
}
     if (support2charge2active == true){
       support2nochargeactive = false
       mogdancebuffstat = '2charge'
        leader1action += 60 
        leader2action += 60 
        support1action += 60 
        support2action += 60 
        fighter1action += 60 
        fighter2action += 60 
        fighter3action += 60 
        fighter4action += 60 
        fighter5action += 60 
        fighter6action += 60 
        support2focuscharge -= 2
        support2charge2active = false
        support2focuschargebox1.clearTint();
        support2focuschargebox2.clearTint();

}
    if (support2charge3active == true){
       support2nochargeactive = false
        mogdancebuffstat = '3charge'
        leader1action += 80 
        leader2action += 80 
        support1action += 80 
        support2action += 80 
        fighter1action += 80 
        fighter2action += 80 
        fighter3action += 80 
        fighter4action += 80 
        fighter5action += 80 
        fighter6action += 80 
        support2focuscharge -= 3
        support2charge3active = false
        support2focuschargebox1.clearTint();
        support2focuschargebox2.clearTint();
        support2focuschargebox3.clearTint();

}
    if (support2charge4active == true){
       support2nochargeactive = false
        mogdancebuffstat = '4charge'
        leader1action += 100 
        leader2action += 100 
        support1action += 100 
        support2action += 100 
        fighter1action += 100 
        fighter2action += 100 
        fighter3action += 100 
        fighter4action += 100 
        fighter5action += 100 
        fighter6action += 100 
        support2focuscharge -= 4
        support2charge4active = false
        support2focuschargebox1.clearTint();
        support2focuschargebox2.clearTint();
        support2focuschargebox3.clearTint();
        support2focuschargebox4.clearTint();

}
if (support2charge5active == true){
       support2nochargeactive = false
       mogdancebuffstat = '5charge'
        leader1action += 100
        leader1actionregen += 2
        leader2action += 100 
        leader2actionregen += 2
        support1action += 100 
        support1actionregen += 2
        support2action += 100 
        support2actionregen += 2
        fighter1action += 100 
        fighter1actionregen += 2
        fighter2action += 100 
        fighter2actionregen += 2
        fighter3action += 100 
        fighter3actionregen += 2
        fighter4action += 100 
        fighter4actionregen += 2
        fighter5action += 100 
        fighter5actionregen += 2
        fighter6action += 100 
        fighter6actionregen += 2
        support2focuscharge -= 5
        support2charge5active = false
        support2focuschargebox1.clearTint();
        support2focuschargebox2.clearTint();
        support2focuschargebox3.clearTint();
        support2focuschargebox4.clearTint();
        support2focuschargebox5.clearTint();

}
   if (support2nochargeactive == true){
       mogdancebuffstat = '0charge'
        leader1action += 20 
        leader2action += 20 
        support1action += 20 
        support2action += 20 
        fighter1action += 20 
        fighter2action += 20 
        fighter3action += 20 
        fighter4action += 20 
        fighter5action += 20 
        fighter6action += 20 
}
if (activesupport2name == 'Mog'){
support2action = 0
mogaction = 0
}
}
}
}
         if (mogcancastnow == true){
         if (ismogpickingtarget == true){
         if (ismogcastingdream == true){
         endmogcastnumber = 2
        mogspelltargetx = leader1x
        mogspelltargety = leader1y
        ismogcastingnow = true
        ismogtargetpicked = true
        mogspells.anims.play('mogdreamspell', true);
        mogdreambufftime = mogdreambufftimeamount
        mogdreambuffactive = true
 
     if (support2charge1active == true){
        support2nochargeactive = false
        mogdreambuffstat = '1charge'
        leader1supportrating += 400 
        leader2supportrating += 400 
        support1supportrating += 400 
        support2supportrating += 400 
        fighter1supportrating += 400 
        fighter2supportrating += 400  
        fighter3supportrating += 400 
        fighter4supportrating += 400 
        fighter5supportrating += 400  
        fighter6supportrating += 400 
        support2focuscharge -= 1
        support2charge1active = false
        support2focuschargebox1.clearTint();
        
}
     if (support2charge2active == true){
       support2nochargeactive = false
        mogdreambuffstat = '2charge'
        leader1supportrating += 600 
        leader2supportrating += 600 
        support1supportrating += 600 
        support2supportrating += 600 
        fighter1supportrating += 600 
        fighter2supportrating += 600 
        fighter3supportrating += 600 
        fighter4supportrating += 600 
        fighter5supportrating += 600 
        fighter6supportrating += 600 
        support2focuscharge -= 2
        support2charge2active = false
        support2focuschargebox1.clearTint();
        support2focuschargebox2.clearTint();

}
    if (support2charge3active == true){
 support2nochargeactive = false
       mogdreambuffstat = '3charge'
        leader1supportrating += 800 
        leader2supportrating += 800 
        support1supportrating += 800 
        support2supportrating += 800 
        fighter1supportrating += 800 
        fighter2supportrating += 800 
        fighter3supportrating += 800 
        fighter4supportrating += 800 
        fighter5supportrating += 800 
        fighter6supportrating += 800 
        support2focuscharge -= 3
        support2charge3active = false
        support2focuschargebox1.clearTint();
        support2focuschargebox2.clearTint();
        support2focuschargebox3.clearTint();

}
    if (support2charge4active == true){
 support2nochargeactive = false
        mogdreambuffstat = '4charge'
        leader1supportrating += 1000 
        leader2supportrating += 1000 
        support1supportrating += 1000 
        support2supportrating += 1000 
        fighter1supportrating += 1000 
        fighter2supportrating += 1000 
        fighter3supportrating += 1000 
        fighter4supportrating += 1000 
        fighter5supportrating += 1000 
        fighter6supportrating += 1000 
        support2focuscharge -= 4
        support2charge4active = false
        support2focuschargebox1.clearTint();
        support2focuschargebox2.clearTint();
        support2focuschargebox3.clearTint();
        support2focuschargebox4.clearTint();

}
if (support2charge5active == true){
 support2nochargeactive = false
       mogdreambuffstat = '5charge'
        leader1supportrating += 1500
        leader2supportrating += 1500 
        support1supportrating += 1500 
        support2supportrating += 1500 
        fighter1supportrating += 1500 
        fighter2supportrating += 1500 
        fighter3supportrating += 1500 
        fighter4supportrating += 1500 
        fighter5supportrating += 1500 
        fighter6supportrating += 1500 
        
        support2focuscharge -= 5
        support2charge5active = false
        support2focuschargebox1.clearTint();
        support2focuschargebox2.clearTint();
        support2focuschargebox3.clearTint();
        support2focuschargebox4.clearTint();
        support2focuschargebox5.clearTint();

}
       if (support2nochargeactive == true){
        mogdreambuffstat = '0charge'
        leader1supportrating += 200 
        leader2supportrating += 200 
        support1supportrating += 200 
        support2supportrating += 200 
        fighter1supportrating += 200 
        fighter2supportrating += 200 
        fighter3supportrating += 200 
        fighter4supportrating += 200 
        fighter5supportrating += 200 
        fighter6supportrating += 200 
}
if (activesupport2name == 'Mog'){
support2action = 0
mogaction = 0
}
}
}
}

         if (mogcancastnow == true){
         if (ismogpickingtarget == true){
         if (ismogcastingbull == true){
         endmogcastnumber = 2
        mogspelltargetx = leader1x
        mogspelltargety = leader1y
        ismogcastingnow = true
        ismogtargetpicked = true
        mogspells.anims.play('mogbullspell', true);
         
     if (support2charge1active == true){
        support2nochargeactive = false
        leader1focustime += 40
        leader2focustime += 40 
        support1focustime += 40 
        fighter1focustime += 40 
        fighter2focustime += 40  
        fighter3focustime += 40 
        fighter4focustime += 40 
        fighter5focustime += 40  
        fighter6focustime += 40 
        support2focuscharge -= 1
        support2charge1active = false
        support2focuschargebox1.clearTint();
        
}
     if (support2charge2active == true){
       support2nochargeactive = false
        
        leader1focustime += 60 
        leader2focustime += 60 
        support1focustime += 60 
        fighter1focustime += 60 
        fighter2focustime += 60 
        fighter3focustime += 60 
        fighter4focustime += 60 
        fighter5focustime += 60 
        fighter6focustime += 60 
        support2focuscharge -= 2
        support2charge2active = false
        support2focuschargebox1.clearTint();
        support2focuschargebox2.clearTint();

}
    if (support2charge3active == true){
 support2nochargeactive = false
       
        leader1focustime += 80 
        leader2focustime += 80 
        support1focustime += 80 
        fighter1focustime += 80 
        fighter2focustime += 80 
        fighter3focustime += 80 
        fighter4focustime += 80 
        fighter5focustime += 80 
        fighter6focustime += 80 
        support2focuscharge -= 3
        support2charge3active = false
        support2focuschargebox1.clearTint();
        support2focuschargebox2.clearTint();
        support2focuschargebox3.clearTint();

}
    if (support2charge4active == true){
 support2nochargeactive = false
        
        leader1focustime += 100 
        leader2focustime += 100 
        support1focustime += 100 
        fighter1focustime += 100 
        fighter2focustime += 100 
        fighter3focustime += 100 
        fighter4focustime += 100 
        fighter5focustime += 100 
        fighter6focustime += 100 
        support2focuscharge -= 4
        support2charge4active = false
        support2focuschargebox1.clearTint();
        support2focuschargebox2.clearTint();
        support2focuschargebox3.clearTint();
        support2focuschargebox4.clearTint();

}
if (support2charge5active == true){
 support2nochargeactive = false
       
        leader1focustime += 100
        leader1focuscharge += 1
        leader2focustime += 100 
        leader2focuscharge += 1
        support1focustime += 100
        support1focuscharge += 1
        fighter1focustime += 100 
        fighter1focuscharge += 1
        fighter2focustime += 100 
        fighter2focuscharge += 1
        fighter3focustime += 100 
        fighter3focuscharge += 1
        fighter4focustime += 100 
        fighter4focuscharge += 1
        fighter5focustime += 100 
        fighter5focuscharge += 1
        fighter6focustime += 100 
        fighter6focuscharge += 1
        support2focuscharge -= 5
        support2charge5active = false
        support2focuschargebox1.clearTint();
        support2focuschargebox2.clearTint();
        support2focuschargebox3.clearTint();
        support2focuschargebox4.clearTint();
        support2focuschargebox5.clearTint();

}
       if (support2nochargeactive == true){
       
        leader1focustime += 20
        leader2focustime += 20 
        support1focustime += 20 
        fighter1focustime += 20 
        fighter2focustime += 20 
        fighter3focustime += 20 
        fighter4focustime += 20 
        fighter5focustime += 20 
        fighter6focustime += 20 
}
if (activesupport2name == 'Mog'){
support2action = 0
mogaction = 0
}
}
}
}
}


//supportfrosa


//supportfleader1
function supportfleader1 ()
{
         
         if (leader1alive == true){
         if (rosacancastnow == true){
         if (isrosapickingtarget == true){
         if (isrosacastingcure == true){
        endrosacastnumber = 2
        rosaspelltargetx = leader1x
        rosaspelltargety = leader1y + 50;
        isrosacastingnow = true
        isrosatargetpicked = true
        rosaspells.anims.play('rosacurespell', true);
        
        
    
     if (support1charge1active == true){
       support1nochargeactive = false
        leader1health += support1supportrating + rosabonushealamount + 1000;
        support1focuscharge -= 1
        support1charge1active = false
        support1focuschargebox1.clearTint();
        
}
     if (support1charge2active == true){
        support1nochargeactive = false
        leader1health += support1supportrating + rosabonushealamount + 3000;
        support1focuscharge -= 2
        support1charge2active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();

}
    if (support1charge3active == true){
        support1nochargeactive = false
        leader1health += support1supportrating + rosabonushealamount + 4000;
        support1focuscharge -= 3
        support1charge3active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();

}
    if (support1charge4active == true){
        support1nochargeactive = false
        support1health += support1supportrating + rosabonushealamount + 2000;
        support2health += support1supportrating + rosabonushealamount + 2000;
        leader1health += support1supportrating + rosabonushealamount + 5000;
        leader2health += support1supportrating + rosabonushealamount + 2000;
        fighter1health += support1supportrating + rosabonushealamount + 2000;
        fighter2health += support1supportrating + rosabonushealamount + 2000;
        fighter3health += support1supportrating + rosabonushealamount + 2000;
        fighter4health += support1supportrating + rosabonushealamount + 2000;
        fighter5health += support1supportrating + rosabonushealamount + 2000;
        fighter6health += support1supportrating + rosabonushealamount + 2000;
        support1focuscharge -= 4
        support1charge4active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();
        support1focuschargebox4.clearTint();

}
if (support1charge5active == true){
        support1nochargeactive = false
        support1health += support1supportrating + rosabonushealamount + 3000;
        support2health += support1supportrating + rosabonushealamount + 3000;
        leader1health += support1supportrating + rosabonushealamount + 6000;
        leader2health += support1supportrating + rosabonushealamount + 3000;
        fighter1health += support1supportrating + rosabonushealamount + 3000;
        fighter2health += support1supportrating + rosabonushealamount + 3000;
        fighter3health += support1supportrating + rosabonushealamount + 3000;
        fighter4health += support1supportrating + rosabonushealamount + 3000;
        fighter5health += support1supportrating + rosabonushealamount + 3000;
        fighter6health += support1supportrating + rosabonushealamount + 3000;
        support1focuscharge -= 5
        support1charge5active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();
        support1focuschargebox4.clearTint();
        support1focuschargebox5.clearTint();

}
    if (support1nochargeactive == true){
        leader1health += support1supportrating + rosabonushealamount;
}
if (activesupport1name == 'Rosa'){
support1action = 0
rosaaction = 0
}
if (activesupport2name == 'Rosa'){
support2action = 0
rosaaction = 0
}
}
}
}
         if (rosacancastnow == true){
         if (isrosapickingtarget == true){
         if (isrosacastingheal == true){
        endrosacastnumber = 2 
        rosaspelltargetx = leader1x
        rosaspelltargety = leader1y +50;
        isrosacastingnow = true
        isrosatargetpicked = true
        rosaspells.anims.play('rosahealspell', true);
        
    
     if (support1charge1active == true){
support1nochargeactive = false
        leader1frozen = false
        leader1status = 'normal'
        leader1health += support1supportrating + rosabonushealamount + 1000;
        support1focuscharge -= 1
        support1charge1active = false
        support1focuschargebox1.clearTint();
        
}
     if (support1charge2active == true){
support1nochargeactive = false
        leader1frozen = false
        leader1status = 'normal'
        leader1health += support1supportrating + rosabonushealamount + 2000;
        support1focuscharge -= 2
        support1charge2active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();

}
    if (support1charge3active == true){
support1nochargeactive = false
        leader1frozen = false
        leader1status = 'normal'
        leader2frozen = false
        leader2status = 'normal'
        leader1health += support1supportrating + rosabonushealamount + 3000;
        support1focuscharge -= 3
        support1charge3active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();

}
    if (support1charge4active == true){
support1nochargeactive = false
        leader1frozen = false
        leader1status = 'normal'
        leader2frozen = false
        leader2status = 'normal'
        leader1health += support1supportrating + rosabonushealamount + 3000;
        leader2health += support1supportrating + rosabonushealamount + 3000;

        support1focuscharge -= 4
        support1charge4active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();
        support1focuschargebox4.clearTint();

}
if (support1charge5active == true){
support1nochargeactive = false
        leader1frozen = false
        leader1status = 'normal'
        leader2frozen = false
        leader2status = 'normal'
        support1frozen = false
        support1status = 'normal'
        support2frozen = false
        support2status = 'normal'
        fighter1frozen = false
        fighter1status = 'normal'
        fighter2frozen = false
        fighter2status = 'normal'
        fighter3frozen = false
        fighter3status = 'normal'
        fighter4frozen = false
        fighter4status = 'normal'
        fighter5frozen = false
        fighter5status = 'normal'
        fighter6frozen = false
        fighter6status = 'normal'

        support1health += support1supportrating + rosabonushealamount + 1000;
        support2health += support1supportrating + rosabonushealamount + 1000;
        leader1health += support1supportrating + rosabonushealamount + 4000;
        leader2health += support1supportrating + rosabonushealamount + 4000;
        fighter1health += support1supportrating + rosabonushealamount + 1000;
        fighter2health += support1supportrating + rosabonushealamount + 1000;
        fighter3health += support1supportrating + rosabonushealamount + 1000;
        fighter4health += support1supportrating + rosabonushealamount + 1000;
        fighter5health += support1supportrating + rosabonushealamount + 1000;
        fighter6health += support1supportrating + rosabonushealamount + 1000;
        support1focuscharge -= 5
        support1charge5active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();
        support1focuschargebox4.clearTint();
        support1focuschargebox5.clearTint();

}
    if (support1nochargeactive == true){
        leader1frozen = false
        leader1status = 'normal'
}
if (activesupport1name == 'Rosa'){
support1action = 0
rosaaction = 0
}
if (activesupport2name == 'Rosa'){
support2action = 0
rosaaction = 0
}
}
}
}
         if (rosacancastnow == true){
         if (isrosapickingtarget == true){
         if (isrosacastingfast == true){
         endrosacastnumber = 3
        rosaspelltargetx = leader1x
        rosaspelltargety = leader1y
        isrosacastingnow = true
        isrosatargetpicked = true
        rosaspells.anims.play('rosafastspell', true);
        rosafastbufftime = rosafastbufftimeamount
        rosafastbuffactive = true
        
        

      
     if (support1charge1active == true){
         support1nochargeactive = false
        rosafastbuffstat = 'leader1-1charge'
        leader1actionregen += 1
        support1focuscharge -= 1
        support1charge1active = false
        support1focuschargebox1.clearTint();
        
}
     if (support1charge2active == true){
         support1nochargeactive = false
       rosafastbuffstat = 'leader1-2charge'
        leader1actionregen += 1.5
        support1focuscharge -= 2
        support1charge2active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();

}
    if (support1charge3active == true){
         support1nochargeactive = false
       rosafastbuffstat = 'leader1-3charge'
        leader1actionregen += 2
        support1focuscharge -= 3
        support1charge3active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();

}
    if (support1charge4active == true){
        support1nochargeactive = false
      rosafastbuffstat = 'leader1-4charge'
        leader1actionregen += 2.5
        support1focuscharge -= 4
        support1charge4active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();
        support1focuschargebox4.clearTint();

}
if (support1charge5active == true){
       support1nochargeactive = false
     rosafastbuffstat = 'leader1-5charge'
        leader1actionregen += 3
        leader2actionregen += 1
        support1actionregen += 1
        support2actionregen += 1
        fighter1actionregen += 1
        fighter2actionregen += 1
        fighter3actionregen += 1
        fighter4actionregen += 1
        fighter5actionregen += 1
        fighter6actionregen += 1
        support1focuscharge -= 5
        support1charge5active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();
        support1focuschargebox4.clearTint();
        support1focuschargebox5.clearTint();

}
  if (support1nochargeactive == true){
        rosafastbuffstat = 'leader1-0charge'
        leader1actionregen += 0.5
}
if (activesupport1name == 'Rosa'){
support1action = 0
rosaaction = 0
}
if (activesupport2name == 'Rosa'){
support2action = 0
rosaaction = 0
}
}
}
}
         if (rosacancastnow == true){
         if (isrosapickingtarget == true){
         if (isrosacastingshell == true){
         endrosacastnumber = 3
        rosaspelltargetx = leader1x
        rosaspelltargety = leader1y
        isrosacastingnow = true
        isrosatargetpicked = true
        rosaspells.anims.play('rosashellspell', true);
        rosashellbufftime = rosashellbufftimeamount
        rosashellbuffactive = true
        
        
}
     if (support1charge1active == true){
      
        support1nochargeactive = false
        rosashellbuffstat = 'leader1-1charge'
        leader1defenserating += 35
        support1focuscharge -= 1
        support1charge1active = false
        support1focuschargebox1.clearTint();
        
}
     if (support1charge2active == true){
        support1nochargeactive = false
        rosashellbuffstat = 'leader1-2charge'
        leader1defenserating += 45
        support1focuscharge -= 2
        support1charge2active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();

}
    if (support1charge3active == true){
        support1nochargeactive = false
       rosashellbuffstat = 'leader1-3charge'
        leader1defenserating += 55
        support1focuscharge -= 3
        support1charge3active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();

}
    if (support1charge4active == true){
        support1nochargeactive = false
      rosashellbuffstat = 'leader1-4charge'
        leader1defenserating += 55
        leader2defenserating += 55
        support1focuscharge -= 4
        support1charge4active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();
        support1focuschargebox4.clearTint();

}
if (support1charge5active == true){
       support1nochargeactive = false
    rosashellbuffstat = 'leader1-5charge'
        leader1defenserating += 60
        leader2defenserating += 60
        support1defenserating += 25
        support2defenserating += 25
        fighter1defenserating += 25
        fighter2defenserating += 25
        fighter3defenserating += 25
        fighter4defenserating += 25
        fighter5defenserating += 25
        fighter6defenserating += 25
        support1focuscharge -= 5
        support1charge5active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();
        support1focuschargebox4.clearTint();
        support1focuschargebox5.clearTint();

}
        if (support1nochargeactive == true){
        rosashellbuffstat = 'leader1-0charge'
        leader1defenserating += 25
}
if (activesupport1name == 'Rosa'){
support1action = 0
rosaaction = 0
}
if (activesupport2name == 'Rosa'){
support2action = 0
rosaaction = 0
}
}
}
}
}

//supportfleader2
function supportfleader2 ()
{
         
         if (leader2alive == true){
         if (rosacancastnow == true){
         if (isrosapickingtarget == true){
         if (isrosacastingcure == true){
        endrosacastnumber = 2
        rosaspelltargetx = leader2x
        rosaspelltargety = leader2y + 50;
        isrosacastingnow = true
        isrosatargetpicked = true
        rosaspells.anims.play('rosacurespell', true);
        
        
   
     if (support1charge1active == true){
        support1nochargeactive = false
        leader2health += support1supportrating + rosabonushealamount + 1000;
        support1focuscharge -= 1
        support1charge1active = false
        support1focuschargebox1.clearTint();
        
}
     if (support1charge2active == true){
        support1nochargeactive = false
        leader2health += support1supportrating + rosabonushealamount + 3000;
        support1focuscharge -= 2
        support1charge2active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();

}
    if (support1charge3active == true){
        support1nochargeactive = false
        leader2health += support1supportrating + rosabonushealamount + 4000;
        support1focuscharge -= 3
        support1charge3active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();

}
    if (support1charge4active == true){
        support1nochargeactive = false
        support1health += support1supportrating + rosabonushealamount + 2000;
        support2health += support1supportrating + rosabonushealamount + 2000;
        leader2health += support1supportrating + rosabonushealamount + 5000;
        leader1health += support1supportrating + rosabonushealamount + 2000;
        fighter1health += support1supportrating + rosabonushealamount + 2000;
        fighter2health += support1supportrating + rosabonushealamount + 2000;
        fighter3health += support1supportrating + rosabonushealamount + 2000;
        fighter4health += support1supportrating + rosabonushealamount + 2000;
        fighter5health += support1supportrating + rosabonushealamount + 2000;
        fighter6health += support1supportrating + rosabonushealamount + 2000;
        support1focuscharge -= 4
        support1charge4active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();
        support1focuschargebox4.clearTint();

}
if (support1charge5active == true){
        support1nochargeactive = false
        support1health += support1supportrating + rosabonushealamount + 3000;
        support2health += support1supportrating + rosabonushealamount + 3000;
        leader2health += support1supportrating + rosabonushealamount + 6000;
        leader1health += support1supportrating + rosabonushealamount + 3000;
        fighter1health += support1supportrating + rosabonushealamount + 3000;
        fighter2health += support1supportrating + rosabonushealamount + 3000;
        fighter3health += support1supportrating + rosabonushealamount + 3000;
        fighter4health += support1supportrating + rosabonushealamount + 3000;
        fighter5health += support1supportrating + rosabonushealamount + 3000;
        fighter6health += support1supportrating + rosabonushealamount + 3000;
        support1focuscharge -= 5
        support1charge5active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();
        support1focuschargebox4.clearTint();
        support1focuschargebox5.clearTint();

}
     if (support1nochargeactive == true){
        leader2health += support1supportrating + rosabonushealamount;
}
if (activesupport1name == 'Rosa'){
support1action = 0
rosaaction = 0
}
if (activesupport2name == 'Rosa'){
support2action = 0
rosaaction = 0
}
}
}
}
         if (rosacancastnow == true){
         if (isrosapickingtarget == true){
         if (isrosacastingheal == true){
        endrosacastnumber = 2 
        rosaspelltargetx = leader2x
        rosaspelltargety = leader2y +50;
        isrosacastingnow = true
        isrosatargetpicked = true
        rosaspells.anims.play('rosahealspell', true);
   
     if (support1charge1active == true){
        support1nochargeactive = false
        leader2frozen = false
        leader2status = 'normal'
        leader2health += support1supportrating + rosabonushealamount + 1000;
        support1focuscharge -= 1
        support1charge1active = false
        support1focuschargebox1.clearTint();
        
}
     if (support1charge2active == true){
        support1nochargeactive = false
        leader2frozen = false
        leader2status = 'normal'
        leader2health += support1supportrating + rosabonushealamount + 2000;
        support1focuscharge -= 2
        support1charge2active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();

}
    if (support1charge3active == true){
        support1nochargeactive = false
        leader2frozen = false
        leader2status = 'normal'
        leader1frozen = false
        leader1status = 'normal'
        leader2health += support1supportrating + rosabonushealamount + 3000;
        support1focuscharge -= 3
        support1charge3active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();

}
    if (support1charge4active == true){
        support1nochargeactive = false
        leader2frozen = false
        leader2status = 'normal'
        leader1frozen = false
        leader1status = 'normal'
        leader2health += support1supportrating + rosabonushealamount + 3000;
        leader1health += support1supportrating + rosabonushealamount + 3000;

        support1focuscharge -= 4
        support1charge4active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();
        support1focuschargebox4.clearTint();

}
if (support1charge5active == true){
        support1nochargeactive = false
        leader2frozen = false
        leader2status = 'normal'
        leader1frozen = false
        leader1status = 'normal'
        support1frozen = false
        support1status = 'normal'
        support2frozen = false
        support2status = 'normal'
        fighter1frozen = false
        fighter1status = 'normal'
        fighter2frozen = false
        fighter2status = 'normal'
        fighter3frozen = false
        fighter3status = 'normal'
        fighter4frozen = false
        fighter4status = 'normal'
        fighter5frozen = false
        fighter5status = 'normal'
        fighter6frozen = false
        fighter6status = 'normal'

        support1health += support1supportrating + rosabonushealamount + 1000;
        support2health += support1supportrating + rosabonushealamount + 1000;
        leader2health += support1supportrating + rosabonushealamount + 4000;
        leader1health += support1supportrating + rosabonushealamount + 4000;
        fighter1health += support1supportrating + rosabonushealamount + 1000;
        fighter2health += support1supportrating + rosabonushealamount + 1000;
        fighter3health += support1supportrating + rosabonushealamount + 1000;
        fighter4health += support1supportrating + rosabonushealamount + 1000;
        fighter5health += support1supportrating + rosabonushealamount + 1000;
        fighter6health += support1supportrating + rosabonushealamount + 1000;
        support1focuscharge -= 5
        support1charge5active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();
        support1focuschargebox4.clearTint();
        support1focuschargebox5.clearTint();

}
     if (support1nochargeactive == true){
        leader2frozen = false
        leader2status = 'normal'
}
if (activesupport1name == 'Rosa'){
support1action = 0
rosaaction = 0
}
if (activesupport2name == 'Rosa'){
support2action = 0
rosaaction = 0
}
}
}
}
         if (rosacancastnow == true){
         if (isrosapickingtarget == true){
         if (isrosacastingfast == true){
         endrosacastnumber = 3
        rosaspelltargetx = leader2x
        rosaspelltargety = leader2y
        isrosacastingnow = true
        isrosatargetpicked = true
        rosaspells.anims.play('rosafastspell', true);
        rosafastbufftime = rosafastbufftimeamount
        rosafastbuffactive = true
        

      
     if (support1charge1active == true){
         support1nochargeactive = false
        rosafastbuffstat = 'leader2-1charge'
        leader2actionregen += 1
        support1focuscharge -= 1
        support1charge1active = false
        support1focuschargebox1.clearTint();
        
}
     if (support1charge2active == true){
         support1nochargeactive = false
       rosafastbuffstat = 'leader2-2charge'
        leader2actionregen += 1.5
        support1focuscharge -= 2
        support1charge2active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();

}
    if (support1charge3active == true){
         support1nochargeactive = false
       rosafastbuffstat = 'leader2-3charge'
        leader2actionregen += 2
        support1focuscharge -= 3
        support1charge3active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();

}
    if (support1charge4active == true){
        support1nochargeactive = false
      rosafastbuffstat = 'leader2-4charge'
        leader2actionregen += 2.5
        support1focuscharge -= 4
        support1charge4active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();
        support1focuschargebox4.clearTint();

}
if (support1charge5active == true){
       support1nochargeactive = false
     rosafastbuffstat = 'leader2-5charge'
        leader2actionregen += 3
        leader1actionregen += 1
        support1actionregen += 1
        support2actionregen += 1
        fighter1actionregen += 1
        fighter2actionregen += 1
        fighter3actionregen += 1
        fighter4actionregen += 1
        fighter5actionregen += 1
        fighter6actionregen += 1
        support1focuscharge -= 5
        support1charge5active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();
        support1focuschargebox4.clearTint();
        support1focuschargebox5.clearTint();

}
  if (support1nochargeactive == true){
        rosafastbuffstat = 'leader2-0charge'
        leader2actionregen += 0.5
}
if (activesupport1name == 'Rosa'){
support1action = 0
rosaaction = 0
}
if (activesupport2name == 'Rosa'){
support2action = 0
rosaaction = 0
}
}
}
}
         if (rosacancastnow == true){
         if (isrosapickingtarget == true){
         if (isrosacastingshell == true){
         endrosacastnumber = 3
        rosaspelltargetx = leader2x
        rosaspelltargety = leader2y
        isrosacastingnow = true
        isrosatargetpicked = true
        rosaspells.anims.play('rosashellspell', true);
        rosashellbufftime = rosashellbufftimeamount
        rosashellbuffactive = true
        
}
     if (support1charge1active == true){
      
        support1nochargeactive = false
        rosashellbuffstat = 'leader2-1charge'
        leader2defenserating += 35
        support1focuscharge -= 1
        support1charge1active = false
        support1focuschargebox1.clearTint();
        
}
     if (support1charge2active == true){
        support1nochargeactive = false
        rosashellbuffstat = 'leader2-2charge'
        leader2defenserating += 45
        support1focuscharge -= 2
        support1charge2active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();

}
    if (support1charge3active == true){
        support1nochargeactive = false
       rosashellbuffstat = 'leader2-3charge'
        leader2defenserating += 55
        support1focuscharge -= 3
        support1charge3active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();

}
    if (support1charge4active == true){
        support1nochargeactive = false
      rosashellbuffstat = 'leader2-4charge'
        leader2defenserating += 55
        leader1defenserating += 55
        support1focuscharge -= 4
        support1charge4active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();
        support1focuschargebox4.clearTint();

}
if (support1charge5active == true){
       support1nochargeactive = false
    rosashellbuffstat = 'leader2-5charge'
        leader2defenserating += 60
        leader1defenserating += 60
        support1defenserating += 25
        support2defenserating += 25
        fighter1defenserating += 25
        fighter2defenserating += 25
        fighter3defenserating += 25
        fighter4defenserating += 25
        fighter5defenserating += 25
        fighter6defenserating += 25
        support1focuscharge -= 5
        support1charge5active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();
        support1focuschargebox4.clearTint();
        support1focuschargebox5.clearTint();

}
        if (support1nochargeactive == true){
        rosashellbuffstat = 'leader2-0charge'
        leader2defenserating += 25
}
if (activesupport1name == 'Rosa'){
support1action = 0
rosaaction = 0
}
if (activesupport2name == 'Rosa'){
support2action = 0
rosaaction = 0
}
}
}
}
}

//supportf
//supportfsupport1
function supportfsupport1 ()
{
         
         if (support1alive == true){
         if (rosacancastnow == true){
         if (isrosapickingtarget == true){
         if (isrosacastingcure == true){
        endrosacastnumber = 2
        rosaspelltargetx = support1x
        rosaspelltargety = support1y + 50;
        isrosacastingnow = true
        isrosatargetpicked = true
        rosaspells.anims.play('rosacurespell', true);
        
        
        
     if (support1charge1active == true){
        support1nochargeactive = false
        support1health += support1supportrating + rosabonushealamount + 1000;
        support1focuscharge -= 1
        support1charge1active = false
        support1focuschargebox1.clearTint();
        
}
     if (support1charge2active == true){
        support1nochargeactive = false
        support1health += support1supportrating + rosabonushealamount + 3000;
        support1focuscharge -= 2
        support1charge2active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();

}
    if (support1charge3active == true){
        support1nochargeactive = false
        support1health += support1supportrating + rosabonushealamount + 4000;
        support1focuscharge -= 3
        support1charge3active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();

}
    if (support1charge4active == true){
        support1nochargeactive = false
        leader1health += support1supportrating + rosabonushealamount + 2000;
        leader2health += support1supportrating + rosabonushealamount + 2000;
        support1health += support1supportrating + rosabonushealamount + 5000;
        support2health += support1supportrating + rosabonushealamount + 2000;
        fighter1health += support1supportrating + rosabonushealamount + 2000;
        fighter2health += support1supportrating + rosabonushealamount + 2000;
        fighter3health += support1supportrating + rosabonushealamount + 2000;
        fighter4health += support1supportrating + rosabonushealamount + 2000;
        fighter5health += support1supportrating + rosabonushealamount + 2000;
        fighter6health += support1supportrating + rosabonushealamount + 2000;
        support1focuscharge -= 4
        support1charge4active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();
        support1focuschargebox4.clearTint();

}
if (support1charge5active == true){
        support1nochargeactive = false
        leader1health += support1supportrating + rosabonushealamount + 3000;
        leader2health += support1supportrating + rosabonushealamount + 3000;
        support1health += support1supportrating + rosabonushealamount + 6000;
        support2health += support1supportrating + rosabonushealamount + 3000;
        fighter1health += support1supportrating + rosabonushealamount + 3000;
        fighter2health += support1supportrating + rosabonushealamount + 3000;
        fighter3health += support1supportrating + rosabonushealamount + 3000;
        fighter4health += support1supportrating + rosabonushealamount + 3000;
        fighter5health += support1supportrating + rosabonushealamount + 3000;
        fighter6health += support1supportrating + rosabonushealamount + 3000;
        support1focuscharge -= 5
        support1charge5active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();
        support1focuschargebox4.clearTint();
        support1focuschargebox5.clearTint();

}
if (support1nochargeactive == true){
        support1health += support1supportrating + rosabonushealamount;
}
if (activesupport1name == 'Rosa'){
support1action = 0
rosaaction = 0
}
if (activesupport2name == 'Rosa'){
support2action = 0
rosaaction = 0
}
}
}
}
         if (rosacancastnow == true){
         if (isrosapickingtarget == true){
         if (isrosacastingheal == true){
        endrosacastnumber = 2 
        rosaspelltargetx = support1x
        rosaspelltargety = support1y +50;
        isrosacastingnow = true
        isrosatargetpicked = true
        rosaspells.anims.play('rosahealspell', true);

     if (support1charge1active == true){
        support1nochargeactive = false
        support1frozen = false
        support1status = 'normal'
        support1health += support1supportrating + rosabonushealamount + 1000;
        support1focuscharge -= 1
        support1charge1active = false
        support1focuschargebox1.clearTint();
        
}
     if (support1charge2active == true){
        support1nochargeactive = false
        support1frozen = false
        support1status = 'normal'
        support1health += support1supportrating + rosabonushealamount + 2000;
        support1focuscharge -= 2
        support1charge2active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();

}
    if (support1charge3active == true){
        support1nochargeactive = false
        support1frozen = false
        support1status = 'normal'
        support2frozen = false
        support2status = 'normal'
        support1health += support1supportrating + rosabonushealamount + 3000;
        support1focuscharge -= 3
        support1charge3active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();

}
    if (support1charge4active == true){
        support1nochargeactive = false
        support1frozen = false
        support1status = 'normal'
        support2frozen = false
        support2status = 'normal'
        support1health += support1supportrating + rosabonushealamount + 3000;
        support2health += support1supportrating + rosabonushealamount + 3000;

        support1focuscharge -= 4
        support1charge4active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();
        support1focuschargebox4.clearTint();

}
if (support1charge5active == true){
        support1nochargeactive = false
        leader1frozen = false
        leader1status = 'normal'
        leader2frozen = false
        leader2status = 'normal'
        support1frozen = false
        support1status = 'normal'
        support2frozen = false
        support2status = 'normal'
        fighter1frozen = false
        fighter1status = 'normal'
        fighter2frozen = false
        fighter2status = 'normal'
        fighter3frozen = false
        fighter3status = 'normal'
        fighter4frozen = false
        fighter4status = 'normal'
        fighter5frozen = false
        fighter5status = 'normal'
        fighter6frozen = false
        fighter6status = 'normal'

        leader1health += support1supportrating + rosabonushealamount + 1000;
        leader2health += support1supportrating + rosabonushealamount + 1000;
        support1health += support1supportrating + rosabonushealamount + 4000;
        support2health += support1supportrating + rosabonushealamount + 4000;
        fighter1health += support1supportrating + rosabonushealamount + 1000;
        fighter2health += support1supportrating + rosabonushealamount + 1000;
        fighter3health += support1supportrating + rosabonushealamount + 1000;
        fighter4health += support1supportrating + rosabonushealamount + 1000;
        fighter5health += support1supportrating + rosabonushealamount + 1000;
        fighter6health += support1supportrating + rosabonushealamount + 1000;
        support1focuscharge -= 5
        support1charge5active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();
        support1focuschargebox4.clearTint();
        support1focuschargebox5.clearTint();

}
        if (support1nochargeactive == true){
        support1frozen = false
        support1status = 'normal'
}
if (activesupport1name == 'Rosa'){
support1action = 0
rosaaction = 0
}
if (activesupport2name == 'Rosa'){
support2action = 0
rosaaction = 0
}
}
}
}
         if (rosacancastnow == true){
         if (isrosapickingtarget == true){
         if (isrosacastingfast == true){
         endrosacastnumber = 3
        rosaspelltargetx = support1x
        rosaspelltargety = support1y
        isrosacastingnow = true
        isrosatargetpicked = true
        rosaspells.anims.play('rosafastspell', true);
        rosafastbufftime = rosafastbufftimeamount
        rosafastbuffactive = true
        

      
     if (support1charge1active == true){
         support1nochargeactive = false
        rosafastbuffstat = 'support1-1charge'
        support1actionregen += 1
        support1focuscharge -= 1
        support1charge1active = false
        support1focuschargebox1.clearTint();
        
}
     if (support1charge2active == true){
         support1nochargeactive = false
       rosafastbuffstat = 'support1-2charge'
        support1actionregen += 1.5
        support1focuscharge -= 2
        support1charge2active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();

}
    if (support1charge3active == true){
         support1nochargeactive = false
       rosafastbuffstat = 'support1-3charge'
        support1actionregen += 2
        support1focuscharge -= 3
        support1charge3active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();

}
    if (support1charge4active == true){
        support1nochargeactive = false
      rosafastbuffstat = 'support1-4charge'
        support1actionregen += 2.5
        support1focuscharge -= 4
        support1charge4active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();
        support1focuschargebox4.clearTint();

}
if (support1charge5active == true){
       support1nochargeactive = false
     rosafastbuffstat = 'support1-5charge'
        support1actionregen += 3
        support2actionregen += 1
        leader1actionregen += 1
        leader2actionregen += 1
        fighter1actionregen += 1
        fighter2actionregen += 1
        fighter3actionregen += 1
        fighter4actionregen += 1
        fighter5actionregen += 1
        fighter6actionregen += 1
        support1focuscharge -= 5
        support1charge5active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();
        support1focuschargebox4.clearTint();
        support1focuschargebox5.clearTint();

}
  if (support1nochargeactive == true){
        rosafastbuffstat = 'support1-0charge'
        support1actionregen += 0.5
}
if (activesupport1name == 'Rosa'){
support1action = 0
rosaaction = 0
}
if (activesupport2name == 'Rosa'){
support2action = 0
rosaaction = 0
}
}
}
}
         if (rosacancastnow == true){
         if (isrosapickingtarget == true){
         if (isrosacastingshell == true){
         endrosacastnumber = 3
        rosaspelltargetx = support1x
        rosaspelltargety = support1y
        isrosacastingnow = true
        isrosatargetpicked = true
        rosaspells.anims.play('rosashellspell', true);
        rosashellbufftime = rosashellbufftimeamount
        rosashellbuffactive = true
        
}
     if (support1charge1active == true){
      
        support1nochargeactive = false
        rosashellbuffstat = 'support1-1charge'
        support1defenserating += 35
        support1focuscharge -= 1
        support1charge1active = false
        support1focuschargebox1.clearTint();
        
}
     if (support1charge2active == true){
        support1nochargeactive = false
        rosashellbuffstat = 'support1-2charge'
        support1defenserating += 45
        support1focuscharge -= 2
        support1charge2active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();

}
    if (support1charge3active == true){
        support1nochargeactive = false
       rosashellbuffstat = 'support1-3charge'
        support1defenserating += 55
        support1focuscharge -= 3
        support1charge3active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();

}
    if (support1charge4active == true){
        support1nochargeactive = false
      rosashellbuffstat = 'support1-4charge'
        support1defenserating += 55
        support2defenserating += 55
        support1focuscharge -= 4
        support1charge4active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();
        support1focuschargebox4.clearTint();

}
if (support1charge5active == true){
       support1nochargeactive = false
    rosashellbuffstat = 'support1-5charge'
        support1defenserating += 60
        support2defenserating += 60
        leader1defenserating += 25
        leader2defenserating += 25
        fighter1defenserating += 25
        fighter2defenserating += 25
        fighter3defenserating += 25
        fighter4defenserating += 25
        fighter5defenserating += 25
        fighter6defenserating += 25
        support1focuscharge -= 5
        support1charge5active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();
        support1focuschargebox4.clearTint();
        support1focuschargebox5.clearTint();

}
        if (support1nochargeactive == true){
        rosashellbuffstat = 'support1-0charge'
        support1defenserating += 25
}
if (activesupport1name == 'Rosa'){
support1action = 0
rosaaction = 0
}
if (activesupport2name == 'Rosa'){
support2action = 0
rosaaction = 0
}
}
}
}
}

function supportfsupport2 ()
{
         
         if (support2alive == true){
         if (rosacancastnow == true){
         if (isrosapickingtarget == true){
         if (isrosacastingcure == true){
        endrosacastnumber = 2
        rosaspelltargetx = support2x
        rosaspelltargety = support2y + 50;
        isrosacastingnow = true
        isrosatargetpicked = true
        rosaspells.anims.play('rosacurespell', true);
        

     if (support1charge1active == true){
        support1nochargeactive = false
        support2health += support1supportrating + rosabonushealamount + 1000;
        support1focuscharge -= 1
        support1charge1active = false
        support1focuschargebox1.clearTint();
        
}
     if (support1charge2active == true){
        support1nochargeactive = false
        support2health += support1supportrating + rosabonushealamount + 3000;
        support1focuscharge -= 2
        support1charge2active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();

}
    if (support1charge3active == true){
        support1nochargeactive = false
        support2health += support1supportrating + rosabonushealamount + 4000;
        support1focuscharge -= 3
        support1charge3active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();

}
    if (support1charge4active == true){
        support1nochargeactive = false
        leader1health += support1supportrating + rosabonushealamount + 2000;
        leader2health += support1supportrating + rosabonushealamount + 2000;
        support2health += support1supportrating + rosabonushealamount + 5000;
        support1health += support1supportrating + rosabonushealamount + 2000;
        fighter1health += support1supportrating + rosabonushealamount + 2000;
        fighter2health += support1supportrating + rosabonushealamount + 2000;
        fighter3health += support1supportrating + rosabonushealamount + 2000;
        fighter4health += support1supportrating + rosabonushealamount + 2000;
        fighter5health += support1supportrating + rosabonushealamount + 2000;
        fighter6health += support1supportrating + rosabonushealamount + 2000;
        support1focuscharge -= 4
        support1charge4active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();
        support1focuschargebox4.clearTint();

}
if (support1charge5active == true){
        support1nochargeactive = false
        leader1health += support1supportrating + rosabonushealamount + 3000;
        leader2health += support1supportrating + rosabonushealamount + 3000;
        support2health += support1supportrating + rosabonushealamount + 6000;
        support1health += support1supportrating + rosabonushealamount + 3000;
        fighter1health += support1supportrating + rosabonushealamount + 3000;
        fighter2health += support1supportrating + rosabonushealamount + 3000;
        fighter3health += support1supportrating + rosabonushealamount + 3000;
        fighter4health += support1supportrating + rosabonushealamount + 3000;
        fighter5health += support1supportrating + rosabonushealamount + 3000;
        fighter6health += support1supportrating + rosabonushealamount + 3000;
        support1focuscharge -= 5
        support1charge5active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();
        support1focuschargebox4.clearTint();
        support1focuschargebox5.clearTint();

}
if (support1nochargeactive == true){
     support2health += support1supportrating + rosabonushealamount;  
}
if (activesupport1name == 'Rosa'){
support1action = 0
rosaaction = 0
}
if (activesupport2name == 'Rosa'){
support2action = 0
rosaaction = 0
}
}
}
}
         if (rosacancastnow == true){
         if (isrosapickingtarget == true){
         if (isrosacastingheal == true){
        endrosacastnumber = 2 
        rosaspelltargetx = support2x
        rosaspelltargety = support2y +50;
        isrosacastingnow = true
        isrosatargetpicked = true
        rosaspells.anims.play('rosahealspell', true);
  
     if (support1charge1active == true){
        support1nochargeactive = false
        support2frozen = false
        support2status = 'normal'
        support2health += support1supportrating + rosabonushealamount + 1000;
        support1focuscharge -= 1
        support1charge1active = false
        support1focuschargebox1.clearTint();
        
}
     if (support1charge2active == true){
        support1nochargeactive = false
        support2frozen = false
        support2status = 'normal'
        support2health += support1supportrating + rosabonushealamount + 2000;
        support1focuscharge -= 2
        support1charge2active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();

}
    if (support1charge3active == true){
        support1nochargeactive = false
        support2frozen = false
        support2status = 'normal'
        support1frozen = false
        support1status = 'normal'
        support2health += support1supportrating + rosabonushealamount + 3000;
        support1focuscharge -= 3
        support1charge3active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();

}
    if (support1charge4active == true){
        support1nochargeactive = false
        support2frozen = false
        support2status = 'normal'
        support1frozen = false
        support1status = 'normal'
        support2health += support1supportrating + rosabonushealamount + 3000;
        support1health += support1supportrating + rosabonushealamount + 3000;

        support1focuscharge -= 4
        support1charge4active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();
        support1focuschargebox4.clearTint();

}
if (support1charge5active == true){
       support1nochargeactive = false
        leader1frozen = false
        leader1status = 'normal'
        leader2frozen = false
        leader2status = 'normal'
        support2frozen = false
        support2status = 'normal'
        support1frozen = false
        support1status = 'normal'
        fighter1frozen = false
        fighter1status = 'normal'
        fighter2frozen = false
        fighter2status = 'normal'
        fighter3frozen = false
        fighter3status = 'normal'
        fighter4frozen = false
        fighter4status = 'normal'
        fighter5frozen = false
        fighter5status = 'normal'
        fighter6frozen = false
        fighter6status = 'normal'

        leader1health += support1supportrating + rosabonushealamount + 1000;
        leader2health += support1supportrating + rosabonushealamount + 1000;
        support2health += support1supportrating + rosabonushealamount + 4000;
        support1health += support1supportrating + rosabonushealamount + 4000;
        fighter1health += support1supportrating + rosabonushealamount + 1000;
        fighter2health += support1supportrating + rosabonushealamount + 1000;
        fighter3health += support1supportrating + rosabonushealamount + 1000;
        fighter4health += support1supportrating + rosabonushealamount + 1000;
        fighter5health += support1supportrating + rosabonushealamount + 1000;
        fighter6health += support1supportrating + rosabonushealamount + 1000;
        support1focuscharge -= 5
        support1charge5active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();
        support1focuschargebox4.clearTint();
        support1focuschargebox5.clearTint();

}
if (support1nochargeactive == true){
support2frozen = false
support2status = 'normal'   
}
if (activesupport1name == 'Rosa'){
support1action = 0
rosaaction = 0
}
if (activesupport2name == 'Rosa'){
support2action = 0
rosaaction = 0
}
}
}
}
         if (rosacancastnow == true){
         if (isrosapickingtarget == true){
         if (isrosacastingfast == true){
         endrosacastnumber = 3
        rosaspelltargetx = support2x
        rosaspelltargety = support2y
        isrosacastingnow = true
        isrosatargetpicked = true
        rosaspells.anims.play('rosafastspell', true);
        rosafastbufftime = rosafastbufftimeamount
        rosafastbuffactive = true
        

      
     if (support1charge1active == true){
         support1nochargeactive = false
        rosafastbuffstat = 'support2-1charge'
        support1actionregen += 1
        support1focuscharge -= 1
        support1charge1active = false
        support1focuschargebox1.clearTint();
        
}
     if (support1charge2active == true){
         support1nochargeactive = false
       rosafastbuffstat = 'support2-2charge'
        support2actionregen += 1.5
        support1focuscharge -= 2
        support1charge2active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();

}
    if (support1charge3active == true){
         support2nochargeactive = false
       rosafastbuffstat = 'support2-3charge'
        support2actionregen += 2
        support1focuscharge -= 3
        support1charge3active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();

}
    if (support1charge4active == true){
        support1nochargeactive = false
      rosafastbuffstat = 'support2-4charge'
        support2actionregen += 2.5
        support1focuscharge -= 4
        support1charge4active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();
        support1focuschargebox4.clearTint();

}
if (support1charge5active == true){
       support1nochargeactive = false
     rosafastbuffstat = 'support2-5charge'
        support2actionregen += 3
        support1actionregen += 1
        leader1actionregen += 1
        leader2actionregen += 1
        fighter1actionregen += 1
        fighter2actionregen += 1
        fighter3actionregen += 1
        fighter4actionregen += 1
        fighter5actionregen += 1
        fighter6actionregen += 1
        support1focuscharge -= 5
        support1charge5active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();
        support1focuschargebox4.clearTint();
        support1focuschargebox5.clearTint();

}
  if (support1nochargeactive == true){
        rosafastbuffstat = 'support2-0charge'
        support2actionregen += 0.5
}
if (activesupport1name == 'Rosa'){
support1action = 0
rosaaction = 0
}
if (activesupport2name == 'Rosa'){
support2action = 0
rosaaction = 0
}
}
}
}
         if (rosacancastnow == true){
         if (isrosapickingtarget == true){
         if (isrosacastingshell == true){
         endrosacastnumber = 3
        rosaspelltargetx = support2x
        rosaspelltargety = support2y
        isrosacastingnow = true
        isrosatargetpicked = true
        rosaspells.anims.play('rosashellspell', true);
        rosashellbufftime = rosashellbufftimeamount
        rosashellbuffactive = true
        
}
     if (support1charge1active == true){
      
        support1nochargeactive = false
        rosashellbuffstat = 'support2-1charge'
        support2defenserating += 35
        support1focuscharge -= 1
        support1charge1active = false
        support1focuschargebox1.clearTint();
        
}
     if (support1charge2active == true){
        support1nochargeactive = false
        rosashellbuffstat = 'support2-2charge'
        support2defenserating += 45
        support1focuscharge -= 2
        support1charge2active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();

}
    if (support1charge3active == true){
        support1nochargeactive = false
       rosashellbuffstat = 'support2-3charge'
        support2defenserating += 55
        support1focuscharge -= 3
        support1charge3active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();

}
    if (support1charge4active == true){
        support1nochargeactive = false
      rosashellbuffstat = 'support2-4charge'
        support2defenserating += 55
        support1defenserating += 55
        support1focuscharge -= 4
        support1charge4active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();
        support1focuschargebox4.clearTint();

}
if (support1charge5active == true){
       support1nochargeactive = false
    rosashellbuffstat = 'support2-5charge'
        support2defenserating += 60
        support1defenserating += 60
        leader1defenserating += 25
        leader2defenserating += 25
        fighter1defenserating += 25
        fighter2defenserating += 25
        fighter3defenserating += 25
        fighter4defenserating += 25
        fighter5defenserating += 25
        fighter6defenserating += 25
        support1focuscharge -= 5
        support1charge5active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();
        support1focuschargebox4.clearTint();
        support1focuschargebox5.clearTint();

}
        if (support1nochargeactive == true){
        rosashellbuffstat = 'support2-0charge'
        support2defenserating += 25
}
if (activesupport1name == 'Rosa'){
support1action = 0
rosaaction = 0
}
if (activesupport2name == 'Rosa'){
support2action = 0
rosaaction = 0
}
}
}
}
}


//supportffighter1
function supportffighter1 ()
{
         
         if (fighter1alive == true){
         if (rosacancastnow == true){
         if (isrosapickingtarget == true){
         if (isrosacastingcure == true){
        endrosacastnumber = 2
        rosaspelltargetx = fighter1x
        rosaspelltargety = fighter1y + 50;
        isrosacastingnow = true
        isrosatargetpicked = true
        rosaspells.anims.play('rosacurespell', true);
        
        
    
     if (support1charge1active == true){
       support1nochargeactive = false
        fighter1health += support1supportrating + rosabonushealamount + 1000;
        support1focuscharge -= 1
        support1charge1active = false
        support1focuschargebox1.clearTint();
        
}
     if (support1charge2active == true){
        support1nochargeactive = false
        fighter1health += support1supportrating + rosabonushealamount + 3000;
        support1focuscharge -= 2
        support1charge2active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();

}
    if (support1charge3active == true){
        support1nochargeactive = false
        fighter1health += support1supportrating + rosabonushealamount + 4000;
        support1focuscharge -= 3
        support1charge3active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();

}
    if (support1charge4active == true){
        support1nochargeactive = false
        support1health += support1supportrating + rosabonushealamount + 2000;
        support2health += support1supportrating + rosabonushealamount + 2000;
        fighter1health += support1supportrating + rosabonushealamount + 5000;
        leader2health += support1supportrating + rosabonushealamount + 2000;
        leader1health += support1supportrating + rosabonushealamount + 2000;
        fighter2health += support1supportrating + rosabonushealamount + 2000;
        fighter3health += support1supportrating + rosabonushealamount + 2000;
        fighter4health += support1supportrating + rosabonushealamount + 2000;
        fighter5health += support1supportrating + rosabonushealamount + 2000;
        fighter6health += support1supportrating + rosabonushealamount + 2000;
        support1focuscharge -= 4
        support1charge4active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();
        support1focuschargebox4.clearTint();

}
if (support1charge5active == true){
        support1nochargeactive = false
        support1health += support1supportrating + rosabonushealamount + 3000;
        support2health += support1supportrating + rosabonushealamount + 3000;
        fighter1health += support1supportrating + rosabonushealamount + 6000;
        leader2health += support1supportrating + rosabonushealamount + 3000;
        leader1health += support1supportrating + rosabonushealamount + 3000;
        fighter2health += support1supportrating + rosabonushealamount + 3000;
        fighter3health += support1supportrating + rosabonushealamount + 3000;
        fighter4health += support1supportrating + rosabonushealamount + 3000;
        fighter5health += support1supportrating + rosabonushealamount + 3000;
        fighter6health += support1supportrating + rosabonushealamount + 3000;
        support1focuscharge -= 5
        support1charge5active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();
        support1focuschargebox4.clearTint();
        support1focuschargebox5.clearTint();

}
    if (support1nochargeactive == true){
        fighter1health += support1supportrating + rosabonushealamount;
}
if (activesupport1name == 'Rosa'){
support1action = 0
rosaaction = 0
}
if (activesupport2name == 'Rosa'){
support2action = 0
rosaaction = 0
}
}
}
}
         if (rosacancastnow == true){
         if (isrosapickingtarget == true){
         if (isrosacastingheal == true){
        endrosacastnumber = 2 
        rosaspelltargetx = fighter1x
        rosaspelltargety = fighter1y +50;
        isrosacastingnow = true
        isrosatargetpicked = true
        rosaspells.anims.play('rosahealspell', true);
    
     if (support1charge1active == true){
        support1nochargeactive = false
        fighter1frozen = false
        fighter1status = 'normal'
        fighter1health += support1supportrating + rosabonushealamount + 1000;
        support1focuscharge -= 1
        support1charge1active = false
        support1focuschargebox1.clearTint();
        
}
     if (support1charge2active == true){
        support1nochargeactive = false
        fighter1frozen = false
        fighter1status = 'normal'
        fighter1health += support1supportrating + rosabonushealamount + 2000;
        support1focuscharge -= 2
        support1charge2active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();

}
    if (support1charge3active == true){
support1nochargeactive = false
        fighter1frozen = false
        fighter1status = 'normal'
        leader1frozen = false
        leader1status = 'normal'
        fighter1health += support1supportrating + rosabonushealamount + 3000;
        support1focuscharge -= 3
        support1charge3active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();

}
    if (support1charge4active == true){
support1nochargeactive = false
        fighter1frozen = false
        fighter1status = 'normal'
        leader1frozen = false
        leader1status = 'normal'
        fighter1health += support1supportrating + rosabonushealamount + 3000;
        leader2health += support1supportrating + rosabonushealamount + 3000;

        support1focuscharge -= 4
        support1charge4active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();
        support1focuschargebox4.clearTint();

}
if (support1charge5active == true){
support1nochargeactive = false
        leader1frozen = false
        leader1status = 'normal'
        leader2frozen = false
        leader2status = 'normal'
        support1frozen = false
        support1status = 'normal'
        support2frozen = false
        support2status = 'normal'
        fighter1frozen = false
        fighter1status = 'normal'
        fighter2frozen = false
        fighter2status = 'normal'
        fighter3frozen = false
        fighter3status = 'normal'
        fighter4frozen = false
        fighter4status = 'normal'
        fighter5frozen = false
        fighter5status = 'normal'
        fighter6frozen = false
        fighter6status = 'normal'

        support1health += support1supportrating + rosabonushealamount + 1000;
        support2health += support1supportrating + rosabonushealamount + 1000;
        fighter1health += support1supportrating + rosabonushealamount + 4000;
        leader2health += support1supportrating + rosabonushealamount + 4000;
        leader1health += support1supportrating + rosabonushealamount + 1000;
        fighter2health += support1supportrating + rosabonushealamount + 1000;
        fighter3health += support1supportrating + rosabonushealamount + 1000;
        fighter4health += support1supportrating + rosabonushealamount + 1000;
        fighter5health += support1supportrating + rosabonushealamount + 1000;
        fighter6health += support1supportrating + rosabonushealamount + 1000;
        support1focuscharge -= 5
        support1charge5active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();
        support1focuschargebox4.clearTint();
        support1focuschargebox5.clearTint();

}
    if (support1nochargeactive == true){
        fighter1frozen = false
        fighter1status = 'normal'
}
if (activesupport1name == 'Rosa'){
support1action = 0
rosaaction = 0
}
if (activesupport2name == 'Rosa'){
support2action = 0
rosaaction = 0
}
}
}
}
         if (rosacancastnow == true){
         if (isrosapickingtarget == true){
         if (isrosacastingfast == true){
         endrosacastnumber = 3
        rosaspelltargetx = fighter1x
        rosaspelltargety = fighter1y
        isrosacastingnow = true
        isrosatargetpicked = true
        rosaspells.anims.play('rosafastspell', true);
        rosafastbufftime = rosafastbufftimeamount
        rosafastbuffactive = true
        

      
     if (support1charge1active == true){
         support1nochargeactive = false
        rosafastbuffstat = 'fighter1-1charge'
        fighter1actionregen += 1
        support1focuscharge -= 1
        support1charge1active = false
        support1focuschargebox1.clearTint();
        
}
     if (support1charge2active == true){
         support1nochargeactive = false
       rosafastbuffstat = 'fighter1-2charge'
        fighter1actionregen += 1.5
        support1focuscharge -= 2
        support1charge2active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();

}
    if (support1charge3active == true){
         support1nochargeactive = false
       rosafastbuffstat = 'fighter1-3charge'
        fighter1actionregen += 2
        support1focuscharge -= 3
        support1charge3active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();

}
    if (support1charge4active == true){
        support1nochargeactive = false
      rosafastbuffstat = 'fighter1-4charge'
        fighter1actionregen += 2.5
        support1focuscharge -= 4
        support1charge4active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();
        support1focuschargebox4.clearTint();

}
if (support1charge5active == true){
       support1nochargeactive = false
     rosafastbuffstat = 'fighter1-5charge'
        fighter1actionregen += 3
        leader2actionregen += 1
        support1actionregen += 1
        support2actionregen += 1
        leader1actionregen += 1
        fighter2actionregen += 1
        fighter3actionregen += 1
        fighter4actionregen += 1
        fighter5actionregen += 1
        fighter6actionregen += 1
        support1focuscharge -= 5
        support1charge5active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();
        support1focuschargebox4.clearTint();
        support1focuschargebox5.clearTint();

}
  if (support1nochargeactive == true){
        rosafastbuffstat = 'fighter1-0charge'
        fighter1actionregen += 0.5
}
if (activesupport1name == 'Rosa'){
support1action = 0
rosaaction = 0
}
if (activesupport2name == 'Rosa'){
support2action = 0
rosaaction = 0
}
}
}
}
         if (rosacancastnow == true){
         if (isrosapickingtarget == true){
         if (isrosacastingshell == true){
         endrosacastnumber = 3
        rosaspelltargetx = fighter1x
        rosaspelltargety = fighter1y
        isrosacastingnow = true
        isrosatargetpicked = true
        rosaspells.anims.play('rosashellspell', true);
        rosashellbufftime = rosashellbufftimeamount
        rosashellbuffactive = true
        
}
     if (support1charge1active == true){
      
        support1nochargeactive = false
        rosashellbuffstat = 'fighter1-1charge'
        fighter1defenserating += 35
        support1focuscharge -= 1
        support1charge1active = false
        support1focuschargebox1.clearTint();
        
}
     if (support1charge2active == true){
        support1nochargeactive = false
        rosashellbuffstat = 'fighter1-2charge'
        fighter1defenserating += 45
        support1focuscharge -= 2
        support1charge2active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();

}
    if (support1charge3active == true){
        support1nochargeactive = false
       rosashellbuffstat = 'fighter1-3charge'
        fighter1defenserating += 55
        support1focuscharge -= 3
        support1charge3active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();

}
    if (support1charge4active == true){
        support1nochargeactive = false
      rosashellbuffstat = 'fighter1-4charge'
        fighter1defenserating += 55
        leader1defenserating += 55
        support1focuscharge -= 4
        support1charge4active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();
        support1focuschargebox4.clearTint();

}
if (support1charge5active == true){
       support1nochargeactive = false
    rosashellbuffstat = 'fighter1-5charge'
        fighter1defenserating += 60
        leader1defenserating += 60
        support1defenserating += 25
        support2defenserating += 25
        leader2defenserating += 25
        fighter2defenserating += 25
        fighter3defenserating += 25
        fighter4defenserating += 25
        fighter5defenserating += 25
        fighter6defenserating += 25
        support1focuscharge -= 5
        support1charge5active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();
        support1focuschargebox4.clearTint();
        support1focuschargebox5.clearTint();

}
        if (support1nochargeactive == true){
        rosashellbuffstat = 'fighter1-0charge'
        fighter1defenserating += 25
}
if (activesupport1name == 'Rosa'){
support1action = 0
rosaaction = 0
}
if (activesupport2name == 'Rosa'){
support2action = 0
rosaaction = 0
}
}
}
}
}

//supportffighter2
function supportffighter2 ()
{
         
         if (fighter2alive == true){
         if (rosacancastnow == true){
         if (isrosapickingtarget == true){
         if (isrosacastingcure == true){
        endrosacastnumber = 2
        rosaspelltargetx = fighter2x
        rosaspelltargety = fighter2y + 50;
        isrosacastingnow = true
        isrosatargetpicked = true
        rosaspells.anims.play('rosacurespell', true);
        
        
    
     if (support1charge1active == true){
       support1nochargeactive = false
        fighter2health += support1supportrating + rosabonushealamount + 1000;
        support1focuscharge -= 1
        support1charge1active = false
        support1focuschargebox1.clearTint();
        
}
     if (support1charge2active == true){
        support1nochargeactive = false
        fighter2health += support1supportrating + rosabonushealamount + 3000;
        support1focuscharge -= 2
        support1charge2active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();

}
    if (support1charge3active == true){
        support1nochargeactive = false
        fighter2health += support1supportrating + rosabonushealamount + 4000;
        support1focuscharge -= 3
        support1charge3active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();

}
    if (support1charge4active == true){
        support1nochargeactive = false
        support1health += support1supportrating + rosabonushealamount + 2000;
        support2health += support1supportrating + rosabonushealamount + 2000;
        fighter2health += support1supportrating + rosabonushealamount + 5000;
        leader2health += support1supportrating + rosabonushealamount + 2000;
        leader1health += support1supportrating + rosabonushealamount + 2000;
        fighter1health += support1supportrating + rosabonushealamount + 2000;
        fighter3health += support1supportrating + rosabonushealamount + 2000;
        fighter4health += support1supportrating + rosabonushealamount + 2000;
        fighter5health += support1supportrating + rosabonushealamount + 2000;
        fighter6health += support1supportrating + rosabonushealamount + 2000;
        support1focuscharge -= 4
        support1charge4active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();
        support1focuschargebox4.clearTint();

}
if (support1charge5active == true){
        support1nochargeactive = false
        support1health += support1supportrating + rosabonushealamount + 3000;
        support2health += support1supportrating + rosabonushealamount + 3000;
        fighter2health += support1supportrating + rosabonushealamount + 6000;
        leader2health += support1supportrating + rosabonushealamount + 3000;
        leader1health += support1supportrating + rosabonushealamount + 3000;
        fighter1health += support1supportrating + rosabonushealamount + 3000;
        fighter3health += support1supportrating + rosabonushealamount + 3000;
        fighter4health += support1supportrating + rosabonushealamount + 3000;
        fighter5health += support1supportrating + rosabonushealamount + 3000;
        fighter6health += support1supportrating + rosabonushealamount + 3000;
        support1focuscharge -= 5
        support1charge5active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();
        support1focuschargebox4.clearTint();
        support1focuschargebox5.clearTint();

}
    if (support1nochargeactive == true){
        fighter2health += support1supportrating + rosabonushealamount;
}
if (activesupport1name == 'Rosa'){
support1action = 0
rosaaction = 0
}
if (activesupport2name == 'Rosa'){
support2action = 0
rosaaction = 0
}
}
}
}
         if (rosacancastnow == true){
         if (isrosapickingtarget == true){
         if (isrosacastingheal == true){
        endrosacastnumber = 2 
        rosaspelltargetx = fighter2x
        rosaspelltargety = fighter2y +50;
        isrosacastingnow = true
        isrosatargetpicked = true
        rosaspells.anims.play('rosahealspell', true);
    
     if (support1charge1active == true){
support1nochargeactive = false
        fighter2frozen = false
        fighter2status = 'normal'
        fighter2health += support1supportrating + rosabonushealamount + 1000;
        support1focuscharge -= 1
        support1charge1active = false
        support1focuschargebox1.clearTint();
        
}
     if (support1charge2active == true){
support1nochargeactive = false
        fighter2frozen = false
        fighter2status = 'normal'
        fighter2health += support1supportrating + rosabonushealamount + 2000;
        support1focuscharge -= 2
        support1charge2active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();

}
    if (support1charge3active == true){
support1nochargeactive = false
        fighter2frozen = false
        fighter2status = 'normal'
        leader1frozen = false
        leader1status = 'normal'
        fighter2health += support1supportrating + rosabonushealamount + 3000;
        support1focuscharge -= 3
        support1charge3active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();

}
    if (support1charge4active == true){
support1nochargeactive = false
        fighter2frozen = false
        fighter2status = 'normal'
        leader1frozen = false
        leader1status = 'normal'
        fighter2health += support1supportrating + rosabonushealamount + 3000;
        leader1health += support1supportrating + rosabonushealamount + 3000;

        support1focuscharge -= 4
        support1charge4active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();
        support1focuschargebox4.clearTint();

}
if (support1charge5active == true){
support1nochargeactive = false
        leader1frozen = false
        leader1status = 'normal'
        leader2frozen = false
        leader2status = 'normal'
        support1frozen = false
        support1status = 'normal'
        support2frozen = false
        support2status = 'normal'
        fighter1frozen = false
        fighter1status = 'normal'
        fighter2frozen = false
        fighter2status = 'normal'
        fighter3frozen = false
        fighter3status = 'normal'
        fighter4frozen = false
        fighter4status = 'normal'
        fighter5frozen = false
        fighter5status = 'normal'
        fighter6frozen = false
        fighter6status = 'normal'

        support1health += support1supportrating + rosabonushealamount + 1000;
        support2health += support1supportrating + rosabonushealamount + 1000;
        fighter2health += support1supportrating + rosabonushealamount + 4000;
        leader1health += support1supportrating + rosabonushealamount + 4000;
        leader2health += support1supportrating + rosabonushealamount + 1000;
        fighter1health += support1supportrating + rosabonushealamount + 1000;
        fighter3health += support1supportrating + rosabonushealamount + 1000;
        fighter4health += support1supportrating + rosabonushealamount + 1000;
        fighter5health += support1supportrating + rosabonushealamount + 1000;
        fighter6health += support1supportrating + rosabonushealamount + 1000;
        support1focuscharge -= 5
        support1charge5active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();
        support1focuschargebox4.clearTint();
        support1focuschargebox5.clearTint();

}
    if (support1nochargeactive == true){
        fighter2frozen = false
        fighter2status = 'normal'
}
if (activesupport1name == 'Rosa'){
support1action = 0
rosaaction = 0
}
if (activesupport2name == 'Rosa'){
support2action = 0
rosaaction = 0
}
}
}
}
         if (rosacancastnow == true){
         if (isrosapickingtarget == true){
         if (isrosacastingfast == true){
         endrosacastnumber = 3
        rosaspelltargetx = fighter2x
        rosaspelltargety = fighter2y
        isrosacastingnow = true
        isrosatargetpicked = true
        rosaspells.anims.play('rosafastspell', true);
        rosafastbufftime = rosafastbufftimeamount
        rosafastbuffactive = true
        

      
     if (support1charge1active == true){
         support1nochargeactive = false
        rosafastbuffstat = 'fighter2-1charge'
        fighter2actionregen += 1
        support1focuscharge -= 1
        support1charge1active = false
        support1focuschargebox1.clearTint();
        
}
     if (support1charge2active == true){
         support1nochargeactive = false
       rosafastbuffstat = 'fighter2-2charge'
        fighter2actionregen += 1.5
        support1focuscharge -= 2
        support1charge2active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();

}
    if (support1charge3active == true){
         support1nochargeactive = false
       rosafastbuffstat = 'fighter2-3charge'
        fighter2actionregen += 2
        support1focuscharge -= 3
        support1charge3active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();

}
    if (support1charge4active == true){
        support1nochargeactive = false
      rosafastbuffstat = 'fighter2-4charge'
        fighter2actionregen += 2.5
        support1focuscharge -= 4
        support1charge4active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();
        support1focuschargebox4.clearTint();

}
if (support1charge5active == true){
       support1nochargeactive = false
     rosafastbuffstat = 'fighter2-5charge'
        fighter2actionregen += 3
        leader2actionregen += 1
        support1actionregen += 1
        support2actionregen += 1
        leader1actionregen += 1
        fighter1actionregen += 1
        fighter3actionregen += 1
        fighter4actionregen += 1
        fighter5actionregen += 1
        fighter6actionregen += 1
        support1focuscharge -= 5
        support1charge5active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();
        support1focuschargebox4.clearTint();
        support1focuschargebox5.clearTint();

}
  if (support1nochargeactive == true){
        rosafastbuffstat = 'fighter2-0charge'
        fighter2actionregen += 0.5
}
if (activesupport1name == 'Rosa'){
support1action = 0
rosaaction = 0
}
if (activesupport2name == 'Rosa'){
support2action = 0
rosaaction = 0
}
}
}
}
         if (rosacancastnow == true){
         if (isrosapickingtarget == true){
         if (isrosacastingshell == true){
         endrosacastnumber = 3
        rosaspelltargetx = fighter2x
        rosaspelltargety = fighter2y
        isrosacastingnow = true
        isrosatargetpicked = true
        rosaspells.anims.play('rosashellspell', true);
        rosashellbufftime = rosashellbufftimeamount
        rosashellbuffactive = true
        
}
     if (support1charge1active == true){
      
        support1nochargeactive = false
        rosashellbuffstat = 'fighter2-1charge'
        fighter2defenserating += 35
        support1focuscharge -= 1
        support1charge1active = false
        support1focuschargebox1.clearTint();
        
}
     if (support1charge2active == true){
        support1nochargeactive = false
        rosashellbuffstat = 'fighter2-2charge'
        fighter2defenserating += 45
        support1focuscharge -= 2
        support1charge2active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();

}
    if (support1charge3active == true){
        support1nochargeactive = false
       rosashellbuffstat = 'fighter2-3charge'
        fighter2defenserating += 55
        support1focuscharge -= 3
        support1charge3active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();

}
    if (support1charge4active == true){
        support1nochargeactive = false
      rosashellbuffstat = 'fighter2-4charge'
        fighter2defenserating += 55
        leader1defenserating += 55
        support1focuscharge -= 4
        support1charge4active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();
        support1focuschargebox4.clearTint();

}
if (support1charge5active == true){
       support1nochargeactive = false
    rosashellbuffstat = 'fighter2-5charge'
        fighter2defenserating += 60
        leader1defenserating += 60
        support1defenserating += 25
        support2defenserating += 25
        leader2defenserating += 25
        fighter1defenserating += 25
        fighter3defenserating += 25
        fighter4defenserating += 25
        fighter5defenserating += 25
        fighter6defenserating += 25
        support1focuscharge -= 5
        support1charge5active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();
        support1focuschargebox4.clearTint();
        support1focuschargebox5.clearTint();

}
        if (support1nochargeactive == true){
        rosashellbuffstat = 'fighter2-0charge'
        fighter2defenserating += 25
}
if (activesupport1name == 'Rosa'){
support1action = 0
rosaaction = 0
}
if (activesupport2name == 'Rosa'){
support2action = 0
rosaaction = 0
}
}
}
}
}
//supportffighter3
function supportffighter3 ()
{
         
         if (fighter3alive == true){
         if (rosacancastnow == true){
         if (isrosapickingtarget == true){
         if (isrosacastingcure == true){
        endrosacastnumber = 2
        rosaspelltargetx = fighter3x
        rosaspelltargety = fighter3y + 50;
        isrosacastingnow = true
        isrosatargetpicked = true
        rosaspells.anims.play('rosacurespell', true);
        
        
    
     if (support1charge1active == true){
       support1nochargeactive = false
        fighter3health += support1supportrating + rosabonushealamount + 1000;
        support1focuscharge -= 1
        support1charge1active = false
        support1focuschargebox1.clearTint();
        
}
     if (support1charge2active == true){
        support1nochargeactive = false
        fighter3health += support1supportrating + rosabonushealamount + 3000;
        support1focuscharge -= 2
        support1charge2active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();

}
    if (support1charge3active == true){
        support1nochargeactive = false
        fighter3health += support1supportrating + rosabonushealamount + 4000;
        support1focuscharge -= 3
        support1charge3active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();

}
    if (support1charge4active == true){
        support1nochargeactive = false
        support1health += support1supportrating + rosabonushealamount + 2000;
        support2health += support1supportrating + rosabonushealamount + 2000;
        fighter3health += support1supportrating + rosabonushealamount + 5000;
        leader2health += support1supportrating + rosabonushealamount + 2000;
        leader1health += support1supportrating + rosabonushealamount + 2000;
        fighter1health += support1supportrating + rosabonushealamount + 2000;
        fighter2health += support1supportrating + rosabonushealamount + 2000;
        fighter4health += support1supportrating + rosabonushealamount + 2000;
        fighter5health += support1supportrating + rosabonushealamount + 2000;
        fighter6health += support1supportrating + rosabonushealamount + 2000;
        support1focuscharge -= 4
        support1charge4active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();
        support1focuschargebox4.clearTint();

}
if (support1charge5active == true){
        support1nochargeactive = false
        support1health += support1supportrating + rosabonushealamount + 3000;
        support2health += support1supportrating + rosabonushealamount + 3000;
        fighter3health += support1supportrating + rosabonushealamount + 6000;
        leader2health += support1supportrating + rosabonushealamount + 3000;
        leader1health += support1supportrating + rosabonushealamount + 3000;
        fighter1health += support1supportrating + rosabonushealamount + 3000;
        fighter2health += support1supportrating + rosabonushealamount + 3000;
        fighter4health += support1supportrating + rosabonushealamount + 3000;
        fighter5health += support1supportrating + rosabonushealamount + 3000;
        fighter6health += support1supportrating + rosabonushealamount + 3000;
        support1focuscharge -= 5
        support1charge5active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();
        support1focuschargebox4.clearTint();
        support1focuschargebox5.clearTint();

}
    if (support1nochargeactive == true){
        fighter3health += support1supportrating + rosabonushealamount;
}
if (activesupport1name == 'Rosa'){
support1action = 0
rosaaction = 0
}
if (activesupport2name == 'Rosa'){
support2action = 0
rosaaction = 0
}
}
}
}
         if (rosacancastnow == true){
         if (isrosapickingtarget == true){
         if (isrosacastingheal == true){
        endrosacastnumber = 2 
        rosaspelltargetx = fighter3x
        rosaspelltargety = fighter3y +50;
        isrosacastingnow = true
        isrosatargetpicked = true
        rosaspells.anims.play('rosahealspell', true);
    
     if (support1charge1active == true){
support1nochargeactive = false
        fighter3frozen = false
        fighter3status = 'normal'
        fighter3health += support1supportrating + rosabonushealamount + 1000;
        support1focuscharge -= 1
        support1charge1active = false
        support1focuschargebox1.clearTint();
        
}
     if (support1charge2active == true){
support1nochargeactive = false
        fighter3frozen = false
        fighter3status = 'normal'
        fighter3health += support1supportrating + rosabonushealamount + 2000;
        support1focuscharge -= 2
        support1charge2active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();

}
    if (support1charge3active == true){
support1nochargeactive = false
        fighter3frozen = false
        fighter3status = 'normal'
        leader1frozen = false
        leader1status = 'normal'
        fighter3health += support1supportrating + rosabonushealamount + 3000;
        support1focuscharge -= 3
        support1charge3active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();

}
    if (support1charge4active == true){
support1nochargeactive = false
        fighter3frozen = false
        fighter3status = 'normal'
        leader1frozen = false
        leader1status = 'normal'
        fighter3health += support1supportrating + rosabonushealamount + 3000;
        leader1health += support1supportrating + rosabonushealamount + 3000;

        support1focuscharge -= 4
        support1charge4active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();
        support1focuschargebox4.clearTint();

}
if (support1charge5active == true){
support1nochargeactive = false
        leader1frozen = false
        leader1status = 'normal'
        leader2frozen = false
        leader2status = 'normal'
        support1frozen = false
        support1status = 'normal'
        support2frozen = false
        support2status = 'normal'
        fighter1frozen = false
        fighter1status = 'normal'
        fighter2frozen = false
        fighter2status = 'normal'
        fighter3frozen = false
        fighter3status = 'normal'
        fighter4frozen = false
        fighter4status = 'normal'
        fighter5frozen = false
        fighter5status = 'normal'
        fighter6frozen = false
        fighter6status = 'normal'

        support1health += support1supportrating + rosabonushealamount + 1000;
        support2health += support1supportrating + rosabonushealamount + 1000;
        fighter3health += support1supportrating + rosabonushealamount + 4000;
        leader1health += support1supportrating + rosabonushealamount + 4000;
        leader2health += support1supportrating + rosabonushealamount + 1000;
        fighter1health += support1supportrating + rosabonushealamount + 1000;
        fighter2health += support1supportrating + rosabonushealamount + 1000;
        fighter4health += support1supportrating + rosabonushealamount + 1000;
        fighter5health += support1supportrating + rosabonushealamount + 1000;
        fighter6health += support1supportrating + rosabonushealamount + 1000;
        support1focuscharge -= 5
        support1charge5active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();
        support1focuschargebox4.clearTint();
        support1focuschargebox5.clearTint();

}
    if (support1nochargeactive == true){
        fighter3frozen = false
        fighter3status = 'normal'
}
if (activesupport1name == 'Rosa'){
support1action = 0
rosaaction = 0
}
if (activesupport2name == 'Rosa'){
support2action = 0
rosaaction = 0
}
}
}
}
         if (rosacancastnow == true){
         if (isrosapickingtarget == true){
         if (isrosacastingfast == true){
         endrosacastnumber = 3
        rosaspelltargetx = fighter3x
        rosaspelltargety = fighter3y
        isrosacastingnow = true
        isrosatargetpicked = true
        rosaspells.anims.play('rosafastspell', true);
        rosafastbufftime = rosafastbufftimeamount
        rosafastbuffactive = true
        

      
     if (support1charge1active == true){
         support1nochargeactive = false
        rosafastbuffstat = 'fighter3-1charge'
        fighter3actionregen += 1
        support1focuscharge -= 1
        support1charge1active = false
        support1focuschargebox1.clearTint();
        
}
     if (support1charge2active == true){
         support1nochargeactive = false
       rosafastbuffstat = 'fighter3-2charge'
        fighter3actionregen += 1.5
        support1focuscharge -= 2
        support1charge2active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();

}
    if (support1charge3active == true){
         support1nochargeactive = false
       rosafastbuffstat = 'fighter3-3charge'
        fighter3actionregen += 2
        support1focuscharge -= 3
        support1charge3active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();

}
    if (support1charge4active == true){
        support1nochargeactive = false
      rosafastbuffstat = 'fighter3-4charge'
        fighter3actionregen += 2.5
        support1focuscharge -= 4
        support1charge4active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();
        support1focuschargebox4.clearTint();

}
if (support1charge5active == true){
       support1nochargeactive = false
     rosafastbuffstat = 'fighter3-5charge'
        fighter3actionregen += 3
        leader2actionregen += 1
        support1actionregen += 1
        support2actionregen += 1
        leader1actionregen += 1
        fighter1actionregen += 1
        fighter2actionregen += 1
        fighter4actionregen += 1
        fighter5actionregen += 1
        fighter6actionregen += 1
        support1focuscharge -= 5
        support1charge5active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();
        support1focuschargebox4.clearTint();
        support1focuschargebox5.clearTint();

}
  if (support1nochargeactive == true){
        rosafastbuffstat = 'fighter3-0charge'
        fighter3actionregen += 0.5
}
if (activesupport1name == 'Rosa'){
support1action = 0
rosaaction = 0
}
if (activesupport2name == 'Rosa'){
support2action = 0
rosaaction = 0
}
}
}
}
         if (rosacancastnow == true){
         if (isrosapickingtarget == true){
         if (isrosacastingshell == true){
         endrosacastnumber = 3
        rosaspelltargetx = fighter3x
        rosaspelltargety = fighter3y
        isrosacastingnow = true
        isrosatargetpicked = true
        rosaspells.anims.play('rosashellspell', true);
        rosashellbufftime = rosashellbufftimeamount
        rosashellbuffactive = true
        
}
     if (support1charge1active == true){
      
        support1nochargeactive = false
        rosashellbuffstat = 'fighter3-1charge'
        fighter3defenserating += 35
        support1focuscharge -= 1
        support1charge1active = false
        support1focuschargebox1.clearTint();
        
}
     if (support1charge2active == true){
        support1nochargeactive = false
        rosashellbuffstat = 'fighter3-2charge'
        fighter3defenserating += 45
        support1focuscharge -= 2
        support1charge2active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();

}
    if (support1charge3active == true){
        support1nochargeactive = false
       rosashellbuffstat = 'fighter3-3charge'
        fighter3defenserating += 55
        support1focuscharge -= 3
        support1charge3active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();

}
    if (support1charge4active == true){
        support1nochargeactive = false
      rosashellbuffstat = 'fighter3-4charge'
        fighter3defenserating += 55
        leader1defenserating += 55
        support1focuscharge -= 4
        support1charge4active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();
        support1focuschargebox4.clearTint();

}
if (support1charge5active == true){
       support1nochargeactive = false
    rosashellbuffstat = 'fighter3-5charge'
        fighter3defenserating += 60
        leader1defenserating += 60
        support1defenserating += 25
        support2defenserating += 25
        leader2defenserating += 25
        fighter1defenserating += 25
        fighter2defenserating += 25
        fighter4defenserating += 25
        fighter5defenserating += 25
        fighter6defenserating += 25
        support1focuscharge -= 5
        support1charge5active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();
        support1focuschargebox4.clearTint();
        support1focuschargebox5.clearTint();

}
        if (support1nochargeactive == true){
        rosashellbuffstat = 'fighter3-0charge'
        fighter3defenserating += 25
}
if (activesupport1name == 'Rosa'){
support1action = 0
rosaaction = 0
}
if (activesupport2name == 'Rosa'){
support2action = 0
rosaaction = 0
}
}
}
}
}

//supportffighter4
function supportffighter4 ()
{
         
         if (fighter4alive == true){
         if (rosacancastnow == true){
         if (isrosapickingtarget == true){
         if (isrosacastingcure == true){
        endrosacastnumber = 2
        rosaspelltargetx = fighter4x
        rosaspelltargety = fighter4y + 50;
        isrosacastingnow = true
        isrosatargetpicked = true
        rosaspells.anims.play('rosacurespell', true);
        
        
    
     if (support1charge1active == true){
       support1nochargeactive = false
        fighter4health += support1supportrating + rosabonushealamount + 1000;
        support1focuscharge -= 1
        support1charge1active = false
        support1focuschargebox1.clearTint();
        
}
     if (support1charge2active == true){
        support1nochargeactive = false
        fighter4health += support1supportrating + rosabonushealamount + 3000;
        support1focuscharge -= 2
        support1charge2active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();

}
    if (support1charge3active == true){
        support1nochargeactive = false
        fighter4health += support1supportrating + rosabonushealamount + 4000;
        support1focuscharge -= 3
        support1charge3active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();

}
    if (support1charge4active == true){
        support1nochargeactive = false
        support1health += support1supportrating + rosabonushealamount + 2000;
        support2health += support1supportrating + rosabonushealamount + 2000;
        fighter4health += support1supportrating + rosabonushealamount + 5000;
        leader2health += support1supportrating + rosabonushealamount + 2000;
        leader1health += support1supportrating + rosabonushealamount + 2000;
        fighter1health += support1supportrating + rosabonushealamount + 2000;
        fighter2health += support1supportrating + rosabonushealamount + 2000;
        fighter3health += support1supportrating + rosabonushealamount + 2000;
        fighter5health += support1supportrating + rosabonushealamount + 2000;
        fighter6health += support1supportrating + rosabonushealamount + 2000;
        support1focuscharge -= 4
        support1charge4active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();
        support1focuschargebox4.clearTint();

}
if (support1charge5active == true){
        support1nochargeactive = false
        support1health += support1supportrating + rosabonushealamount + 3000;
        support2health += support1supportrating + rosabonushealamount + 3000;
        fighter4health += support1supportrating + rosabonushealamount + 6000;
        leader2health += support1supportrating + rosabonushealamount + 3000;
        leader1health += support1supportrating + rosabonushealamount + 3000;
        fighter1health += support1supportrating + rosabonushealamount + 3000;
        fighter2health += support1supportrating + rosabonushealamount + 3000;
        fighter3health += support1supportrating + rosabonushealamount + 3000;
        fighter5health += support1supportrating + rosabonushealamount + 3000;
        fighter6health += support1supportrating + rosabonushealamount + 3000;
        support1focuscharge -= 5
        support1charge5active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();
        support1focuschargebox4.clearTint();
        support1focuschargebox5.clearTint();

}
    if (support1nochargeactive == true){
        fighter4health += support1supportrating + rosabonushealamount;
}
if (activesupport1name == 'Rosa'){
support1action = 0
rosaaction = 0
}
if (activesupport2name == 'Rosa'){
support2action = 0
rosaaction = 0
}
}
}
}
         if (rosacancastnow == true){
         if (isrosapickingtarget == true){
         if (isrosacastingheal == true){
        endrosacastnumber = 2 
        rosaspelltargetx = fighter4x
        rosaspelltargety = fighter4y +50;
        isrosacastingnow = true
        isrosatargetpicked = true
        rosaspells.anims.play('rosahealspell', true);
    
     if (support1charge1active == true){
support1nochargeactive = false
        fighter4frozen = false
        fighter4status = 'normal'
        fighter4health += support1supportrating + rosabonushealamount + 1000;
        support1focuscharge -= 1
        support1charge1active = false
        support1focuschargebox1.clearTint();
        
}
     if (support1charge2active == true){
support1nochargeactive = false
        fighter4frozen = false
        fighter4status = 'normal'
        fighter4health += support1supportrating + rosabonushealamount + 2000;
        support1focuscharge -= 2
        support1charge2active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();

}
    if (support1charge3active == true){
support1nochargeactive = false
        fighter4frozen = false
        fighter4status = 'normal'
        leader1frozen = false
        leader1status = 'normal'
        fighter4health += support1supportrating + rosabonushealamount + 3000;
        support1focuscharge -= 3
        support1charge3active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();

}
    if (support1charge4active == true){
support1nochargeactive = false
        fighter4frozen = false
        fighter4status = 'normal'
        leader1frozen = false
        leader1status = 'normal'
        fighter4health += support1supportrating + rosabonushealamount + 3000;
        leader1health += support1supportrating + rosabonushealamount + 3000;

        support1focuscharge -= 4
        support1charge4active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();
        support1focuschargebox4.clearTint();

}
if (support1charge5active == true){
support1nochargeactive = false
        leader1frozen = false
        leader1status = 'normal'
        leader2frozen = false
        leader2status = 'normal'
        support1frozen = false
        support1status = 'normal'
        support2frozen = false
        support2status = 'normal'
        fighter1frozen = false
        fighter1status = 'normal'
        fighter2frozen = false
        fighter2status = 'normal'
        fighter3frozen = false
        fighter3status = 'normal'
        fighter4frozen = false
        fighter4status = 'normal'
        fighter5frozen = false
        fighter5status = 'normal'
        fighter6frozen = false
        fighter6status = 'normal'

        support1health += support1supportrating + rosabonushealamount + 1000;
        support2health += support1supportrating + rosabonushealamount + 1000;
        fighter4health += support1supportrating + rosabonushealamount + 4000;
        leader1health += support1supportrating + rosabonushealamount + 4000;
        leader2health += support1supportrating + rosabonushealamount + 1000;
        fighter1health += support1supportrating + rosabonushealamount + 1000;
        fighter2health += support1supportrating + rosabonushealamount + 1000;
        fighter3health += support1supportrating + rosabonushealamount + 1000;
        fighter5health += support1supportrating + rosabonushealamount + 1000;
        fighter6health += support1supportrating + rosabonushealamount + 1000;
        support1focuscharge -= 5
        support1charge5active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();
        support1focuschargebox4.clearTint();
        support1focuschargebox5.clearTint();

}
    if (support1nochargeactive == true){
        fighter4frozen = false
        fighter4status = 'normal'
}
if (activesupport1name == 'Rosa'){
support1action = 0
rosaaction = 0
}
if (activesupport2name == 'Rosa'){
support2action = 0
rosaaction = 0
}
}
}
}
         if (rosacancastnow == true){
         if (isrosapickingtarget == true){
         if (isrosacastingfast == true){
         endrosacastnumber = 3
        rosaspelltargetx = fighter4x
        rosaspelltargety = fighter4y
        isrosacastingnow = true
        isrosatargetpicked = true
        rosaspells.anims.play('rosafastspell', true);
        rosafastbufftime = rosafastbufftimeamount
        rosafastbuffactive = true
        

      
     if (support1charge1active == true){
         support1nochargeactive = false
        rosafastbuffstat = 'fighter4-1charge'
        fighter4actionregen += 1
        support1focuscharge -= 1
        support1charge1active = false
        support1focuschargebox1.clearTint();
        
}
     if (support1charge2active == true){
         support1nochargeactive = false
       rosafastbuffstat = 'fighter4-2charge'
        fighter4actionregen += 1.5
        support1focuscharge -= 2
        support1charge2active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();

}
    if (support1charge3active == true){
         support1nochargeactive = false
       rosafastbuffstat = 'fighter4-3charge'
        fighter4actionregen += 2
        support1focuscharge -= 3
        support1charge3active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();

}
    if (support1charge4active == true){
        support1nochargeactive = false
      rosafastbuffstat = 'fighter4-4charge'
        fighter4actionregen += 2.5
        support1focuscharge -= 4
        support1charge4active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();
        support1focuschargebox4.clearTint();

}
if (support1charge5active == true){
       support1nochargeactive = false
     rosafastbuffstat = 'fighter4-5charge'
        fighter4actionregen += 3
        leader2actionregen += 1
        support1actionregen += 1
        support2actionregen += 1
        leader1actionregen += 1
        fighter1actionregen += 1
        fighter2actionregen += 1
        fighter3actionregen += 1
        fighter5actionregen += 1
        fighter6actionregen += 1
        support1focuscharge -= 5
        support1charge5active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();
        support1focuschargebox4.clearTint();
        support1focuschargebox5.clearTint();

}
  if (support1nochargeactive == true){
        rosafastbuffstat = 'fighter4-0charge'
        fighter4actionregen += 0.5
}
if (activesupport1name == 'Rosa'){
support1action = 0
rosaaction = 0
}
if (activesupport2name == 'Rosa'){
support2action = 0
rosaaction = 0
}
}
}
}
         if (rosacancastnow == true){
         if (isrosapickingtarget == true){
         if (isrosacastingshell == true){
         endrosacastnumber = 3
        rosaspelltargetx = fighter4x
        rosaspelltargety = fighter4y
        isrosacastingnow = true
        isrosatargetpicked = true
        rosaspells.anims.play('rosashellspell', true);
        rosashellbufftime = rosashellbufftimeamount
        rosashellbuffactive = true
        
}
     if (support1charge1active == true){
      
        support1nochargeactive = false
        rosashellbuffstat = 'fighter4-1charge'
        fighter4defenserating += 35
        support1focuscharge -= 1
        support1charge1active = false
        support1focuschargebox1.clearTint();
        
}
     if (support1charge2active == true){
        support1nochargeactive = false
        rosashellbuffstat = 'fighter4-2charge'
        fighter4defenserating += 45
        support1focuscharge -= 2
        support1charge2active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();

}
    if (support1charge3active == true){
        support1nochargeactive = false
       rosashellbuffstat = 'fighter4-3charge'
        fighter4defenserating += 55
        support1focuscharge -= 3
        support1charge3active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();

}
    if (support1charge4active == true){
        support1nochargeactive = false
      rosashellbuffstat = 'fighter4-4charge'
        fighter4defenserating += 55
        leader1defenserating += 55
        support1focuscharge -= 4
        support1charge4active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();
        support1focuschargebox4.clearTint();

}
if (support1charge5active == true){
       support1nochargeactive = false
    rosashellbuffstat = 'fighter4-5charge'
        fighter4defenserating += 60
        leader1defenserating += 60
        support1defenserating += 25
        support2defenserating += 25
        leader2defenserating += 25
        fighter1defenserating += 25
        fighter2defenserating += 25
        fighter3defenserating += 25
        fighter5defenserating += 25
        fighter6defenserating += 25
        support1focuscharge -= 5
        support1charge5active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();
        support1focuschargebox4.clearTint();
        support1focuschargebox5.clearTint();

}
        if (support1nochargeactive == true){
        rosashellbuffstat = 'fighter4-0charge'
        fighter4defenserating += 25
}
if (activesupport1name == 'Rosa'){
support1action = 0
rosaaction = 0
}
if (activesupport2name == 'Rosa'){
support2action = 0
rosaaction = 0
}
}
}
}
}

//supportffighter5
function supportffighter5 ()
{
         
         if (fighter5alive == true){
         if (rosacancastnow == true){
         if (isrosapickingtarget == true){
         if (isrosacastingcure == true){
        endrosacastnumber = 2
        rosaspelltargetx = fighter5x
        rosaspelltargety = fighter5y + 50;
        isrosacastingnow = true
        isrosatargetpicked = true
        rosaspells.anims.play('rosacurespell', true);
        
        
    
     if (support1charge1active == true){
       support1nochargeactive = false
        fighter5health += support1supportrating + rosabonushealamount + 1000;
        support1focuscharge -= 1
        support1charge1active = false
        support1focuschargebox1.clearTint();
        
}
     if (support1charge2active == true){
        support1nochargeactive = false
        fighter5health += support1supportrating + rosabonushealamount + 3000;
        support1focuscharge -= 2
        support1charge2active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();

}
    if (support1charge3active == true){
        support1nochargeactive = false
        fighter5health += support1supportrating + rosabonushealamount + 4000;
        support1focuscharge -= 3
        support1charge3active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();

}
    if (support1charge4active == true){
        support1nochargeactive = false
        support1health += support1supportrating + rosabonushealamount + 2000;
        support2health += support1supportrating + rosabonushealamount + 2000;
        fighter5health += support1supportrating + rosabonushealamount + 5000;
        leader2health += support1supportrating + rosabonushealamount + 2000;
        leader1health += support1supportrating + rosabonushealamount + 2000;
        fighter1health += support1supportrating + rosabonushealamount + 2000;
        fighter2health += support1supportrating + rosabonushealamount + 2000;
        fighter3health += support1supportrating + rosabonushealamount + 2000;
        fighter4health += support1supportrating + rosabonushealamount + 2000;
        fighter6health += support1supportrating + rosabonushealamount + 2000;
        support1focuscharge -= 4
        support1charge4active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();
        support1focuschargebox4.clearTint();

}
if (support1charge5active == true){
        support1nochargeactive = false
        support1health += support1supportrating + rosabonushealamount + 3000;
        support2health += support1supportrating + rosabonushealamount + 3000;
        fighter5health += support1supportrating + rosabonushealamount + 6000;
        leader2health += support1supportrating + rosabonushealamount + 3000;
        leader1health += support1supportrating + rosabonushealamount + 3000;
        fighter1health += support1supportrating + rosabonushealamount + 3000;
        fighter2health += support1supportrating + rosabonushealamount + 3000;
        fighter3health += support1supportrating + rosabonushealamount + 3000;
        fighter4health += support1supportrating + rosabonushealamount + 3000;
        fighter6health += support1supportrating + rosabonushealamount + 3000;
        support1focuscharge -= 5
        support1charge5active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();
        support1focuschargebox4.clearTint();
        support1focuschargebox5.clearTint();

}
    if (support1nochargeactive == true){
        fighter5health += support1supportrating + rosabonushealamount;
}
if (activesupport1name == 'Rosa'){
support1action = 0
rosaaction = 0
}
if (activesupport2name == 'Rosa'){
support2action = 0
rosaaction = 0
}
}
}
}
         if (rosacancastnow == true){
         if (isrosapickingtarget == true){
         if (isrosacastingheal == true){
        endrosacastnumber = 2 
        rosaspelltargetx = fighter5x
        rosaspelltargety = fighter5y +50;
        isrosacastingnow = true
        isrosatargetpicked = true
        rosaspells.anims.play('rosahealspell', true);
    
     if (support1charge1active == true){
support1nochargeactive = false
        fighter5frozen = false
        fighter5status = 'normal'
        fighter5health += support1supportrating + rosabonushealamount + 1000;
        support1focuscharge -= 1
        support1charge1active = false
        support1focuschargebox1.clearTint();
        
}
     if (support1charge2active == true){
support1nochargeactive = false
        fighter5frozen = false
        fighter5status = 'normal'
        fighter5health += support1supportrating + rosabonushealamount + 2000;
        support1focuscharge -= 2
        support1charge2active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();

}
    if (support1charge3active == true){
support1nochargeactive = false
        fighter5frozen = false
        fighter5status = 'normal'
        leader1frozen = false
        leader1status = 'normal'
        fighter5health += support1supportrating + rosabonushealamount + 3000;
        support1focuscharge -= 3
        support1charge3active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();

}
    if (support1charge4active == true){
support1nochargeactive = false
        fighter5frozen = false
        fighter5status = 'normal'
        leader1frozen = false
        leader1status = 'normal'
        fighter5health += support1supportrating + rosabonushealamount + 3000;
        leader1health += support1supportrating + rosabonushealamount + 3000;

        support1focuscharge -= 4
        support1charge4active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();
        support1focuschargebox4.clearTint();

}
if (support1charge5active == true){
support1nochargeactive = false
        leader1frozen = false
        leader1status = 'normal'
        leader2frozen = false
        leader2status = 'normal'
        support1frozen = false
        support1status = 'normal'
        support2frozen = false
        support2status = 'normal'
        fighter1frozen = false
        fighter1status = 'normal'
        fighter2frozen = false
        fighter2status = 'normal'
        fighter3frozen = false
        fighter3status = 'normal'
        fighter4frozen = false
        fighter4status = 'normal'
        fighter5frozen = false
        fighter5status = 'normal'
        fighter6frozen = false
        fighter6status = 'normal'

        support1health += support1supportrating + rosabonushealamount + 1000;
        support2health += support1supportrating + rosabonushealamount + 1000;
        fighter5health += support1supportrating + rosabonushealamount + 4000;
        leader1health += support1supportrating + rosabonushealamount + 4000;
        leader2health += support1supportrating + rosabonushealamount + 1000;
        fighter1health += support1supportrating + rosabonushealamount + 1000;
        fighter2health += support1supportrating + rosabonushealamount + 1000;
        fighter3health += support1supportrating + rosabonushealamount + 1000;
        fighter4health += support1supportrating + rosabonushealamount + 1000;
        fighter6health += support1supportrating + rosabonushealamount + 1000;
        support1focuscharge -= 5
        support1charge5active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();
        support1focuschargebox4.clearTint();
        support1focuschargebox5.clearTint();

}
    if (support1nochargeactive == true){
        fighter5frozen = false
        fighter5status = 'normal'
}
if (activesupport1name == 'Rosa'){
support1action = 0
rosaaction = 0
}
if (activesupport2name == 'Rosa'){
support2action = 0
rosaaction = 0
}
}
}
}
         if (rosacancastnow == true){
         if (isrosapickingtarget == true){
         if (isrosacastingfast == true){
         endrosacastnumber = 3
        rosaspelltargetx = fighter5x
        rosaspelltargety = fighter5y
        isrosacastingnow = true
        isrosatargetpicked = true
        rosaspells.anims.play('rosafastspell', true);
        rosafastbufftime = rosafastbufftimeamount
        rosafastbuffactive = true
        

      
     if (support1charge1active == true){
         support1nochargeactive = false
        rosafastbuffstat = 'fighter5-1charge'
        fighter5actionregen += 1
        support1focuscharge -= 1
        support1charge1active = false
        support1focuschargebox1.clearTint();
        
}
     if (support1charge2active == true){
         support1nochargeactive = false
       rosafastbuffstat = 'fighter5-2charge'
        fighter5actionregen += 1.5
        support1focuscharge -= 2
        support1charge2active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();

}
    if (support1charge3active == true){
         support1nochargeactive = false
       rosafastbuffstat = 'fighter5-3charge'
        fighter5actionregen += 2
        support1focuscharge -= 3
        support1charge3active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();

}
    if (support1charge4active == true){
        support1nochargeactive = false
      rosafastbuffstat = 'fighter5-4charge'
        fighter5actionregen += 2.5
        support1focuscharge -= 4
        support1charge4active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();
        support1focuschargebox4.clearTint();

}
if (support1charge5active == true){
       support1nochargeactive = false
     rosafastbuffstat = 'fighter5-5charge'
        fighter5actionregen += 3
        leader2actionregen += 1
        support1actionregen += 1
        support2actionregen += 1
        leader1actionregen += 1
        fighter1actionregen += 1
        fighter2actionregen += 1
        fighter3actionregen += 1
        fighter4actionregen += 1
        fighter6actionregen += 1
        support1focuscharge -= 5
        support1charge5active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();
        support1focuschargebox4.clearTint();
        support1focuschargebox5.clearTint();

}
  if (support1nochargeactive == true){
        rosafastbuffstat = 'fighter5-0charge'
        fighter5actionregen += 0.5
}
if (activesupport1name == 'Rosa'){
support1action = 0
rosaaction = 0
}
if (activesupport2name == 'Rosa'){
support2action = 0
rosaaction = 0
}
}
}
}
         if (rosacancastnow == true){
         if (isrosapickingtarget == true){
         if (isrosacastingshell == true){
         endrosacastnumber = 3
        rosaspelltargetx = fighter5x
        rosaspelltargety = fighter5y
        isrosacastingnow = true
        isrosatargetpicked = true
        rosaspells.anims.play('rosashellspell', true);
        rosashellbufftime = rosashellbufftimeamount
        rosashellbuffactive = true
        
}
     if (support1charge1active == true){
      
        support1nochargeactive = false
        rosashellbuffstat = 'fighter5-1charge'
        fighter5defenserating += 35
        support1focuscharge -= 1
        support1charge1active = false
        support1focuschargebox1.clearTint();
        
}
     if (support1charge2active == true){
        support1nochargeactive = false
        rosashellbuffstat = 'fighter5-2charge'
        fighter5defenserating += 45
        support1focuscharge -= 2
        support1charge2active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();

}
    if (support1charge3active == true){
        support1nochargeactive = false
       rosashellbuffstat = 'fighter5-3charge'
        fighter5defenserating += 55
        support1focuscharge -= 3
        support1charge3active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();

}
    if (support1charge4active == true){
        support1nochargeactive = false
      rosashellbuffstat = 'fighter5-4charge'
        fighter5defenserating += 55
        leader1defenserating += 55
        support1focuscharge -= 4
        support1charge4active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();
        support1focuschargebox4.clearTint();

}
if (support1charge5active == true){
       support1nochargeactive = false
    rosashellbuffstat = 'fighter5-5charge'
        fighter5defenserating += 60
        leader1defenserating += 60
        support1defenserating += 25
        support2defenserating += 25
        leader2defenserating += 25
        fighter1defenserating += 25
        fighter2defenserating += 25
        fighter3defenserating += 25
        fighter4defenserating += 25
        fighter6defenserating += 25
        support1focuscharge -= 5
        support1charge5active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();
        support1focuschargebox4.clearTint();
        support1focuschargebox5.clearTint();

}
        if (support1nochargeactive == true){
        rosashellbuffstat = 'fighter5-0charge'
        fighter5defenserating += 25
}
if (activesupport1name == 'Rosa'){
support1action = 0
rosaaction = 0
}
if (activesupport2name == 'Rosa'){
support2action = 0
rosaaction = 0
}
}
}
}
}

//supportffighter6
function supportffighter6 ()
{
         
         if (fighter6alive == true){
         if (rosacancastnow == true){
         if (isrosapickingtarget == true){
         if (isrosacastingcure == true){
        endrosacastnumber = 2
        rosaspelltargetx = fighter6x
        rosaspelltargety = fighter6y + 50;
        isrosacastingnow = true
        isrosatargetpicked = true
        rosaspells.anims.play('rosacurespell', true);
        
        
    
     if (support1charge1active == true){
       support1nochargeactive = false
        fighter6health += support1supportrating + rosabonushealamount + 1000;
        support1focuscharge -= 1
        support1charge1active = false
        support1focuschargebox1.clearTint();
        
}
     if (support1charge2active == true){
        support1nochargeactive = false
        fighter6health += support1supportrating + rosabonushealamount + 3000;
        support1focuscharge -= 2
        support1charge2active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();

}
    if (support1charge3active == true){
        support1nochargeactive = false
        fighter6health += support1supportrating + rosabonushealamount + 4000;
        support1focuscharge -= 3
        support1charge3active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();

}
    if (support1charge4active == true){
        support1nochargeactive = false
        support1health += support1supportrating + rosabonushealamount + 2000;
        support2health += support1supportrating + rosabonushealamount + 2000;
        fighter6health += support1supportrating + rosabonushealamount + 5000;
        leader2health += support1supportrating + rosabonushealamount + 2000;
        leader1health += support1supportrating + rosabonushealamount + 2000;
        fighter1health += support1supportrating + rosabonushealamount + 2000;
        fighter2health += support1supportrating + rosabonushealamount + 2000;
        fighter3health += support1supportrating + rosabonushealamount + 2000;
        fighter4health += support1supportrating + rosabonushealamount + 2000;
        fighter5health += support1supportrating + rosabonushealamount + 2000;
        support1focuscharge -= 4
        support1charge4active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();
        support1focuschargebox4.clearTint();

}
if (support1charge5active == true){
        support1nochargeactive = false
        support1health += support1supportrating + rosabonushealamount + 3000;
        support2health += support1supportrating + rosabonushealamount + 3000;
        fighter6health += support1supportrating + rosabonushealamount + 6000;
        leader2health += support1supportrating + rosabonushealamount + 3000;
        leader1health += support1supportrating + rosabonushealamount + 3000;
        fighter1health += support1supportrating + rosabonushealamount + 3000;
        fighter2health += support1supportrating + rosabonushealamount + 3000;
        fighter3health += support1supportrating + rosabonushealamount + 3000;
        fighter4health += support1supportrating + rosabonushealamount + 3000;
        fighter5health += support1supportrating + rosabonushealamount + 3000;
        support1focuscharge -= 5
        support1charge5active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();
        support1focuschargebox4.clearTint();
        support1focuschargebox5.clearTint();

}
    if (support1nochargeactive == true){
        fighter6health += support1supportrating + rosabonushealamount;
}
if (activesupport1name == 'Rosa'){
support1action = 0
rosaaction = 0
}
if (activesupport2name == 'Rosa'){
support2action = 0
rosaaction = 0
}
}
}
}
         if (rosacancastnow == true){
         if (isrosapickingtarget == true){
         if (isrosacastingheal == true){
        endrosacastnumber = 2 
        rosaspelltargetx = fighter6x
        rosaspelltargety = fighter6y +50;
        isrosacastingnow = true
        isrosatargetpicked = true
        rosaspells.anims.play('rosahealspell', true);
    
     if (support1charge1active == true){
support1nochargeactive = false
        fighter6frozen = false
        fighter6status = 'normal'
        fighter6health += support1supportrating + rosabonushealamount + 1000;
        support1focuscharge -= 1
        support1charge1active = false
        support1focuschargebox1.clearTint();
        
}
     if (support1charge2active == true){
support1nochargeactive = false
        fighter6frozen = false
        fighter6status = 'normal'
        fighter6health += support1supportrating + rosabonushealamount + 2000;
        support1focuscharge -= 2
        support1charge2active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();

}
    if (support1charge3active == true){
support1nochargeactive = false
        fighter6frozen = false
        fighter6status = 'normal'
        leader1frozen = false
        leader1status = 'normal'
        fighter6health += support1supportrating + rosabonushealamount + 3000;
        support1focuscharge -= 3
        support1charge3active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();

}
    if (support1charge4active == true){
support1nochargeactive = false
        fighter6frozen = false
        fighter6status = 'normal'
        leader1frozen = false
        leader1status = 'normal'
        fighter6health += support1supportrating + rosabonushealamount + 3000;
        leader1health += support1supportrating + rosabonushealamount + 3000;

        support1focuscharge -= 4
        support1charge4active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();
        support1focuschargebox4.clearTint();

}
if (support1charge5active == true){
support1nochargeactive = false
        leader1frozen = false
        leader1status = 'normal'
        leader2frozen = false
        leader2status = 'normal'
        support1frozen = false
        support1status = 'normal'
        support2frozen = false
        support2status = 'normal'
        fighter1frozen = false
        fighter1status = 'normal'
        fighter2frozen = false
        fighter2status = 'normal'
        fighter3frozen = false
        fighter3status = 'normal'
        fighter4frozen = false
        fighter4status = 'normal'
        fighter5frozen = false
        fighter5status = 'normal'
        fighter6frozen = false
        fighter6status = 'normal'

        support1health += support1supportrating + rosabonushealamount + 1000;
        support2health += support1supportrating + rosabonushealamount + 1000;
        fighter6health += support1supportrating + rosabonushealamount + 4000;
        leader1health += support1supportrating + rosabonushealamount + 4000;
        leader2health += support1supportrating + rosabonushealamount + 1000;
        fighter1health += support1supportrating + rosabonushealamount + 1000;
        fighter2health += support1supportrating + rosabonushealamount + 1000;
        fighter3health += support1supportrating + rosabonushealamount + 1000;
        fighter4health += support1supportrating + rosabonushealamount + 1000;
        fighter5health += support1supportrating + rosabonushealamount + 1000;
        support1focuscharge -= 5
        support1charge5active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();
        support1focuschargebox4.clearTint();
        support1focuschargebox5.clearTint();

}
    if (support1nochargeactive == true){
        fighter6frozen = false
        fighter6status = 'normal'
}
if (activesupport1name == 'Rosa'){
support1action = 0
rosaaction = 0
}
if (activesupport2name == 'Rosa'){
support2action = 0
rosaaction = 0
}
}
}
}
         if (rosacancastnow == true){
         if (isrosapickingtarget == true){
         if (isrosacastingfast == true){
         endrosacastnumber = 3
        rosaspelltargetx = fighter6x
        rosaspelltargety = fighter6y
        isrosacastingnow = true
        isrosatargetpicked = true
        rosaspells.anims.play('rosafastspell', true);
        rosafastbufftime = rosafastbufftimeamount
        rosafastbuffactive = true
        

      
     if (support1charge1active == true){
         support1nochargeactive = false
        rosafastbuffstat = 'fighter6-1charge'
        fighter6actionregen += 1
        support1focuscharge -= 1
        support1charge1active = false
        support1focuschargebox1.clearTint();
        
}
     if (support1charge2active == true){
         support1nochargeactive = false
       rosafastbuffstat = 'fighter6-2charge'
        fighter6actionregen += 1.5
        support1focuscharge -= 2
        support1charge2active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();

}
    if (support1charge3active == true){
         support1nochargeactive = false
       rosafastbuffstat = 'fighter6-3charge'
        fighter6actionregen += 2
        support1focuscharge -= 3
        support1charge3active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();

}
    if (support1charge4active == true){
        support1nochargeactive = false
      rosafastbuffstat = 'fighter6-4charge'
        fighter6actionregen += 2.5
        support1focuscharge -= 4
        support1charge4active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();
        support1focuschargebox4.clearTint();

}
if (support1charge5active == true){
       support1nochargeactive = false
     rosafastbuffstat = 'fighter6-5charge'
        fighter6actionregen += 3
        leader2actionregen += 1
        support1actionregen += 1
        support2actionregen += 1
        leader1actionregen += 1
        fighter1actionregen += 1
        fighter2actionregen += 1
        fighter3actionregen += 1
        fighter4actionregen += 1
        fighter5actionregen += 1
        support1focuscharge -= 5
        support1charge5active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();
        support1focuschargebox4.clearTint();
        support1focuschargebox5.clearTint();

}
  if (support1nochargeactive == true){
        rosafastbuffstat = 'fighter6-0charge'
        fighter6actionregen += 0.5
}
if (activesupport1name == 'Rosa'){
support1action = 0
rosaaction = 0
}
if (activesupport2name == 'Rosa'){
support2action = 0
rosaaction = 0
}
}
}
}
         if (rosacancastnow == true){
         if (isrosapickingtarget == true){
         if (isrosacastingshell == true){
         endrosacastnumber = 3
        rosaspelltargetx = fighter6x
        rosaspelltargety = fighter6y
        isrosacastingnow = true
        isrosatargetpicked = true
        rosaspells.anims.play('rosashellspell', true);
        rosashellbufftime = rosashellbufftimeamount
        rosashellbuffactive = true
        
}
     if (support1charge1active == true){
      
        support1nochargeactive = false
        rosashellbuffstat = 'fighter6-1charge'
        fighter6defenserating += 35
        support1focuscharge -= 1
        support1charge1active = false
        support1focuschargebox1.clearTint();
        
}
     if (support1charge2active == true){
        support1nochargeactive = false
        rosashellbuffstat = 'fighter6-2charge'
        fighter6defenserating += 45
        support1focuscharge -= 2
        support1charge2active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();

}
    if (support1charge3active == true){
        support1nochargeactive = false
       rosashellbuffstat = 'fighter6-3charge'
        fighter6defenserating += 55
        support1focuscharge -= 3
        support1charge3active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();

}
    if (support1charge4active == true){
        support1nochargeactive = false
      rosashellbuffstat = 'fighter6-4charge'
        fighter6defenserating += 55
        leader1defenserating += 55
        support1focuscharge -= 4
        support1charge4active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();
        support1focuschargebox4.clearTint();

}
if (support1charge5active == true){
       support1nochargeactive = false
    rosashellbuffstat = 'fighter6-5charge'
        fighter6defenserating += 60
        leader1defenserating += 60
        support1defenserating += 25
        support2defenserating += 25
        leader2defenserating += 25
        fighter1defenserating += 25
        fighter2defenserating += 25
        fighter3defenserating += 25
        fighter4defenserating += 25
        fighter5defenserating += 25
        support1focuscharge -= 5
        support1charge5active = false
        support1focuschargebox1.clearTint();
        support1focuschargebox2.clearTint();
        support1focuschargebox3.clearTint();
        support1focuschargebox4.clearTint();
        support1focuschargebox5.clearTint();

}
        if (support1nochargeactive == true){
        rosashellbuffstat = 'fighter6-0charge'
        fighter6defenserating += 25
}
if (activesupport1name == 'Rosa'){
support1action = 0
rosaaction = 0
}
if (activesupport2name == 'Rosa'){
support2action = 0
rosaaction = 0
}
}
}
}
}

//timer
//timers
//kangattack
//kangonattack
function kangonattack ()
{
if (kangactive == true) {
if (battlemode == true) {
if (iskangattackingflykick == true){
if (iskangattackingnow == true){
    
if (kang.x < kangattacktargetx) {
kang.x += 50 

if (kang.x > kangattacktargetx - 25) {
if (this.leader1name == 'Kang'){
leader1action = 0
kangaction = 0
        if (leader1charge0active == true){
        kangcurrentdamage = kangflykickdamage;
        kangcurrentdamage += kangbonusdamage;
        leader1totaldamage += kangcurrentdamage 
        enemy1health -= kangcurrentdamage;
}
     if (leader1charge1active == true){
        kangcurrentdamage = kangflykickdamage + 1000;
        kangcurrentdamage += kangbonusdamage;
        leader1totaldamage += kangcurrentdamage 
        enemy1health -= kangcurrentdamage;
        leader1focuscharge -= 1
        leader1charge1active = false
        leader1focuschargebox1.clearTint();
        
}
     if (leader1charge2active == true){
        kangcurrentdamage = kangflykickdamage + 2000;
        kangcurrentdamage += kangbonusdamage;
        leader1totaldamage += kangcurrentdamage 
        enemy1health -= kangcurrentdamage;
        leader1focuscharge -= 1
        leader1charge1active = false
        leader1focuschargebox1.clearTint();
        leader1focuscharge -= 2
        leader1charge2active = false
        leader1focuschargebox1.clearTint();
        leader1focuschargebox2.clearTint();

}
    if (leader1charge3active == true){
        kangcurrentdamage = kangflykickdamage + 4000;
        kangcurrentdamage += kangbonusdamage;
        leader1totaldamage += kangcurrentdamage 
        enemy1health -= kangcurrentdamage;
        leader1focuscharge -= 3
        leader1charge3active = false
        leader1focuschargebox1.clearTint();
        leader1focuschargebox2.clearTint();
        leader1focuschargebox3.clearTint();

}
    if (leader1charge4active == true){
        kangcurrentdamage = kangflykickdamage + 5500;
        kangcurrentdamage += kangbonusdamage;
        leader1totaldamage += kangcurrentdamage 
        enemy1health -= kangcurrentdamage;
        leader1focuscharge -= 4
        leader1charge4active = false
        leader1focuschargebox1.clearTint();
        leader1focuschargebox2.clearTint();
        leader1focuschargebox3.clearTint();
        leader1focuschargebox4.clearTint();

}
if (leader1charge5active == true){
        kangcurrentdamage = kangflykickdamage + 7000;
        kangcurrentdamage += kangbonusdamage;
        leader1totaldamage += kangcurrentdamage 
        enemy1health -= kangcurrentdamage;
        leader1focuscharge -= 5
        leader1charge5active = false
        leader1focuschargebox1.clearTint();
        leader1focuschargebox2.clearTint();
        leader1focuschargebox3.clearTint();
        leader1focuschargebox4.clearTint();
        leader1focuschargebox5.clearTint();

}
leader1damagefloatup = true
leader1currentdamage = kangcurrentdamage
actionquenumber -= 1
}
if (this.leader2name == 'Kang'){
leader2action = 0
kangaction = 0
kangcurrentdamage = kangflykickdamage;
kangcurrentdamage += kangbonusdamage;
leader2totaldamage += kangcurrentdamage 
}
kangidle = true
kang.x = 450
iskangattackingflykick = false
kang.setScale(1.4, 1.4);
iskangattackingnow = false
iskangtargetpicked = false
kangbuttonselected = false

}
}
}
}
if (iskangattackingfireball == true){
if (iskangattackingnow == true){
if (kang.x < kangattacktargetx) {
kangspells.visible = true
kangspells.anims.play('kangfireballgr', true);
kangspells.x += 45 

if (kangspells.x > kangattacktargetx - 25) {
kangfireballexplodenumber = 5
iskangfireballexplode = true
if (this.leader1name == 'Kang'){
leader1action = 0
kangaction = 0
        if (leader1charge0active == true){
        kangcurrentdamage = kangfireballdamage;
        kangcurrentdamage += kangbonusdamage;
        leader1totaldamage += kangcurrentdamage 
        enemy1health -= kangcurrentdamage;
}
     if (leader1charge1active == true){
        kangcurrentdamage = kangfireballdamage + 1000;
        kangcurrentdamage += kangbonusdamage;
        leader1totaldamage += kangcurrentdamage 
        enemy1health -= kangcurrentdamage;
        leader1focuscharge -= 1
        leader1charge1active = false
        leader1focuschargebox1.clearTint();
        
}
     if (leader1charge2active == true){
        kangcurrentdamage = kangfireballdamage + 2000;
        kangcurrentdamage += kangbonusdamage;
        leader1totaldamage += kangcurrentdamage 
        enemy1health -= kangcurrentdamage;
        leader1focuscharge -= 1
        leader1charge1active = false
        leader1focuschargebox1.clearTint();
        leader1focuscharge -= 2
        leader1charge2active = false
        leader1focuschargebox1.clearTint();
        leader1focuschargebox2.clearTint();

}
    if (leader1charge3active == true){
        kangcurrentdamage = kangfireballdamage + 4000;
        kangcurrentdamage += kangbonusdamage;
        leader1totaldamage += kangcurrentdamage 
        enemy1health -= kangcurrentdamage;
        leader1focuscharge -= 3
        leader1charge3active = false
        leader1focuschargebox1.clearTint();
        leader1focuschargebox2.clearTint();
        leader1focuschargebox3.clearTint();

}
    if (leader1charge4active == true){
        kangcurrentdamage = kangfireballdamage + 5500;
        kangcurrentdamage += kangbonusdamage;
        leader1totaldamage += kangcurrentdamage 
        enemy1health -= kangcurrentdamage;
        leader1focuscharge -= 4
        leader1charge4active = false
        leader1focuschargebox1.clearTint();
        leader1focuschargebox2.clearTint();
        leader1focuschargebox3.clearTint();
        leader1focuschargebox4.clearTint();

}
if (leader1charge5active == true){
        kangcurrentdamage = kangfireballdamage + 7000;
        kangcurrentdamage += kangbonusdamage;
        leader1totaldamage += kangcurrentdamage 
        enemy1health -= kangcurrentdamage;
        leader1focuscharge -= 5
        leader1charge5active = false
        leader1focuschargebox1.clearTint();
        leader1focuschargebox2.clearTint();
        leader1focuschargebox3.clearTint();
        leader1focuschargebox4.clearTint();
        leader1focuschargebox5.clearTint();

}
leader1damagefloatup = true
leader1currentdamage = kangcurrentdamage
}
if (this.leader2name == 'Kang'){
leader2action = 0
kangaction = 0
kangcurrentdamage = kangfireballdamage;
kangcurrentdamage += kangbonusdamage;
leader2totaldamage += kangcurrentdamage 
enemy1health -= kangcurrentdamage;
}
kangidle = true
iskangattackingfireball = false
iskangattackingnow = false
iskangtargetpicked = false
kangspells.visible = false
kangbuttonselected = false
kangcurrentdamage = 0
actionquenumber -= 1
kang.setScale(1.4, 1.4);
kangspells.setScale(1, 1);
kangspells.x = kang.x
}
}
}
}
if (iskangattackingbicycle == true){
if (iskangattackingnow == true){
if (kang.x < kangattacktargetx - 99) {
kang.anims.play('kangrun', true);
kang.x += 25 

if (kang.x > kangattacktargetx - 100) {
kang.anims.play('kangbicycle', true);
if (this.leader1name == 'Kang'){
leader1action = 0
kangaction = 0
        if (leader1charge0active == true){
        kangcurrentdamage = kangbicycledamage;
        kangcurrentdamage += kangbonusdamage;
        leader1totaldamage += kangcurrentdamage 
        enemy1health -= kangcurrentdamage;
}
     if (leader1charge1active == true){
        kangcurrentdamage = kangbicycledamage + 1000;
        kangcurrentdamage += kangbonusdamage;
        leader1totaldamage += kangcurrentdamage 
        enemy1health -= kangcurrentdamage;
        leader1focuscharge -= 1
        leader1charge1active = false
        leader1focuschargebox1.clearTint();
        
}
     if (leader1charge2active == true){
        kangcurrentdamage = kangbicycledamage + 2000;
        kangcurrentdamage += kangbonusdamage;
        leader1totaldamage += kangcurrentdamage 
        enemy1health -= kangcurrentdamage;
        leader1focuscharge -= 1
        leader1charge1active = false
        leader1focuschargebox1.clearTint();
        leader1focuscharge -= 2
        leader1charge2active = false
        leader1focuschargebox1.clearTint();
        leader1focuschargebox2.clearTint();

}
    if (leader1charge3active == true){
        kangcurrentdamage = kangbicycledamage + 4000;
        kangcurrentdamage += kangbonusdamage;
        leader1totaldamage += kangcurrentdamage 
        enemy1health -= kangcurrentdamage;
        leader1focuscharge -= 3
        leader1charge3active = false
        leader1focuschargebox1.clearTint();
        leader1focuschargebox2.clearTint();
        leader1focuschargebox3.clearTint();

}
    if (leader1charge4active == true){
        kangcurrentdamage = kangbicycledamage + 5500;
        kangcurrentdamage += kangbonusdamage;
        leader1totaldamage += kangcurrentdamage 
        enemy1health -= kangcurrentdamage;
        leader1focuscharge -= 4
        leader1charge4active = false
        leader1focuschargebox1.clearTint();
        leader1focuschargebox2.clearTint();
        leader1focuschargebox3.clearTint();
        leader1focuschargebox4.clearTint();

}
if (leader1charge5active == true){
        kangcurrentdamage = kangbicycledamage + 7000;
        kangcurrentdamage += kangbonusdamage;
        leader1totaldamage += kangcurrentdamage 
        enemy1health -= kangcurrentdamage;
        leader1focuscharge -= 5
        leader1charge5active = false
        leader1focuschargebox1.clearTint();
        leader1focuschargebox2.clearTint();
        leader1focuschargebox3.clearTint();
        leader1focuschargebox4.clearTint();
        leader1focuschargebox5.clearTint();

}
leader1damagefloatup = true
leader1currentdamage = kangcurrentdamage
if (kang.x > kangattacktargetx + 10) {
    kang.x = kangattacktargetx - 100
}
}
if (this.leader2name == 'Kang'){
leader2action = 0
kangaction = 0
kangcurrentdamage = kangbicycledamage;
kangcurrentdamage += kangbonusdamage;
leader2totaldamage += kangcurrentdamage 
enemy1health -= kangcurrentdamage;
}

}
}
}
}
if (iskangattackingdragon == true){
if (iskangattackingnow == true){
if (kang.x < kangattacktargetx) {

kang.anims.play('kangrun', true);
kang.x += 25 

if (kang.x > kangattacktargetx - 1) {
kang.anims.play('kangdragon', true);
if (this.leader1name == 'Kang'){
leader1action = 0
kangaction = 0
        if (leader1charge0active == true){
        kangcurrentdamage = kangdragondamage;
        kangcurrentdamage += kangbonusdamage;
        leader1totaldamage += kangcurrentdamage 
        enemy1health -= kangcurrentdamage;
}
     if (leader1charge1active == true){
        kangcurrentdamage = kangdragondamage + 1000;
        kangcurrentdamage += kangbonusdamage;
        leader1totaldamage += kangcurrentdamage 
        enemy1health -= kangcurrentdamage;
        leader1focuscharge -= 1
        leader1charge1active = false
        leader1focuschargebox1.clearTint();
        
}
     if (leader1charge2active == true){
        kangcurrentdamage = kangdragondamage + 2000;
        kangcurrentdamage += kangbonusdamage;
        leader1totaldamage += kangcurrentdamage 
        enemy1health -= kangcurrentdamage;
        leader1focuscharge -= 1
        leader1charge1active = false
        leader1focuschargebox1.clearTint();
        leader1focuscharge -= 2
        leader1charge2active = false
        leader1focuschargebox1.clearTint();
        leader1focuschargebox2.clearTint();

}
    if (leader1charge3active == true){
        kangcurrentdamage = kangdragondamage + 4000;
        kangcurrentdamage += kangbonusdamage;
        leader1totaldamage += kangcurrentdamage 
        enemy1health -= kangcurrentdamage;
        leader1focuscharge -= 3
        leader1charge3active = false
        leader1focuschargebox1.clearTint();
        leader1focuschargebox2.clearTint();
        leader1focuschargebox3.clearTint();

}
    if (leader1charge4active == true){
        kangcurrentdamage = kangdragondamage + 5500;
        kangcurrentdamage += kangbonusdamage;
        leader1totaldamage += kangcurrentdamage 
        enemy1health -= kangcurrentdamage;
        leader1focuscharge -= 4
        leader1charge4active = false
        leader1focuschargebox1.clearTint();
        leader1focuschargebox2.clearTint();
        leader1focuschargebox3.clearTint();
        leader1focuschargebox4.clearTint();

}
if (leader1charge5active == true){
        kangcurrentdamage = kangdragondamage + 7000;
        kangcurrentdamage += kangbonusdamage;
        leader1totaldamage += kangcurrentdamage 
        enemy1health -= kangcurrentdamage;
        leader1focuscharge -= 5
        leader1charge5active = false
        leader1focuschargebox1.clearTint();
        leader1focuschargebox2.clearTint();
        leader1focuschargebox3.clearTint();
        leader1focuschargebox4.clearTint();
        leader1focuschargebox5.clearTint();

}
leader1damagefloatup = true
leader1currentdamage = kangcurrentdamage
if (kang.x > kangattacktargetx + 10) {
    kang.x = kangattacktargetx - 100
}
}
if (this.leader2name == 'Kang'){
leader2action = 0
kangaction = 0
kangcurrentdamage = kangdragondamage;
kangcurrentdamage += kangbonusdamage;
leader2totaldamage += kangcurrentdamage 
enemy1health -= kangcurrentdamage;
}
}
}
}
}
if (iskangattackingprayer == true){
if (iskangattackingnow == true){
if (kang.x < kangattacktargetx -300 ) {

kang.anims.play('kangrun', true);
kang.x += 25 

if (kang.x > kangattacktargetx - 301) {
iskangprayerboltstrike = true
kang.anims.play('kangprayer', true);
if (this.leader1name == 'Kang'){
leader1action = 0
kangaction = 0

}
if (this.leader2name == 'Kang'){
leader2action = 0
kangaction = 0

}
}
}
}
}
}
}
}

//spinalattack
//spinalonattack
function spinalonattack ()
{
if (spinalactive == true) {
if (battlemode == true) {
if (isspinalattackingslice == true){
if (isspinalattackingnow == true){
if (spinal.x < spinalattacktargetx) {
endspinalattacknumber = 0

spinal.anims.play('spinalrun', true);
spinal.x += 25 

if (spinal.x > spinalattacktargetx - 1) {
spinal.anims.play('spinalslice', true);
if (this.leader1name == 'Spinal'){
leader1action = 0
spinalaction = 0
spinalcurrentdamage = spinalslicedamage;
spinalcurrentdamage += spinalbonusdamage;
leader1totaldamage += spinalcurrentdamage 
enemy1health -= spinalcurrentdamage;
}
if (this.leader2name == 'Spinal'){
leader2action = 0
spinalaction = 0

        if (leader2charge0active == true){
        spinalcurrentdamage = spinalslicedamage;
        spinalcurrentdamage += spinalbonusdamage;
        leader2totaldamage += spinalcurrentdamage 
        enemy1health -= spinalcurrentdamage;
}
     if (leader2charge1active == true){
        spinalcurrentdamage = spinalslicedamage + 1000;
        spinalcurrentdamage += spinalbonusdamage;
        leader2totaldamage += spinalcurrentdamage 
        enemy1health -= spinalcurrentdamage;
        leader2focuscharge -= 1
        leader2charge1active = false
        leader2focuschargebox1.clearTint();
        
}
     if (leader2charge2active == true){
        spinalcurrentdamage = spinalslicedamage + 2000;
        spinalcurrentdamage += spinalbonusdamage;
        leader2totaldamage += spinalcurrentdamage 
        enemy1health -= spinalcurrentdamage;
        leader2focuscharge -= 1
        leader2charge1active = false
        leader2focuschargebox1.clearTint();
        leader2focuscharge -= 2
        leader2charge2active = false
        leader2focuschargebox1.clearTint();
        leader2focuschargebox2.clearTint();

}
    if (leader2charge3active == true){
        spinalcurrentdamage = spinalslicedamage + 4000;
        spinalcurrentdamage += spinalbonusdamage;
        leader2totaldamage += spinalcurrentdamage 
        enemy1health -= spinalcurrentdamage;
        leader2focuscharge -= 3
        leader2charge3active = false
        leader2focuschargebox1.clearTint();
        leader2focuschargebox2.clearTint();
        leader2focuschargebox3.clearTint();

}
    if (leader2charge4active == true){
        spinalcurrentdamage = spinalslicedamage + 5500;
        spinalcurrentdamage += spinalbonusdamage;
        leader2totaldamage += spinalcurrentdamage 
        enemy1health -= spinalcurrentdamage;
        leader2focuscharge -= 4
        leader2charge4active = false
        leader2focuschargebox1.clearTint();
        leader2focuschargebox2.clearTint();
        leader2focuschargebox3.clearTint();
        leader2focuschargebox4.clearTint();

}
if (leader2charge5active == true){
        spinalcurrentdamage = spinalslicedamage + 7000;
        spinalcurrentdamage += spinalbonusdamage;
        leader2totaldamage += spinalcurrentdamage 
        enemy1health -= spinalcurrentdamage;
        leader2focuscharge -= 5
        leader2charge5active = false
        leader2focuschargebox1.clearTint();
        leader2focuschargebox2.clearTint();
        leader2focuschargebox3.clearTint();
        leader2focuschargebox4.clearTint();
        leader2focuschargebox5.clearTint();


}
leader2damagefloatup = true
leader2currentdamage = spinalcurrentdamage
}
}
}
}
}

if (isspinalattackingslash == true){
if (isspinalattackingnow == true){
if (spinal.x < spinalattacktargetx) {

spinal.anims.play('spinalrun', true);
spinal.x += 25 

if (spinal.x > spinalattacktargetx - 1) {
spinal.anims.play('spinalslash', true);
if (this.leader1name == 'Spinal'){
leader1action = 0
spinalaction = 0
spinalcurrentdamage = spinalslashdamage;
spinalcurrentdamage += spinalbonusdamage;
leader1totaldamage += spinalcurrentdamage 
enemy1health -= spinalcurrentdamage;
}
if (this.leader2name == 'Spinal'){
leader2action = 0
spinalaction = 0
        if (leader2charge0active == true){
        spinalcurrentdamage = spinalslashdamage;
        spinalcurrentdamage += spinalbonusdamage;
        leader2totaldamage += spinalcurrentdamage 
        enemy1health -= spinalcurrentdamage;
}
     if (leader2charge1active == true){
        spinalcurrentdamage = spinalslashdamage + 1000;
        spinalcurrentdamage += spinalbonusdamage;
        leader2totaldamage += spinalcurrentdamage 
        enemy1health -= spinalcurrentdamage;
        leader2focuscharge -= 1
        leader2charge1active = false
        leader2focuschargebox1.clearTint();
        
}
     if (leader2charge2active == true){
        spinalcurrentdamage = spinalslashdamage + 2000;
        spinalcurrentdamage += spinalbonusdamage;
        leader2totaldamage += spinalcurrentdamage 
        enemy1health -= spinalcurrentdamage;
        leader2focuscharge -= 1
        leader2charge1active = false
        leader2focuschargebox1.clearTint();
        leader2focuscharge -= 2
        leader2charge2active = false
        leader2focuschargebox1.clearTint();
        leader2focuschargebox2.clearTint();

}
    if (leader2charge3active == true){
        spinalcurrentdamage = spinalslashdamage + 4000;
        spinalcurrentdamage += spinalbonusdamage;
        leader2totaldamage += spinalcurrentdamage 
        enemy1health -= spinalcurrentdamage;
        leader2focuscharge -= 3
        leader2charge3active = false
        leader2focuschargebox1.clearTint();
        leader2focuschargebox2.clearTint();
        leader2focuschargebox3.clearTint();

}
    if (leader2charge4active == true){
        spinalcurrentdamage = spinalslashdamage + 5500;
        spinalcurrentdamage += spinalbonusdamage;
        leader2totaldamage += spinalcurrentdamage 
        enemy1health -= spinalcurrentdamage;
        leader2focuscharge -= 4
        leader2charge4active = false
        leader2focuschargebox1.clearTint();
        leader2focuschargebox2.clearTint();
        leader2focuschargebox3.clearTint();
        leader2focuschargebox4.clearTint();

}
if (leader2charge5active == true){
        spinalcurrentdamage = spinalslashdamage + 7000;
        spinalcurrentdamage += spinalbonusdamage;
        leader2totaldamage += spinalcurrentdamage 
        enemy1health -= spinalcurrentdamage;
        leader2focuscharge -= 5
        leader2charge5active = false
        leader2focuschargebox1.clearTint();
        leader2focuschargebox2.clearTint();
        leader2focuschargebox3.clearTint();
        leader2focuschargebox4.clearTint();
        leader2focuschargebox5.clearTint();

}
leader2damagefloatup = true
leader2currentdamage = spinalcurrentdamage
}
}
}
}
}
if (isspinalattackingbash == true){
if (isspinalattackingnow == true){
if (spinal.x < spinalattacktargetx) {

spinal.anims.play('spinalrun', true);
spinal.x += 25 

if (spinal.x > spinalattacktargetx - 1) {
spinal.anims.play('spinalbash', true);
if (this.leader1name == 'Spinal'){
leader1action = 0
spinalaction = 0
spinalcurrentdamage = spinalbashdamage;
spinalcurrentdamage += spinalbonusdamage;
leader1totaldamage += spinalcurrentdamage 
enemy1health -= spinalcurrentdamage;
}
if (this.leader2name == 'Spinal'){
leader2action = 0
spinalaction = 0
        if (leader2charge0active == true){
        spinalcurrentdamage = spinalbashdamage;
        spinalcurrentdamage += spinalbonusdamage;
        leader2totaldamage += spinalcurrentdamage 
        enemy1health -= spinalcurrentdamage;
}
     if (leader2charge1active == true){
        spinalcurrentdamage = spinalbashdamage + 1000;
        spinalcurrentdamage += spinalbonusdamage;
        leader2totaldamage += spinalcurrentdamage 
        enemy1health -= spinalcurrentdamage;
        leader2focuscharge -= 1
        leader2charge1active = false
        leader2focuschargebox1.clearTint();
        
}
     if (leader2charge2active == true){
        spinalcurrentdamage = spinalbashdamage + 2000;
        spinalcurrentdamage += spinalbonusdamage;
        leader2totaldamage += spinalcurrentdamage 
        enemy1health -= spinalcurrentdamage;
        leader2focuscharge -= 1
        leader2charge1active = false
        leader2focuschargebox1.clearTint();
        leader2focuscharge -= 2
        leader2charge2active = false
        leader2focuschargebox1.clearTint();
        leader2focuschargebox2.clearTint();

}
    if (leader2charge3active == true){
        spinalcurrentdamage = spinalbashdamage + 4000;
        spinalcurrentdamage += spinalbonusdamage;
        leader2totaldamage += spinalcurrentdamage 
        enemy1health -= spinalcurrentdamage;
        leader2focuscharge -= 3
        leader2charge3active = false
        leader2focuschargebox1.clearTint();
        leader2focuschargebox2.clearTint();
        leader2focuschargebox3.clearTint();

}
    if (leader2charge4active == true){
        spinalcurrentdamage = spinalbashdamage + 5500;
        spinalcurrentdamage += spinalbonusdamage;
        leader2totaldamage += spinalcurrentdamage 
        enemy1health -= spinalcurrentdamage;
        leader2focuscharge -= 4
        leader2charge4active = false
        leader2focuschargebox1.clearTint();
        leader2focuschargebox2.clearTint();
        leader2focuschargebox3.clearTint();
        leader2focuschargebox4.clearTint();

}
if (leader2charge5active == true){
        spinalcurrentdamage = spinalbashdamage + 7000;
        spinalcurrentdamage += spinalbonusdamage;
        leader2totaldamage += spinalcurrentdamage 
        enemy1health -= spinalcurrentdamage;
        leader2focuscharge -= 5
        leader2charge5active = false
        leader2focuschargebox1.clearTint();
        leader2focuschargebox2.clearTint();
        leader2focuschargebox3.clearTint();
        leader2focuschargebox4.clearTint();
        leader2focuschargebox5.clearTint();

}
leader2damagefloatup = true
leader2currentdamage = spinalcurrentdamage
}
}
}
}
}
}

if (isspinalattackingblock == true){
if (isspinalattackingnow == true){
if (spinal.x < spinalattacktargetx -200) {

spinal.anims.play('spinalrun', true);
spinal.x += 25 

if (spinal.x > spinalattacktargetx - 201) {
spinal.anims.play('spinalblock', true);
if (this.leader1name == 'Spinal'){
leader1action = 0
spinalaction = 0

}
if (this.leader2name == 'Spinal'){
leader2action = 0
spinalaction = 0

}
}
}
}
}

if (isspinalattackingspike == true){
if (isspinalattackingnow == true){
if (spinal.x < spinalattacktargetx) {

spinal.anims.play('spinalrun', true);
spinal.x += 25 

if (spinal.x > spinalattacktargetx - 1) {
spinal.anims.play('spinalspike', true);
if (this.leader1name == 'Spinal'){
leader1action = 0
spinalaction = 0
spinalcurrentdamage = spinalspikedamage;
spinalcurrentdamage += spinalbonusdamage;
leader1totaldamage += spinalcurrentdamage 
enemy1health -= spinalcurrentdamage;
}
if (this.leader2name == 'Spinal'){
leader2action = 0
spinalaction = 0
        if (leader2charge0active == true){
        spinalcurrentdamage = spinalspikedamage;
        spinalcurrentdamage += spinalbonusdamage;
        leader2totaldamage += spinalcurrentdamage 
        enemy1health -= spinalcurrentdamage;
}
     if (leader2charge1active == true){
        spinalcurrentdamage = spinalspikedamage + 1000;
        spinalcurrentdamage += spinalbonusdamage;
        leader2totaldamage += spinalcurrentdamage 
        enemy1health -= spinalcurrentdamage;
        leader2focuscharge -= 1
        leader2charge1active = false
        leader2focuschargebox1.clearTint();
        
}
     if (leader2charge2active == true){
        spinalcurrentdamage = spinalspikedamage + 2000;
        spinalcurrentdamage += spinalbonusdamage;
        leader2totaldamage += spinalcurrentdamage 
        enemy1health -= spinalcurrentdamage;
        leader2focuscharge -= 1
        leader2charge1active = false
        leader2focuschargebox1.clearTint();
        leader2focuscharge -= 2
        leader2charge2active = false
        leader2focuschargebox1.clearTint();
        leader2focuschargebox2.clearTint();

}
    if (leader2charge3active == true){
        spinalcurrentdamage = spinalspikedamage + 4000;
        spinalcurrentdamage += spinalbonusdamage;
        leader2totaldamage += spinalcurrentdamage 
        enemy1health -= spinalcurrentdamage;
        leader2focuscharge -= 3
        leader2charge3active = false
        leader2focuschargebox1.clearTint();
        leader2focuschargebox2.clearTint();
        leader2focuschargebox3.clearTint();

}
    if (leader2charge4active == true){
        spinalcurrentdamage = spinalspikedamage + 5500;
        spinalcurrentdamage += spinalbonusdamage;
        leader2totaldamage += spinalcurrentdamage 
        enemy1health -= spinalcurrentdamage;
        leader2focuscharge -= 4
        leader2charge4active = false
        leader2focuschargebox1.clearTint();
        leader2focuschargebox2.clearTint();
        leader2focuschargebox3.clearTint();
        leader2focuschargebox4.clearTint();

}
if (leader2charge5active == true){
        spinalcurrentdamage = spinalspikedamage + 7000;
        spinalcurrentdamage += spinalbonusdamage;
        leader2totaldamage += spinalcurrentdamage 
        enemy1health -= spinalcurrentdamage;
        leader2focuscharge -= 5
        leader2charge5active = false
        leader2focuschargebox1.clearTint();
        leader2focuschargebox2.clearTint();
        leader2focuschargebox3.clearTint();
        leader2focuschargebox4.clearTint();
        leader2focuschargebox5.clearTint();

}
leader2damagefloatup = true
leader2currentdamage = spinalcurrentdamage
}
}
}
}
}
}
}


//comboattack
//comboonattack

function comboonattack ()
{
if (comboactive == true) {
if (battlemode == true) {
if (iscomboattackingpunch == true){
if (iscomboattackingnow == true){
if (combo.x < comboattacktargetx) {
endcomboattacknumber = 0

combo.anims.play('comborun', true);
combo.x += 25 

if (combo.x > comboattacktargetx - 1) {
combo.anims.play('combopunch', true);
if (this.leader1name == 'Combo'){
leader1action = 0
comboaction = 0
combocurrentdamage = combopunchdamage;
combocurrentdamage += combobonusdamage;
leader1totaldamage += combocurrentdamage 
enemy1health -= combocurrentdamage;
}
if (this.leader2name == 'Combo'){
leader2action = 0
comboaction = 0
combocurrentdamage = combopunchdamage;
combocurrentdamage += combobonusdamage;
leader2totaldamage += combocurrentdamage 
enemy1health -= combocurrentdamage;
}
}
}
}
}

if (iscomboattackingjumpkick == true){
if (iscomboattackingnow == true){
if (combo.x < comboattacktargetx) {

combo.anims.play('comborun', true);
combo.x += 25 

if (combo.x > comboattacktargetx - 1) {
combo.anims.play('combojumpkick', true);
if (this.leader1name == 'Combo'){
leader1action = 0
comboaction = 0
combocurrentdamage = combojumpkickdamage;
combocurrentdamage += combobonusdamage;
leader1totaldamage += combocurrentdamage 
enemy1health -= combocurrentdamage;
}
if (this.leader2name == 'Combo'){
leader2action = 0
comboaction = 0
combocurrentdamage = combojumpkickdamage;
combocurrentdamage += combobonusdamage;
leader2totaldamage += combocurrentdamage 
enemy1health -= combocurrentdamage;
}
}
}
}
}
if (iscomboattackinggun == true){
if (iscomboattackingnow == true){
if (combo.x < comboattacktargetx - 300) {

combo.anims.play('comborun', true);
combo.x += 25 

if (combo.x > comboattacktargetx - 301) {
combo.anims.play('combogun', true);
if (this.leader1name == 'Combo'){
leader1action = 0
comboaction = 0
combocurrentdamage = combogundamage;
combocurrentdamage += combobonusdamage;
leader1totaldamage += combocurrentdamage 
enemy1health -= combocurrentdamage;
}
if (this.leader2name == 'Combo'){
leader2action = 0
comboaction = 0
combocurrentdamage = combogundamage;
combocurrentdamage += combobonusdamage;
leader2totaldamage += combocurrentdamage 
enemy1health -= combocurrentdamage;
}
}
}
}
}

if (iscomboattackingslam == true){
if (iscomboattackingnow == true){
if (combo.x < comboattacktargetx -50) {

combo.anims.play('comborun', true);
combo.x += 25 

if (combo.x > comboattacktargetx - 51) {
combo.anims.play('comboslam', true);
if (this.leader1name == 'Combo'){
leader1action = 0
comboaction = 0

}
if (this.leader2name == 'Combo'){
leader2action = 0
comboaction = 0

}
}
}
}
}

if (iscomboattackingmuscle == true){
if (iscomboattackingnow == true){
if (combo.x < comboattacktarget - 200) {

combo.anims.play('comborun', true);
combo.x += 25 

if (combo.x > comboattacktarget - 201) {
combo.anims.play('combomuscle', true);
if (this.leader1name == 'Combo'){
leader1action = 0
comboaction = 0
combocurrentdamage = combomuscledamage;
combocurrentdamage += combobonusdamage;
leader1totaldamage += combocurrentdamage 
enemy1health -= combocurrentdamage;
}
if (this.leader2name == 'Combo'){
leader2action = 0
comboaction = 0
combocurrentdamage = combomuscledamage;
combocurrentdamage += combobonusdamage;
leader2totaldamage += combocurrentdamage 
enemy1health -= combocurrentdamage;
}
}
}
}
}
}
}
}
//kanoattack
//kanoonattack
function kanoonattack ()
{
if (kanoactive == true) {
if (battlemode == true) {
if (iskanoattackingblades == true){
if (iskanoattackingnow == true){
if (kano.x < kanoattacktargetx) {
kanobladespells.visible = true
kanobladespells.anims.play('kanobladesgr', true);
kanobladespells.x += 45 

if (kanobladespells.x > kanoattacktargetx - 25) {
kanobladebleednumber = 5
iskanobladebleed = true
if (this.fighter1name == 'Kano'){
fighter1action = 0
kanoaction = 0
if (fighter1charge0active == true){
        kanocurrentdamage = kanobladesdamage;
        kanocurrentdamage += kanobonusdamage;
        fighter1totaldamage += kanocurrentdamage 
        enemy1health -= kanocurrentdamage;
}
     if (fighter1charge1active == true){
        kanocurrentdamage = kanobladesdamage + 1000;
        kanocurrentdamage += kanobonusdamage;
        fighter1totaldamage += kanocurrentdamage 
        enemy1health -= kanocurrentdamage;
        fighter1focuscharge -= 1
        fighter1charge1active = false
        fighter1focuschargebox1.clearTint();
        
}
     if (fighter1charge2active == true){
        kanocurrentdamage = kanobladesdamage + 2000;
        kanocurrentdamage += kanobonusdamage;
        fighter1totaldamage += kanocurrentdamage 
        enemy1health -= kanocurrentdamage;
        fighter1focuscharge -= 1
        fighter1charge1active = false
        fighter1focuschargebox1.clearTint();
        fighter1focuscharge -= 2
        fighter1charge2active = false
        fighter1focuschargebox1.clearTint();
        fighter1focuschargebox2.clearTint();

}
    if (fighter1charge3active == true){
        kanocurrentdamage = kanobladesdamage + 4000;
        kanocurrentdamage += kanobonusdamage;
        fighter1totaldamage += kanocurrentdamage 
        enemy1health -= kanocurrentdamage;
        fighter1focuscharge -= 3
        fighter1charge3active = false
        fighter1focuschargebox1.clearTint();
        fighter1focuschargebox2.clearTint();
        fighter1focuschargebox3.clearTint();

}
    if (fighter1charge4active == true){
        kanocurrentdamage = kanobladesdamage + 5500;
        kanocurrentdamage += kanobonusdamage;
        fighter1totaldamage += kanocurrentdamage 
        enemy1health -= kanocurrentdamage;
        fighter1focuscharge -= 4
        fighter1charge4active = false
        fighter1focuschargebox1.clearTint();
        fighter1focuschargebox2.clearTint();
        fighter1focuschargebox3.clearTint();
        fighter1focuschargebox4.clearTint();

}
if (fighter1charge5active == true){
        kanocurrentdamage = kanobladesdamage + 7000;
        kanocurrentdamage += kanobonusdamage;
        fighter1totaldamage += kanocurrentdamage 
        enemy1health -= kanocurrentdamage;
        fighter1focuscharge -= 5
        fighter1charge5active = false
        fighter1focuschargebox1.clearTint();
        fighter1focuschargebox2.clearTint();
        fighter1focuschargebox3.clearTint();
        fighter1focuschargebox4.clearTint();
        fighter1focuschargebox5.clearTint();

}
fighter1damagefloatup = true
fighter1currentdamage = kanocurrentdamage
}
if (this.fighter2name == 'Kano'){
fighter2action = 0
kanoaction = 0
kanocurrentdamage = kanobladesdamage;
kanocurrentdamage += kanobonusdamage;
fighter2totaldamage += kanocurrentdamage 
enemy1health -= kanocurrentdamage;
}
if (this.fighter3name == 'Kano'){
fighter3action = 0
kanoaction = 0
kanocurrentdamage = kanobladesdamage;
kanocurrentdamage += kanobonusdamage;
fighter3totaldamage += kanocurrentdamage 
enemy1health -= kanocurrentdamage;
}
if (this.fighter4name == 'Kano'){
fighter4action = 0
kanoaction = 0
kanocurrentdamage = kanobladesdamage;
kanocurrentdamage += kanobonusdamage;
fighter4totaldamage += kanocurrentdamage 
enemy1health -= kanocurrentdamage;
}
if (this.fighter5name == 'Kano'){
fighter5action = 0
kanoaction = 0
kanocurrentdamage = kanobladesdamage;
kanocurrentdamage += kanobonusdamage;
fighter5totaldamage += kanocurrentdamage 
enemy1health -= kanocurrentdamage;
}
if (this.fighter6name == 'Kano'){
fighter6action = 0
kanoaction = 0
kanocurrentdamage = kanobladesdamage;
kanocurrentdamage += kanobonusdamage;
fighter6totaldamage += kanocurrentdamage 
enemy1health -= kanocurrentdamage;
}
kanoidle = true
kanobladespells.x = kano.x
iskanoattackingblades = false
iskanoattackingnow = false
iskanotargetpicked = false
kanobuttonselected = false
kano.setScale(1.4, 1.4);
kanospells.setScale(1, 1);
kanospellsfx.setScale(1, 1);
kanobladespells.setScale(1, 1);	
kanocurrentdamage = 0
actionquenumber -= 1
}
}
}
}
if (iskanoattackingcut == true){
if (iskanoattackingnow == true){
if (kano.x < kanoattacktargetx) {

kano.anims.play('kanorun', true);
kano.x += 25 

if (kano.x > kanoattacktargetx - 1) {
kano.anims.play('kanocut', true);
if (this.fighter1name == 'Kano'){
fighter1action = 0
kanoaction = 0
if (fighter1charge0active == true){
        kanocurrentdamage = kanocutdamage;
        kanocurrentdamage += kanobonusdamage;
        fighter1totaldamage += kanocurrentdamage 
        enemy1health -= kanocurrentdamage;
}
     if (fighter1charge1active == true){
        kanocurrentdamage = kanocutdamage + 1000;
        kanocurrentdamage += kanobonusdamage;
        fighter1totaldamage += kanocurrentdamage 
        enemy1health -= kanocurrentdamage;
        fighter1focuscharge -= 1
        fighter1charge1active = false
        fighter1focuschargebox1.clearTint();
        
}
     if (fighter1charge2active == true){
        kanocurrentdamage = kanocutdamage + 2000;
        kanocurrentdamage += kanobonusdamage;
        fighter1totaldamage += kanocurrentdamage 
        enemy1health -= kanocurrentdamage;
        fighter1focuscharge -= 2
        fighter1charge2active = false
        fighter1focuschargebox1.clearTint();
        fighter1focuschargebox2.clearTint();

}
    if (fighter1charge3active == true){
        kanocurrentdamage = kanocutdamage + 4000;
        kanocurrentdamage += kanobonusdamage;
        fighter1totaldamage += kanocurrentdamage 
        enemy1health -= kanocurrentdamage;
        fighter1focuscharge -= 3
        fighter1charge3active = false
        fighter1focuschargebox1.clearTint();
        fighter1focuschargebox2.clearTint();
        fighter1focuschargebox3.clearTint();

}
    if (fighter1charge4active == true){
        kanocurrentdamage = kanocutdamage + 5500;
        kanocurrentdamage += kanobonusdamage;
        fighter1totaldamage += kanocurrentdamage 
        enemy1health -= kanocurrentdamage;
        fighter1focuscharge -= 4
        fighter1charge4active = false
        fighter1focuschargebox1.clearTint();
        fighter1focuschargebox2.clearTint();
        fighter1focuschargebox3.clearTint();
        fighter1focuschargebox4.clearTint();

}
if (fighter1charge5active == true){
        kanocurrentdamage = kanocutdamage + 7000;
        kanocurrentdamage += kanobonusdamage;
        fighter1totaldamage += kanocurrentdamage 
        enemy1health -= kanocurrentdamage;
        fighter1focuscharge -= 5
        fighter1charge5active = false
        fighter1focuschargebox1.clearTint();
        fighter1focuschargebox2.clearTint();
        fighter1focuschargebox3.clearTint();
        fighter1focuschargebox4.clearTint();
        fighter1focuschargebox5.clearTint();

}
fighter1damagefloatup = true
fighter1currentdamage = kanocurrentdamage
}
if (this.fighter2name == 'Kano'){
fighter2action = 0
kanoaction = 0
kanocurrentdamage = kanocutdamage;
kanocurrentdamage += kanobonusdamage;
fighter2totaldamage += kanocurrentdamage 
enemy1health -= kanocurrentdamage;
}
if (this.fighter3name == 'Kano'){
fighter3action = 0
kanoaction = 0
kanocurrentdamage = kanocutdamage;
kanocurrentdamage += kanobonusdamage;
fighter3totaldamage += kanocurrentdamage 
enemy1health -= kanocurrentdamage;
}
if (this.fighter4name == 'Kano'){
fighter4action = 0
kanoaction = 0
kanocurrentdamage = kanocutdamage;
kanocurrentdamage += kanobonusdamage;
fighter4totaldamage += kanocurrentdamage 
enemy1health -= kanocurrentdamage;
}
if (this.fighter5name == 'Kano'){
fighter5action = 0
kanoaction = 0
kanocurrentdamage = kanocutdamage;
kanocurrentdamage += kanobonusdamage;
fighter5totaldamage += kanocurrentdamage 
enemy1health -= kanocurrentdamage;
}
if (this.fighter6name == 'Kano'){
fighter6action = 0
kanoaction = 0
kanocurrentdamage = kanocutdamage;
kanocurrentdamage += kanobonusdamage;
fighter6totaldamage += kanocurrentdamage 
enemy1health -= kanocurrentdamage;
}
}
}
}
}
if (iskanoattackinglaser == true){
if (iskanoattackingnow == true){
if (kano.x < kanoattacktargetx - 100) {

kano.anims.play('kanorun', true);
kano.x += 25 

if (kano.x > kanoattacktargetx - 100) {
kano.anims.play('kanolaser', true);
kanospells.x = kano.x + 20
kanospells.y = kano.y - 50
kanospellsfx.x = kano.x + 100
kanospellsfx.y = kano.y - 65
kanospells.visible = true
kanospellsfx.visible = true
kanospells.anims.play('kanolasergr', true);
kanospellsfx.anims.play('kanolasersmokegr', true);
if (this.fighter1name == 'Kano'){
if (fighter1charge0active == true){
        kanocurrentdamage = kanolaserdamage;
        kanocurrentdamage += kanobonusdamage;
        fighter1totaldamage += kanocurrentdamage 
        enemy1health -= kanocurrentdamage;
}
     if (fighter1charge1active == true){
        kanocurrentdamage = kanolaserdamage + 1000;
        kanocurrentdamage += kanobonusdamage;
        fighter1totaldamage += kanocurrentdamage 
        enemy1health -= kanocurrentdamage;
        fighter1focuscharge -= 1
        fighter1charge1active = false
        fighter1focuschargebox1.clearTint();
        
}
     if (fighter1charge2active == true){
        kanocurrentdamage = kanolaserdamage + 2000;
        kanocurrentdamage += kanobonusdamage;
        fighter1totaldamage += kanocurrentdamage 
        enemy1health -= kanocurrentdamage;
        fighter1focuscharge -= 2
        fighter1charge2active = false
        fighter1focuschargebox1.clearTint();
        fighter1focuschargebox2.clearTint();

}
    if (fighter1charge3active == true){
        kanocurrentdamage = kanolaserdamage + 4000;
        kanocurrentdamage += kanobonusdamage;
        fighter1totaldamage += kanocurrentdamage 
        enemy1health -= kanocurrentdamage;
        fighter1focuscharge -= 3
        fighter1charge3active = false
        fighter1focuschargebox1.clearTint();
        fighter1focuschargebox2.clearTint();
        fighter1focuschargebox3.clearTint();

}
    if (fighter1charge4active == true){
        kanocurrentdamage = kanolaserdamage + 5500;
        kanocurrentdamage += kanobonusdamage;
        fighter1totaldamage += kanocurrentdamage 
        enemy1health -= kanocurrentdamage;
        fighter1focuscharge -= 4
        fighter1charge4active = false
        fighter1focuschargebox1.clearTint();
        fighter1focuschargebox2.clearTint();
        fighter1focuschargebox3.clearTint();
        fighter1focuschargebox4.clearTint();

}
if (fighter1charge5active == true){
        kanospells.x = kano.x + 20
        kanospells.y = kano.y - 70
        kanospellsfx.x = kano.x + 200
        kanospellsfx.y = kano.y - 100
        kanocurrentdamage = kanolaserdamage + 7000;
        kanocurrentdamage += kanobonusdamage;
        fighter1totaldamage += kanocurrentdamage 
        enemy1health -= kanocurrentdamage;
        fighter1focuscharge -= 5
        fighter1charge5active = false
        fighter1focuschargebox1.clearTint();
        fighter1focuschargebox2.clearTint();
        fighter1focuschargebox3.clearTint();
        fighter1focuschargebox4.clearTint();
        fighter1focuschargebox5.clearTint();

}
fighter1damagefloatup = true
fighter1currentdamage = kanocurrentdamage
}
if (this.fighter2name == 'Kano'){
fighter2action = 0
kanoaction = 0
kanocurrentdamage = kanolaserdamage;
kanocurrentdamage += kanobonusdamage;
fighter2totaldamage += kanocurrentdamage 
enemy1health -= kanocurrentdamage;
}
if (this.fighter3name == 'Kano'){
fighter3action = 0
kanoaction = 0
kanocurrentdamage = kanolaserdamage;
kanocurrentdamage += kanobonusdamage;
fighter3totaldamage += kanocurrentdamage 
enemy1health -= kanocurrentdamage;
}
if (this.fighter4name == 'Kano'){
fighter4action = 0
kanoaction = 0
kanocurrentdamage = kanolaserdamage;
kanocurrentdamage += kanobonusdamage;
fighter4totaldamage += kanocurrentdamage 
enemy1health -= kanocurrentdamage;
}
if (this.fighter5name == 'Kano'){
fighter5action = 0
kanoaction = 0
kanocurrentdamage = kanolaserdamage;
kanocurrentdamage += kanobonusdamage;
fighter5totaldamage += kanocurrentdamage 
enemy1health -= kanocurrentdamage;
}
if (this.fighter6name == 'Kano'){
fighter6action = 0
kanoaction = 0
kanocurrentdamage = kanolaserdamage;
kanocurrentdamage += kanobonusdamage;
fighter6totaldamage += kanocurrentdamage 
enemy1health -= kanocurrentdamage;
}
fighter1damagefloatup = true
fighter1currentdamage = kanocurrentdamage
}
}
}
}
if (iskanoattackinghell == true){
if (iskanoattackingnow == true){
if (kano.x < kanoattacktargetx - 100) {

kano.anims.play('kanorun', true);
kano.x += 25 

if (kano.x > kanoattacktargetx - 100) {
kano.anims.play('kanoidle', true);
kanospells.x = kano.x - 25
kanospells.y = kano.y - 90
kanospells.anims.play('kanohell', true);
kanospellsfx.x = kano.x - 5
kanospellsfx.y = kano.y - 80
kanospells.visible = true
kanospellsfx.visible = true
kanospellsfx.anims.play('kanohellheadbreathgr', true);
if (this.fighter1name == 'Kano'){
if (fighter1charge0active == true){
        kanocurrentdamage = kanohelldamage;
        kanocurrentdamage += kanobonusdamage;
        fighter1totaldamage += kanocurrentdamage 
        enemy1health -= kanocurrentdamage;
}
     if (fighter1charge1active == true){
        kanocurrentdamage = kanohelldamage + 1000;
        kanocurrentdamage += kanobonusdamage;
        fighter1totaldamage += kanocurrentdamage 
        enemy1health -= kanocurrentdamage;
        fighter1focuscharge -= 1
        fighter1charge1active = false
        fighter1focuschargebox1.clearTint();
        
}
     if (fighter1charge2active == true){
        kanocurrentdamage = kanohelldamage + 2000;
        kanocurrentdamage += kanobonusdamage;
        fighter1totaldamage += kanocurrentdamage 
        enemy1health -= kanocurrentdamage;
        fighter1focuscharge -= 2
        fighter1charge2active = false
        fighter1focuschargebox1.clearTint();
        fighter1focuschargebox2.clearTint();

}
    if (fighter1charge3active == true){
        kanocurrentdamage = kanohelldamage + 4000;
        kanocurrentdamage += kanobonusdamage;
        fighter1totaldamage += kanocurrentdamage 
        enemy1health -= kanocurrentdamage;
        fighter1focuscharge -= 3
        fighter1charge3active = false
        fighter1focuschargebox1.clearTint();
        fighter1focuschargebox2.clearTint();
        fighter1focuschargebox3.clearTint();

}
    if (fighter1charge4active == true){
        kanocurrentdamage = kanohelldamage + 5500;
        kanocurrentdamage += kanobonusdamage;
        fighter1totaldamage += kanocurrentdamage 
        enemy1health -= kanocurrentdamage;
        fighter1focuscharge -= 4
        fighter1charge4active = false
        fighter1focuschargebox1.clearTint();
        fighter1focuschargebox2.clearTint();
        fighter1focuschargebox3.clearTint();
        fighter1focuschargebox4.clearTint();

}
if (fighter1charge5active == true){
        kanocurrentdamage = kanohelldamage + 7000;
        kanocurrentdamage += kanobonusdamage;
        fighter1totaldamage += kanocurrentdamage 
        enemy1health -= kanocurrentdamage;
        fighter1focuscharge -= 5
        fighter1charge5active = false
        fighter1focuschargebox1.clearTint();
        fighter1focuschargebox2.clearTint();
        fighter1focuschargebox3.clearTint();
        fighter1focuschargebox4.clearTint();
        fighter1focuschargebox5.clearTint();

}
fighter1damagefloatup = true
fighter1currentdamage = kanocurrentdamage

}
if (this.fighter2name == 'Kano'){
fighter2action = 0
kanoaction = 0
kanocurrentdamage = kanohelldamage;
kanocurrentdamage += kanobonusdamage;
fighter2totaldamage += kanocurrentdamage 
enemy1health -= kanocurrentdamage;
}
if (this.fighter3name == 'Kano'){
fighter3action = 0
kanoaction = 0
kanocurrentdamage = kanohelldamage;
kanocurrentdamage += kanobonusdamage;
fighter3totaldamage += kanocurrentdamage 
enemy1health -= kanocurrentdamage;
}
if (this.fighter4name == 'Kano'){
fighter4action = 0
kanoaction = 0
kanocurrentdamage = kanohelldamage;
kanocurrentdamage += kanobonusdamage;
fighter4totaldamage += kanocurrentdamage 
enemy1health -= kanocurrentdamage;
}
if (this.fighter5name == 'Kano'){
fighter5action = 0
kanoaction = 0
kanocurrentdamage = kanohelldamage;
kanocurrentdamage += kanobonusdamage;
fighter5totaldamage += kanocurrentdamage 
enemy1health -= kanocurrentdamage;
}
if (this.fighter6name == 'Kano'){
fighter6action = 0
kanoaction = 0
kanocurrentdamage = kanohelldamage;
kanocurrentdamage += kanobonusdamage;
fighter6totaldamage += kanocurrentdamage 
enemy1health -= kanocurrentdamage;
}

}
}
}
}
if (iskanoattackingkick == true){
if (iskanoattackingnow == true){
if (kano.x < kanoattacktargetx) {

kano.anims.play('kanorun', true);
kano.x += 25 

if (kano.x > kanoattacktargetx - 1) {
kano.anims.play('kanokick', true);
currentplayerdamage = kanokickdamage;
currentplayerdamage += kanobonusdamage;
enemy1health -= currentplayerdamage; 
fighter1action = 0
}
}
}
}
}
}
}

//orchidattack
//orchidonattack
function orchidonattack ()
{
if (orchidactive == true) {
if (battlemode == true) {
if (isorchidattackingwheel == true){
if (isorchidattackingnow == true){
if (orchid.x < orchidattacktargetx) {

orchid.anims.play('orchidwalk', true);
orchid.x += 25 

if (orchid.x > orchidattacktargetx - 5) {
orchid.anims.play('orchidwheel', true);
if (this.fighter1name == 'Orchid'){
fighter1action = 0
orchidaction = 0
orchidcurrentdamage = orchidwheeldamage;
orchidcurrentdamage += orchidbonusdamage;
fighter1totaldamage += orchidcurrentdamage 
enemy1health -= orchidcurrentdamage;
}
if (this.fighter2name == 'Orchid'){
fighter2action = 0
orchidaction = 0
if (fighter2charge0active == true){
        orchidcurrentdamage = orchidwheeldamage;
        orchidcurrentdamage += orchidbonusdamage;
        fighter2totaldamage += orchidcurrentdamage 
        enemy1health -= orchidcurrentdamage;
}
     if (fighter2charge1active == true){
        orchidcurrentdamage = orchidwheeldamage + 1000;
        orchidcurrentdamage += orchidbonusdamage;
        fighter2totaldamage += orchidcurrentdamage 
        enemy1health -= orchidcurrentdamage;
        fighter2focuscharge -= 1
        fighter2charge1active = false
        fighter2focuschargebox1.clearTint();
        
}
     if (fighter2charge2active == true){
        orchidcurrentdamage = orchidwheeldamage + 2000;
        orchidcurrentdamage += orchidbonusdamage;
        fighter2totaldamage += orchidcurrentdamage 
        enemy1health -= orchidcurrentdamage;
        fighter2focuscharge -= 2
        fighter2charge2active = false
        fighter2focuschargebox1.clearTint();
        fighter2focuschargebox2.clearTint();

}
    if (fighter2charge3active == true){
        orchidcurrentdamage = orchidwheeldamage + 4000;
        orchidcurrentdamage += orchidbonusdamage;
        fighter2totaldamage += orchidcurrentdamage 
        enemy1health -= orchidcurrentdamage;
        fighter2focuscharge -= 3
        fighter2charge3active = false
        fighter2focuschargebox1.clearTint();
        fighter2focuschargebox2.clearTint();
        fighter2focuschargebox3.clearTint();

}
    if (fighter2charge4active == true){
        orchidcurrentdamage = orchidwheeldamage + 5500;
        orchidcurrentdamage += orchidbonusdamage;
        fighter2totaldamage += orchidcurrentdamage 
        enemy1health -= orchidcurrentdamage;
        fighter2focuscharge -= 4
        fighter2charge4active = false
        fighter2focuschargebox1.clearTint();
        fighter2focuschargebox2.clearTint();
        fighter2focuschargebox3.clearTint();
        fighter2focuschargebox4.clearTint();

}
if (fighter2charge5active == true){
        orchidcurrentdamage = orchidwheeldamage + 7000;
        orchidcurrentdamage += orchidbonusdamage;
        fighter2totaldamage += orchidcurrentdamage 
        enemy1health -= orchidcurrentdamage;
        fighter2focuscharge -= 5
        fighter2charge5active = false
        fighter2focuschargebox1.clearTint();
        fighter2focuschargebox2.clearTint();
        fighter2focuschargebox3.clearTint();
        fighter2focuschargebox4.clearTint();
        fighter2focuschargebox5.clearTint();

}
fighter2damagefloatup = true
fighter2currentdamage = orchidcurrentdamage
}
if (this.fighter3name == 'Orchid'){
fighter3action = 0
orchidaction = 0
orchidcurrentdamage = orchidwheeldamage;
orchidcurrentdamage += orchidbonusdamage;
fighter3totaldamage += orchidcurrentdamage 
enemy1health -= orchidcurrentdamage;
}
if (this.fighter4name == 'Orchid'){
fighter4action = 0
orchidaction = 0
orchidcurrentdamage = orchidwheeldamage;
orchidcurrentdamage += orchidbonusdamage;
fighter4totaldamage += orchidcurrentdamage 
enemy1health -= orchidcurrentdamage;
}
if (this.fighter5name == 'Orchid'){
fighter5action = 0
orchidaction = 0
orchidcurrentdamage = orchidwheeldamage;
orchidcurrentdamage += orchidbonusdamage;
fighter5totaldamage += orchidcurrentdamage 
enemy1health -= orchidcurrentdamage;
}
if (this.fighter6name == 'Orchid'){
fighter6action = 0
orchidaction = 0
orchidcurrentdamage = orchidwheeldamage;
orchidcurrentdamage += orchidbonusdamage;
fighter6totaldamage += orchidcurrentdamage 
enemy1health -= orchidcurrentdamage;
}
}
}
}
}

if (isorchidattackingfireba == true){
if (isorchidattackingnow == true){
if (orchid.x < orchidattacktargetx) {
orchidspells.visible = true
orchidspells.anims.play('orchidfirebagr', true);
orchidspells.x += 45 

if (orchidspells.x > orchidattacktargetx - 25) {
orchidfirebaexplodenumber = 5
isorchidfirebaexplode = true
if (this.fighter1name == 'Orchid'){
fighter1action = 0
orchidaction = 0
orchidcurrentdamage = orchidfirebadamage;
orchidcurrentdamage += orchidbonusdamage;
fighter1totaldamage += orchidcurrentdamage 
enemy1health -= orchidcurrentdamage;
}
if (this.fighter2name == 'Orchid'){
fighter2action = 0
orchidaction = 0
if (fighter2charge0active == true){
        orchidcurrentdamage = orchidfirebadamage;
        orchidcurrentdamage += orchidbonusdamage;
        fighter2totaldamage += orchidcurrentdamage 
        enemy1health -= orchidcurrentdamage;
}
     if (fighter2charge1active == true){
        orchidcurrentdamage = orchidfirebadamage + 1000;
        orchidcurrentdamage += orchidbonusdamage;
        fighter2totaldamage += orchidcurrentdamage 
        enemy1health -= orchidcurrentdamage;
        fighter2focuscharge -= 1
        fighter2charge1active = false
        fighter2focuschargebox1.clearTint();
        
}
     if (fighter2charge2active == true){
        orchidcurrentdamage = orchidfirebadamage + 2000;
        orchidcurrentdamage += orchidbonusdamage;
        fighter2totaldamage += orchidcurrentdamage 
        enemy1health -= orchidcurrentdamage;
        fighter2focuscharge -= 2
        fighter2charge2active = false
        fighter2focuschargebox1.clearTint();
        fighter2focuschargebox2.clearTint();

}
    if (fighter2charge3active == true){
        orchidcurrentdamage = orchidfirebadamage + 4000;
        orchidcurrentdamage += orchidbonusdamage;
        fighter2totaldamage += orchidcurrentdamage 
        enemy1health -= orchidcurrentdamage;
        fighter2focuscharge -= 3
        fighter2charge3active = false
        fighter2focuschargebox1.clearTint();
        fighter2focuschargebox2.clearTint();
        fighter2focuschargebox3.clearTint();

}
    if (fighter2charge4active == true){
        orchidcurrentdamage = orchidfirebadamage + 5500;
        orchidcurrentdamage += orchidbonusdamage;
        fighter2totaldamage += orchidcurrentdamage 
        enemy1health -= orchidcurrentdamage;
        fighter2focuscharge -= 4
        fighter2charge4active = false
        fighter2focuschargebox1.clearTint();
        fighter2focuschargebox2.clearTint();
        fighter2focuschargebox3.clearTint();
        fighter2focuschargebox4.clearTint();

}
if (fighter2charge5active == true){
        orchidcurrentdamage = orchidfirebadamage + 7000;
        orchidcurrentdamage += orchidbonusdamage;
        fighter2totaldamage += orchidcurrentdamage 
        enemy1health -= orchidcurrentdamage;
        fighter2focuscharge -= 5
        fighter2charge5active = false
        fighter2focuschargebox1.clearTint();
        fighter2focuschargebox2.clearTint();
        fighter2focuschargebox3.clearTint();
        fighter2focuschargebox4.clearTint();
        fighter2focuschargebox5.clearTint();

}
fighter2damagefloatup = true
fighter2currentdamage = orchidcurrentdamage
}
if (this.fighter3name == 'Orchid'){
fighter3action = 0
orchidaction = 0
orchidcurrentdamage = orchidfirebadamage;
orchidcurrentdamage += orchidbonusdamage;
fighter3totaldamage += orchidcurrentdamage 
enemy1health -= orchidcurrentdamage;
}
if (this.fighter4name == 'Orchid'){
fighter4action = 0
orchidaction = 0
orchidcurrentdamage = orchidfirebadamage;
orchidcurrentdamage += orchidbonusdamage;
fighter4totaldamage += orchidcurrentdamage 
enemy1health -= orchidcurrentdamage;
}
if (this.fighter5name == 'Orchid'){
fighter5action = 0
orchidaction = 0
orchidcurrentdamage = orchidfirebadamage;
orchidcurrentdamage += orchidbonusdamage;
fighter5totaldamage += orchidcurrentdamage 
enemy1health -= orchidcurrentdamage;
}
if (this.fighter6name == 'Orchid'){
fighter6action = 0
orchidaction = 0
orchidcurrentdamage = orchidfirebadamage;
orchidcurrentdamage += orchidbonusdamage;
fighter6totaldamage += orchidcurrentdamage 
enemy1health -= orchidcurrentdamage;
}
orchididle = true
orchidspells.x = orchid.x
orchid.setScale(1.0, 1.0);
orchidspells.setScale(1, 1);
isorchidattackingfireba = false
actionquenumber -= 1
isorchidattackingnow = false
isorchidtargetpicked = false
orchidbuttonselected = false
}
}
}
}

if (isorchidattackingbaton == true){
if (isorchidattackingnow == true){
if (orchid.x < orchidattacktargetx) {

orchid.anims.play('orchidwalk', true);
orchid.x += 25 

if (orchid.x > orchidattacktargetx - 1) {
orchid.anims.play('orchidbaton', true);
if (this.fighter1name == 'Orchid'){
fighter1action = 0
orchidaction = 0
orchidcurrentdamage = orchidbatondamage;
orchidcurrentdamage += orchidbonusdamage;
fighter1totaldamage += orchidcurrentdamage 
enemy1health -= orchidcurrentdamage;
}
if (this.fighter2name == 'Orchid'){
fighter2action = 0
orchidaction = 0
if (fighter2charge0active == true){
        orchidcurrentdamage = orchidbatondamage;
        orchidcurrentdamage += orchidbonusdamage;
        fighter2totaldamage += orchidcurrentdamage 
        enemy1health -= orchidcurrentdamage;
}
     if (fighter2charge1active == true){
        orchidcurrentdamage = orchidbatondamage + 1000;
        orchidcurrentdamage += orchidbonusdamage;
        fighter2totaldamage += orchidcurrentdamage 
        enemy1health -= orchidcurrentdamage;
        fighter2focuscharge -= 1
        fighter2charge1active = false
        fighter2focuschargebox1.clearTint();
        
}
     if (fighter2charge2active == true){
        orchidcurrentdamage = orchidbatondamage + 2000;
        orchidcurrentdamage += orchidbonusdamage;
        fighter2totaldamage += orchidcurrentdamage 
        enemy1health -= orchidcurrentdamage;
        fighter2focuscharge -= 2
        fighter2charge2active = false
        fighter2focuschargebox1.clearTint();
        fighter2focuschargebox2.clearTint();

}
    if (fighter2charge3active == true){
        orchidcurrentdamage = orchidbatondamage + 4000;
        orchidcurrentdamage += orchidbonusdamage;
        fighter2totaldamage += orchidcurrentdamage 
        enemy1health -= orchidcurrentdamage;
        fighter2focuscharge -= 3
        fighter2charge3active = false
        fighter2focuschargebox1.clearTint();
        fighter2focuschargebox2.clearTint();
        fighter2focuschargebox3.clearTint();

}
    if (fighter2charge4active == true){
        orchidcurrentdamage = orchidbatondamage + 5500;
        orchidcurrentdamage += orchidbonusdamage;
        fighter2totaldamage += orchidcurrentdamage 
        enemy1health -= orchidcurrentdamage;
        fighter2focuscharge -= 4
        fighter2charge4active = false
        fighter2focuschargebox1.clearTint();
        fighter2focuschargebox2.clearTint();
        fighter2focuschargebox3.clearTint();
        fighter2focuschargebox4.clearTint();

}
if (fighter2charge5active == true){
        orchidcurrentdamage = orchidbatondamage + 7000;
        orchidcurrentdamage += orchidbonusdamage;
        fighter2totaldamage += orchidcurrentdamage 
        enemy1health -= orchidcurrentdamage;
        fighter2focuscharge -= 5
        fighter2charge5active = false
        fighter2focuschargebox1.clearTint();
        fighter2focuschargebox2.clearTint();
        fighter2focuschargebox3.clearTint();
        fighter2focuschargebox4.clearTint();
        fighter2focuschargebox5.clearTint();

}
fighter2damagefloatup = true
fighter2currentdamage = orchidcurrentdamage

}
if (this.fighter3name == 'Orchid'){
fighter3action = 0
orchidaction = 0
orchidcurrentdamage = orchidbatondamage;
orchidcurrentdamage += orchidbonusdamage;
fighter3totaldamage += orchidcurrentdamage 
enemy1health -= orchidcurrentdamage;
}
if (this.fighter4name == 'Orchid'){
fighter4action = 0
orchidaction = 0
orchidcurrentdamage = orchidbatondamage;
orchidcurrentdamage += orchidbonusdamage;
fighter4totaldamage += orchidcurrentdamage 
enemy1health -= orchidcurrentdamage;
}
if (this.fighter5name == 'Orchid'){
fighter5action = 0
orchidaction = 0
orchidcurrentdamage = orchidbatondamage;
orchidcurrentdamage += orchidbonusdamage;
fighter5totaldamage += orchidcurrentdamage 
enemy1health -= orchidcurrentdamage;
}
if (this.fighter6name == 'Orchid'){
fighter6action = 0
orchidaction = 0
orchidcurrentdamage = orchidbatondamage;
orchidcurrentdamage += orchidbonusdamage;
fighter6totaldamage += orchidcurrentdamage 
enemy1health -= orchidcurrentdamage;
}
}
}
}
}
if (isorchidattackingcat == true){
if (isorchidattackingnow == true){
if (orchid.x < orchidattacktargetx) {

orchid.x += 50 

if (orchid.x > orchidattacktargetx - 25) {
if (this.fighter1name == 'Orchid'){
fighter1action = 0
orchidaction = 0
orchidcurrentdamage = orchidcatdamage;
orchidcurrentdamage += orchidbonusdamage;
fighter1totaldamage += orchidcurrentdamage 
enemy1health -= orchidcurrentdamage;
}
if (this.fighter2name == 'Orchid'){
fighter2action = 0
orchidaction = 0
if (fighter2charge0active == true){
        orchidcurrentdamage = orchidcatdamage;
        orchidcurrentdamage += orchidbonusdamage;
        fighter2totaldamage += orchidcurrentdamage 
        enemy1health -= orchidcurrentdamage;
}
     if (fighter2charge1active == true){
        orchidcurrentdamage = orchidcatdamage + 1000;
        orchidcurrentdamage += orchidbonusdamage;
        fighter2totaldamage += orchidcurrentdamage 
        enemy1health -= orchidcurrentdamage;
        fighter2focuscharge -= 1
        fighter2charge1active = false
        fighter2focuschargebox1.clearTint();
        
}
     if (fighter2charge2active == true){
        orchidcurrentdamage = orchidcatdamage + 2000;
        orchidcurrentdamage += orchidbonusdamage;
        fighter2totaldamage += orchidcurrentdamage 
        enemy1health -= orchidcurrentdamage;
        fighter2focuscharge -= 2
        fighter2charge2active = false
        fighter2focuschargebox1.clearTint();
        fighter2focuschargebox2.clearTint();

}
    if (fighter2charge3active == true){
        orchidcurrentdamage = orchidcatdamage + 4000;
        orchidcurrentdamage += orchidbonusdamage;
        fighter2totaldamage += orchidcurrentdamage 
        enemy1health -= orchidcurrentdamage;
        fighter2focuscharge -= 3
        fighter2charge3active = false
        fighter2focuschargebox1.clearTint();
        fighter2focuschargebox2.clearTint();
        fighter2focuschargebox3.clearTint();

}
    if (fighter2charge4active == true){
        orchidcurrentdamage = orchidcatdamage + 5500;
        orchidcurrentdamage += orchidbonusdamage;
        fighter2totaldamage += orchidcurrentdamage 
        enemy1health -= orchidcurrentdamage;
        fighter2focuscharge -= 4
        fighter2charge4active = false
        fighter2focuschargebox1.clearTint();
        fighter2focuschargebox2.clearTint();
        fighter2focuschargebox3.clearTint();
        fighter2focuschargebox4.clearTint();

}
if (fighter2charge5active == true){
        orchidcurrentdamage = orchidcatdamage + 7000;
        orchidcurrentdamage += orchidbonusdamage;
        fighter2totaldamage += orchidcurrentdamage 
        enemy1health -= orchidcurrentdamage;
        fighter2focuscharge -= 5
        fighter2charge5active = false
        fighter2focuschargebox1.clearTint();
        fighter2focuschargebox2.clearTint();
        fighter2focuschargebox3.clearTint();
        fighter2focuschargebox4.clearTint();
        fighter2focuschargebox5.clearTint();

}
fighter2damagefloatup = true
fighter2currentdamage = orchidcurrentdamage
}
if (this.fighter3name == 'Orchid'){
fighter3action = 0
orchidaction = 0
orchidcurrentdamage = orchidcatdamage;
orchidcurrentdamage += orchidbonusdamage;
fighter3totaldamage += orchidcurrentdamage 
}
if (this.fighter4name == 'Orchid'){
fighter4action = 0
orchidaction = 0
orchidcurrentdamage = orchidcatdamage;
orchidcurrentdamage += orchidbonusdamage;
fighter4totaldamage += orchidcurrentdamage 
}
if (this.fighter5name == 'Orchid'){
fighter5action = 0
orchidaction = 0
orchidcurrentdamage = orchidcatdamage;
orchidcurrentdamage += orchidbonusdamage;
fighter5totaldamage += orchidcurrentdamage 
}
if (this.fighter6name == 'Orchid'){
fighter6action = 0
orchidaction = 0
orchidcurrentdamage = orchidcatdamage;
orchidcurrentdamage += orchidbonusdamage;
fighter6totaldamage += orchidcurrentdamage 
}
orchididle = true
orchid.x = 360
orchid.setScale(1.0, 1.0);
orchidspells.setScale(1, 1);
isorchidattackingcat = false
isorchidattackingnow = false
isorchidtargetpicked = false
orchidbuttonselected = false
actionquenumber -= 1
orchidcurrentdamage = 0

}
}
}
}
if (isorchidattackingfit == true){
if (isorchidattackingnow == true){
if (orchid.x < orchidattacktargetx -300 ) {

orchid.anims.play('orchidwalk', true);
orchid.x += 25 

if (orchid.x > orchidattacktargetx - 301) {
orchid.anims.play('orchidfit', true);
if (this.leader1name == 'orchid'){
leader1action = 0
orchidaction = 0

}
if (this.leader2name == 'orchid'){
leader2action = 0
orchidaction = 0
}
}
}
}
}
}
}
}

//jagoattack
//jagoonattack
function jagoonattack ()
{
if (jagoactive == true) {
if (battlemode == true) {
if (isjagoattackingsword == true){
if (isjagoattackingnow == true){
if (jago.x < jagoattacktargetx) {

jago.anims.play('jagowalk', true);
jago.x += 25 

if (jago.x > jagoattacktargetx - 1) {
jago.anims.play('jagosword', true);
if (this.fighter1name == 'Jago'){
fighter1action = 0
jagoaction = 0
jagocurrentdamage = jagosworddamage;
jagocurrentdamage += jagobonusdamage;
fighter1totaldamage += jagocurrentdamage 
enemy1health -= jagocurrentdamage;
}
if (this.fighter2name == 'Jago'){
fighter2action = 0
jagoaction = 0
jagocurrentdamage = jagosworddamage;
jagocurrentdamage += jagobonusdamage;
fighter2totaldamage += jagocurrentdamage 
enemy1health -= jagocurrentdamage;
}
if (this.fighter3name == 'Jago'){
fighter3action = 0
jagoaction = 0
if (fighter3charge0active == true){
        jagocurrentdamage = jagosworddamage;
        jagocurrentdamage += jagobonusdamage;
        fighter3totaldamage += jagocurrentdamage 
        enemy1health -= jagocurrentdamage;
}
     if (fighter3charge1active == true){
        jagocurrentdamage = jagosworddamage + 1000;
        jagocurrentdamage += jagobonusdamage;
        fighter3totaldamage += jagocurrentdamage 
        enemy1health -= jagocurrentdamage;
        fighter3focuscharge -= 1
        fighter3charge1active = false
        fighter3focuschargebox1.clearTint();
        
}
     if (fighter3charge2active == true){
        jagocurrentdamage = jagosworddamage + 2000;
        jagocurrentdamage += jagobonusdamage;
        fighter3totaldamage += jagocurrentdamage 
        enemy1health -= jagocurrentdamage;
        fighter3focuscharge -= 2
        fighter3charge2active = false
        fighter3focuschargebox1.clearTint();
        fighter3focuschargebox2.clearTint();

}
    if (fighter3charge3active == true){
        jagocurrentdamage = jagosworddamage + 4000;
        jagocurrentdamage += jagobonusdamage;
        fighter3totaldamage += jagocurrentdamage 
        enemy1health -= jagocurrentdamage;
        fighter3focuscharge -= 3
        fighter3charge3active = false
        fighter3focuschargebox1.clearTint();
        fighter3focuschargebox2.clearTint();
        fighter3focuschargebox3.clearTint();

}
    if (fighter3charge4active == true){
        jagocurrentdamage = jagosworddamage + 5500;
        jagocurrentdamage += jagobonusdamage;
        fighter3totaldamage += jagocurrentdamage 
        enemy1health -= jagocurrentdamage;
        fighter3focuscharge -= 4
        fighter3charge4active = false
        fighter3focuschargebox1.clearTint();
        fighter3focuschargebox2.clearTint();
        fighter3focuschargebox3.clearTint();
        fighter3focuschargebox4.clearTint();

}
if (fighter3charge5active == true){
        jagocurrentdamage = jagosworddamage + 7000;
        jagocurrentdamage += jagobonusdamage;
        fighter3totaldamage += jagocurrentdamage 
        enemy1health -= jagocurrentdamage;
        fighter3focuscharge -= 5
        fighter3charge5active = false
        fighter3focuschargebox1.clearTint();
        fighter3focuschargebox2.clearTint();
        fighter3focuschargebox3.clearTint();
        fighter3focuschargebox4.clearTint();
        fighter3focuschargebox5.clearTint();

}
fighter3damagefloatup = true
fighter3currentdamage = jagocurrentdamage
}
if (this.fighter4name == 'Jago'){
fighter4action = 0
jagoaction = 0
jagocurrentdamage = jagosworddamage;
jagocurrentdamage += jagobonusdamage;
fighter4totaldamage += jagocurrentdamage 
enemy1health -= jagocurrentdamage;
}
if (this.fighter5name == 'Jago'){
fighter5action = 0
jagoaction = 0
jagocurrentdamage = jagosworddamage;
jagocurrentdamage += jagobonusdamage;
fighter5totaldamage += jagocurrentdamage 
enemy1health -= jagocurrentdamage;
}
if (this.fighter6name == 'Jago'){
fighter6action = 0
jagoaction = 0
jagocurrentdamage = jagosworddamage;
jagocurrentdamage += jagobonusdamage;
fighter6totaldamage += jagocurrentdamage 
enemy1health -= jagocurrentdamage;
}
}
}
}
}

if (isjagoattackingplasma == true){
if (isjagoattackingnow == true){
if (jago.x < jagoattacktargetx) {
jagospells.visible = true
jagospells.anims.play('jagoplasmagr', true);
jagospells.x += 45 

if (jagospells.x > jagoattacktargetx - 25) {
if (this.fighter1name == 'Jago'){
fighter1action = 0
jagoaction = 0
jagocurrentdamage = jagoplasmadamage;
jagocurrentdamage += jagobonusdamage;
fighter1totaldamage += jagocurrentdamage 
enemy1health -= jagocurrentdamage;
}
if (this.fighter2name == 'Jago'){
fighter2action = 0
jagoaction = 0
jagocurrentdamage = jagoplasmadamage;
jagocurrentdamage += jagobonusdamage;
fighter2totaldamage += jagocurrentdamage 
enemy1health -= jagocurrentdamage;
}
if (this.fighter3name == 'Jago'){
fighter3action = 0
jagoaction = 0
jago.setScale(1.4, 1.4);
jagospells.setScale(1.4, 1.4);
if (fighter3charge0active == true){
        jagocurrentdamage = jagoplasmadamage;
        jagocurrentdamage += jagobonusdamage;
        fighter3totaldamage += jagocurrentdamage 
        enemy1health -= jagocurrentdamage;
}
     if (fighter3charge1active == true){
        jagocurrentdamage = jagoplasmadamage + 1000;
        jagocurrentdamage += jagobonusdamage;
        fighter3totaldamage += jagocurrentdamage 
        enemy1health -= jagocurrentdamage;
        fighter3focuscharge -= 1
        fighter3charge1active = false
        fighter3focuschargebox1.clearTint();
        
}
     if (fighter3charge2active == true){
        jagocurrentdamage = jagoplasmadamage + 2000;
        jagocurrentdamage += jagobonusdamage;
        fighter3totaldamage += jagocurrentdamage 
        enemy1health -= jagocurrentdamage;
        fighter3focuscharge -= 2
        fighter3charge2active = false
        fighter3focuschargebox1.clearTint();
        fighter3focuschargebox2.clearTint();

}
    if (fighter3charge3active == true){
        jagocurrentdamage = jagoplasmadamage + 4000;
        jagocurrentdamage += jagobonusdamage;
        fighter3totaldamage += jagocurrentdamage 
        enemy1health -= jagocurrentdamage;
        fighter3focuscharge -= 3
        fighter3charge3active = false
        fighter3focuschargebox1.clearTint();
        fighter3focuschargebox2.clearTint();
        fighter3focuschargebox3.clearTint();

}
    if (fighter3charge4active == true){
        jagocurrentdamage = jagoplasmadamage + 5500;
        jagocurrentdamage += jagobonusdamage;
        fighter3totaldamage += jagocurrentdamage 
        enemy1health -= jagocurrentdamage;
        fighter3focuscharge -= 4
        fighter3charge4active = false
        fighter3focuschargebox1.clearTint();
        fighter3focuschargebox2.clearTint();
        fighter3focuschargebox3.clearTint();
        fighter3focuschargebox4.clearTint();

}
if (fighter3charge5active == true){
        jagocurrentdamage = jagoplasmadamage + 7000;
        jagocurrentdamage += jagobonusdamage;
        fighter3totaldamage += jagocurrentdamage 
        enemy1health -= jagocurrentdamage;
        fighter3focuscharge -= 5
        fighter3charge5active = false
        fighter3focuschargebox1.clearTint();
        fighter3focuschargebox2.clearTint();
        fighter3focuschargebox3.clearTint();
        fighter3focuschargebox4.clearTint();
        fighter3focuschargebox5.clearTint();

}
fighter3damagefloatup = true
fighter3currentdamage = jagocurrentdamage

}
if (this.fighter4name == 'Jago'){
fighter4action = 0
jagoaction = 0
jagocurrentdamage = jagoplasmadamage;
jagocurrentdamage += jagobonusdamage;
fighter4totaldamage += jagocurrentdamage 
enemy1health -= jagocurrentdamage;
}
if (this.fighter5name == 'Jago'){
fighter5action = 0
jagoaction = 0
jagocurrentdamage = jagoplasmadamage;
jagocurrentdamage += jagobonusdamage;
fighter5totaldamage += jagocurrentdamage 
enemy1health -= jagocurrentdamage;
}
if (this.fighter6name == 'Jago'){
fighter6action = 0
jagoaction = 0
jagocurrentdamage = jagoplasmadamage;
jagocurrentdamage += jagobonusdamage;
fighter6totaldamage += jagocurrentdamage 
enemy1health -= jagocurrentdamage;
}
jagoidle = true
jagospells.x = jago.x
isjagoattackingplasma = false
isjagoattackingnow = false
isjagotargetpicked = false
jagobuttonselected = false
}
}
}
}

if (isjagoattackingrkick == true){
if (isjagoattackingnow == true){
if (jago.x < jagoattacktargetx) {

jago.anims.play('jagowalk', true);
jago.x += 25 

if (jago.x > jagoattacktargetx - 1) {
jago.anims.play('jagorkick', true);
if (this.fighter1name == 'Jago'){
fighter1action = 0
jagoaction = 0
jagocurrentdamage = jagorkickdamage;
jagocurrentdamage += jagobonusdamage;
fighter1totaldamage += jagocurrentdamage 
enemy1health -= jagocurrentdamage;
}
if (this.fighter2name == 'Jago'){
fighter2action = 0
jagoaction = 0
jagocurrentdamage = jagorkickdamage;
jagocurrentdamage += jagobonusdamage;
fighter2totaldamage += jagocurrentdamage 
enemy1health -= jagocurrentdamage;
}
if (this.fighter3name == 'Jago'){
fighter3action = 0
jagoaction = 0
if (fighter3charge0active == true){
        jagocurrentdamage = jagorkickdamage;
        jagocurrentdamage += jagobonusdamage;
        fighter3totaldamage += jagocurrentdamage 
        enemy1health -= jagocurrentdamage;
}
     if (fighter3charge1active == true){
        jagocurrentdamage = jagorkickdamage + 1000;
        jagocurrentdamage += jagobonusdamage;
        fighter3totaldamage += jagocurrentdamage 
        enemy1health -= jagocurrentdamage;
        fighter3focuscharge -= 1
        fighter3charge1active = false
        fighter3focuschargebox1.clearTint();
        
}
     if (fighter3charge2active == true){
        jagocurrentdamage = jagorkickdamage + 2000;
        jagocurrentdamage += jagobonusdamage;
        fighter3totaldamage += jagocurrentdamage 
        enemy1health -= jagocurrentdamage;
        fighter3focuscharge -= 2
        fighter3charge2active = false
        fighter3focuschargebox1.clearTint();
        fighter3focuschargebox2.clearTint();

}
    if (fighter3charge3active == true){
        jagocurrentdamage = jagorkickdamage + 4000;
        jagocurrentdamage += jagobonusdamage;
        fighter3totaldamage += jagocurrentdamage 
        enemy1health -= jagocurrentdamage;
        fighter3focuscharge -= 3
        fighter3charge3active = false
        fighter3focuschargebox1.clearTint();
        fighter3focuschargebox2.clearTint();
        fighter3focuschargebox3.clearTint();

}
    if (fighter3charge4active == true){
        jagocurrentdamage = jagorkickdamage + 5500;
        jagocurrentdamage += jagobonusdamage;
        fighter3totaldamage += jagocurrentdamage 
        enemy1health -= jagocurrentdamage;
        fighter3focuscharge -= 4
        fighter3charge4active = false
        fighter3focuschargebox1.clearTint();
        fighter3focuschargebox2.clearTint();
        fighter3focuschargebox3.clearTint();
        fighter3focuschargebox4.clearTint();

}
if (fighter3charge5active == true){
        jagocurrentdamage = jagorkickdamage + 7000;
        jagocurrentdamage += jagobonusdamage;
        fighter3totaldamage += jagocurrentdamage 
        enemy1health -= jagocurrentdamage;
        fighter3focuscharge -= 5
        fighter3charge5active = false
        fighter3focuschargebox1.clearTint();
        fighter3focuschargebox2.clearTint();
        fighter3focuschargebox3.clearTint();
        fighter3focuschargebox4.clearTint();
        fighter3focuschargebox5.clearTint();

}
fighter3damagefloatup = true
fighter3currentdamage = jagocurrentdamage
}
if (this.fighter4name == 'Jago'){
fighter4action = 0
jagoaction = 0
jagocurrentdamage = jagorkickdamage;
jagocurrentdamage += jagobonusdamage;
fighter4totaldamage += jagocurrentdamage 
enemy1health -= jagocurrentdamage;
}
if (this.fighter5name == 'Jago'){
fighter5action = 0
jagoaction = 0
jagocurrentdamage = jagorkickdamage;
jagocurrentdamage += jagobonusdamage;
fighter5totaldamage += jagocurrentdamage 
enemy1health -= jagocurrentdamage;
}
if (this.fighter6name == 'Jago'){
fighter6action = 0
jagoaction = 0
jagocurrentdamage = jagorkickdamage;
jagocurrentdamage += jagobonusdamage;
fighter6totaldamage += jagocurrentdamage 
enemy1health -= jagocurrentdamage;
}
}
}
}
}

if (isjagoattackingfocus == true){
if (isjagoattackingnow == true){
if (jago.x < jagoattacktargetx -300 ) {

jago.anims.play('jagowalk', true);
jago.x += 25 

if (jago.x > jagoattacktargetx - 301) {
jago.anims.play('jagofocus', true);
if (this.fighter1name == 'jago'){
jagoidle = true
jago.x = 360
isjagoattackingfocus = false
isjagoattackingnow = false
isjagotargetpicked = false
}
}
}
}
}
if (isjagoattackingstab == true){
if (isjagoattackingnow == true){
if (jago.x < jagoattacktargetx -100) {

jago.anims.play('jagowalk', true);
jago.x += 25 

if (jago.x > jagoattacktargetx - 101) {
jago.anims.play('jagostab', true);
if (this.fighter1name == 'Jago'){
fighter1action = 0
jagoaction = 0
jagocurrentdamage = jagostabdamage;
jagocurrentdamage += jagobonusdamage;
fighter1totaldamage += jagocurrentdamage 
enemy1health -= jagocurrentdamage;
}
if (this.fighter2name == 'Jago'){
fighter2action = 0
jagoaction = 0
jagocurrentdamage = jagostabdamage;
jagocurrentdamage += jagobonusdamage;
fighter2totaldamage += jagocurrentdamage 
enemy1health -= jagocurrentdamage;
}
if (this.fighter3name == 'Jago'){
fighter3action = 0
jagoaction = 0
if (fighter3charge0active == true){
        jagocurrentdamage = jagostabdamage;
        jagocurrentdamage += jagobonusdamage;
        fighter3totaldamage += jagocurrentdamage 
        enemy1health -= jagocurrentdamage;
}
     if (fighter3charge1active == true){
        jagocurrentdamage = jagostabdamage + 1000;
        jagocurrentdamage += jagobonusdamage;
        fighter3totaldamage += jagocurrentdamage 
        enemy1health -= jagocurrentdamage;
        fighter3focuscharge -= 1
        fighter3charge1active = false
        fighter3focuschargebox1.clearTint();
        
}
     if (fighter3charge2active == true){
        jagocurrentdamage = jagostabdamage + 2000;
        jagocurrentdamage += jagobonusdamage;
        fighter3totaldamage += jagocurrentdamage 
        enemy1health -= jagocurrentdamage;
        fighter3focuscharge -= 2
        fighter3charge2active = false
        fighter3focuschargebox1.clearTint();
        fighter3focuschargebox2.clearTint();

}
    if (fighter3charge3active == true){
        jagocurrentdamage = jagostabdamage + 4000;
        jagocurrentdamage += jagobonusdamage;
        fighter3totaldamage += jagocurrentdamage 
        enemy1health -= jagocurrentdamage;
        fighter3focuscharge -= 3
        fighter3charge3active = false
        fighter3focuschargebox1.clearTint();
        fighter3focuschargebox2.clearTint();
        fighter3focuschargebox3.clearTint();

}
    if (fighter3charge4active == true){
        jagocurrentdamage = jagostabdamage + 5500;
        jagocurrentdamage += jagobonusdamage;
        fighter3totaldamage += jagocurrentdamage 
        enemy1health -= jagocurrentdamage;
        fighter3focuscharge -= 4
        fighter3charge4active = false
        fighter3focuschargebox1.clearTint();
        fighter3focuschargebox2.clearTint();
        fighter3focuschargebox3.clearTint();
        fighter3focuschargebox4.clearTint();

}
if (fighter3charge5active == true){
        jagocurrentdamage = jagostabdamage + 7000;
        jagocurrentdamage += jagobonusdamage;
        fighter3totaldamage += jagocurrentdamage 
        enemy1health -= jagocurrentdamage;
        fighter3focuscharge -= 5
        fighter3charge5active = false
        fighter3focuschargebox1.clearTint();
        fighter3focuschargebox2.clearTint();
        fighter3focuschargebox3.clearTint();
        fighter3focuschargebox4.clearTint();
        fighter3focuschargebox5.clearTint();

}
fighter3damagefloatup = true
fighter3currentdamage = jagocurrentdamage
}
if (this.fighter4name == 'Jago'){
fighter4action = 0
jagoaction = 0
jagocurrentdamage = jagostabdamage;
jagocurrentdamage += jagobonusdamage;
fighter4totaldamage += jagocurrentdamage 
enemy1health -= jagocurrentdamage;
}
if (this.fighter5name == 'Jago'){
fighter5action = 0
jagoaction = 0
jagocurrentdamage = jagostabdamage;
jagocurrentdamage += jagobonusdamage;
fighter5totaldamage += jagocurrentdamage 
enemy1health -= jagocurrentdamage;
}
if (this.fighter6name == 'Jago'){
fighter6action = 0
jagoaction = 0
jagocurrentdamage = jagostabdamage;
jagocurrentdamage += jagobonusdamage;
fighter6totaldamage += jagocurrentdamage 
enemy1health -= jagocurrentdamage;
}
}
}
}
}
}
}
}


//kunglaoattack
//kunglaoonattack
function kunglaoonattack ()
{
if (kunglaoactive == true) {
if (battlemode == true) {
if (iskunglaoattackingpalmkick == true){
if (iskunglaoattackingnow == true){
if (kunglao.x < kunglaoattacktargetx) {
kunglaoidle = false
kunglao.anims.play('kunglaorun', true);
kunglao.x += 25 

if (kunglao.x > kunglaoattacktargetx - 5) {
kunglao.anims.play('kunglaopalmkick', true);
if (this.fighter1name == 'Kunglao'){
fighter1action = 0
kunglaoaction = 0
kunglaocurrentdamage = kunglaopalmkickdamage;
kunglaocurrentdamage += kunglaobonusdamage;
fighter1totaldamage += kunglaocurrentdamage 
enemy1health -= kunglaocurrentdamage;
}
if (this.fighter2name == 'Kunglao'){
fighter2action = 0
kunglaoaction = 0
kunglaocurrentdamage = kunglaopalmkickdamage;
kunglaocurrentdamage += kunglaobonusdamage;
fighter2totaldamage += kunglaocurrentdamage 
enemy1health -= kunglaocurrentdamage;
}
if (this.fighter3name == 'Kunglao'){
fighter3action = 0
kunglaoaction = 0
kunglaocurrentdamage = kunglaopalmkickdamage;
kunglaocurrentdamage += kunglaobonusdamage;
fighter3totaldamage += kunglaocurrentdamage 
enemy1health -= kunglaocurrentdamage;
}
if (this.fighter4name == 'Kunglao'){
fighter4action = 0
kunglaoaction = 0
if (fighter4charge0active == true){
        kunglaocurrentdamage = kunglaopalmkickdamage;
        kunglaocurrentdamage += kunglaobonusdamage;
        fighter4totaldamage += kunglaocurrentdamage 
        enemy1health -= kunglaocurrentdamage;
}
     if (fighter4charge1active == true){
        kunglaocurrentdamage = kunglaopalmkickdamage + 1000;
        kunglaocurrentdamage += kunglaobonusdamage;
        fighter4totaldamage += kunglaocurrentdamage 
        enemy1health -= kunglaocurrentdamage;
        fighter4focuscharge -= 1
        fighter4charge1active = false
        fighter4focuschargebox1.clearTint();
        
}
     if (fighter4charge2active == true){
        kunglaocurrentdamage = kunglaopalmkickdamage + 2000;
        kunglaocurrentdamage += kunglaobonusdamage;
        fighter4totaldamage += kunglaocurrentdamage 
        enemy1health -= kunglaocurrentdamage;
        fighter4focuscharge -= 2
        fighter4charge2active = false
        fighter4focuschargebox1.clearTint();
        fighter4focuschargebox2.clearTint();

}
    if (fighter4charge3active == true){
        kunglaocurrentdamage = kunglaopalmkickdamage + 4000;
        kunglaocurrentdamage += kunglaobonusdamage;
        fighter4totaldamage += kunglaocurrentdamage 
        enemy1health -= kunglaocurrentdamage;
        fighter4focuscharge -= 3
        fighter4charge3active = false
        fighter4focuschargebox1.clearTint();
        fighter4focuschargebox2.clearTint();
        fighter4focuschargebox3.clearTint();

}
    if (fighter4charge4active == true){
        kunglaocurrentdamage = kunglaopalmkickdamage + 5500;
        kunglaocurrentdamage += kunglaobonusdamage;
        fighter4totaldamage += kunglaocurrentdamage 
        enemy1health -= kunglaocurrentdamage;
        fighter4focuscharge -= 4
        fighter4charge4active = false
        fighter4focuschargebox1.clearTint();
        fighter4focuschargebox2.clearTint();
        fighter4focuschargebox3.clearTint();
        fighter4focuschargebox4.clearTint();

}
if (fighter4charge5active == true){
        kunglaocurrentdamage = kunglaopalmkickdamage + 7000;
        kunglaocurrentdamage += kunglaobonusdamage;
        fighter4totaldamage += kunglaocurrentdamage 
        enemy1health -= kunglaocurrentdamage;
        fighter4focuscharge -= 5
        fighter4charge5active = false
        fighter4focuschargebox1.clearTint();
        fighter4focuschargebox2.clearTint();
        fighter4focuschargebox3.clearTint();
        fighter4focuschargebox4.clearTint();
        fighter4focuschargebox5.clearTint();

}
fighter4damagefloatup = true
fighter4currentdamage = kunglaocurrentdamage
}
if (this.fighter5name == 'Kunglao'){
fighter5action = 0
kunglaoaction = 0
kunglaocurrentdamage = kunglaopalmkickdamage;
kunglaocurrentdamage += kunglaobonusdamage;
fighter5totaldamage += kunglaocurrentdamage 
enemy1health -= kunglaocurrentdamage;
}
if (this.fighter6name == 'Kunglao'){
fighter6action = 0
kunglaoaction = 0
kunglaocurrentdamage = kunglaopalmkickdamage;
kunglaocurrentdamage += kunglaobonusdamage;
fighter6totaldamage += kunglaocurrentdamage 
enemy1health -= kunglaocurrentdamage;
}
}
}
}
}
if (iskunglaoattackinghatthrow == true){
if (iskunglaoattackingnow == true){
if (kunglao.x < kunglaoattacktargetx) {
kunglaospells.visible = true
kunglaospells.anims.play('kunglaohatthrowgr', true);
kunglaospells.x += 45 

if (kunglaospells.x > kunglaoattacktargetx - 25) {
if (this.fighter1name == 'Kunglao'){
fighter1action = 0
kunglaoaction = 0
kunglao.setScale(1.4, 1.4);
kunglaospells.setScale(1.4, 1.4);
kunglaocurrentdamage = kunglaohatthrowdamage;
kunglaocurrentdamage += kunglaobonusdamage;
fighter1totaldamage += kunglaocurrentdamage 
enemy1health -= kunglaocurrentdamage;
}
if (this.fighter2name == 'Kunglao'){
fighter2action = 0
kunglaoaction = 0
kunglaocurrentdamage = kunglaohatthrowdamage;
kunglaocurrentdamage += kunglaobonusdamage;
fighter2totaldamage += kunglaocurrentdamage 
enemy1health -= kunglaocurrentdamage;
}
if (this.fighter3name == 'Kunglao'){
fighter3action = 0
kunglaoaction = 0
kunglaocurrentdamage = kunglaohatthrowdamage;
kunglaocurrentdamage += kunglaobonusdamage;
fighter3totaldamage += kunglaocurrentdamage 
enemy1health -= kunglaocurrentdamage;
}
if (this.fighter4name == 'Kunglao'){
fighter4action = 0
kunglaoaction = 0
if (fighter4charge0active == true){
        kunglaocurrentdamage = kunglaohatthrowdamage;
        kunglaocurrentdamage += kunglaobonusdamage;
        fighter4totaldamage += kunglaocurrentdamage 
        enemy1health -= kunglaocurrentdamage;
}
     if (fighter4charge1active == true){
        kunglaocurrentdamage = kunglaohatthrowdamage + 1000;
        kunglaocurrentdamage += kunglaobonusdamage;
        fighter4totaldamage += kunglaocurrentdamage 
        enemy1health -= kunglaocurrentdamage;
        fighter4focuscharge -= 1
        fighter4charge1active = false
        fighter4focuschargebox1.clearTint();
        
}
     if (fighter4charge2active == true){
        kunglaocurrentdamage = kunglaohatthrowdamage + 2000;
        kunglaocurrentdamage += kunglaobonusdamage;
        fighter4totaldamage += kunglaocurrentdamage 
        enemy1health -= kunglaocurrentdamage;
        fighter4focuscharge -= 2
        fighter4charge2active = false
        fighter4focuschargebox1.clearTint();
        fighter4focuschargebox2.clearTint();

}
    if (fighter4charge3active == true){
        kunglaocurrentdamage = kunglaohatthrowdamage + 4000;
        kunglaocurrentdamage += kunglaobonusdamage;
        fighter4totaldamage += kunglaocurrentdamage 
        enemy1health -= kunglaocurrentdamage;
        fighter4focuscharge -= 3
        fighter4charge3active = false
        fighter4focuschargebox1.clearTint();
        fighter4focuschargebox2.clearTint();
        fighter4focuschargebox3.clearTint();

}
    if (fighter4charge4active == true){
        kunglaocurrentdamage = kunglaohatthrowdamage + 5500;
        kunglaocurrentdamage += kunglaobonusdamage;
        fighter4totaldamage += kunglaocurrentdamage 
        enemy1health -= kunglaocurrentdamage;
        fighter4focuscharge -= 4
        fighter4charge4active = false
        fighter4focuschargebox1.clearTint();
        fighter4focuschargebox2.clearTint();
        fighter4focuschargebox3.clearTint();
        fighter4focuschargebox4.clearTint();

}
if (fighter4charge5active == true){
        kunglaocurrentdamage = kunglaohatthrowdamage + 7000;
        kunglaocurrentdamage += kunglaobonusdamage;
        fighter4totaldamage += kunglaocurrentdamage 
        enemy1health -= kunglaocurrentdamage;
        fighter4focuscharge -= 5
        fighter4charge5active = false
        fighter4focuschargebox1.clearTint();
        fighter4focuschargebox2.clearTint();
        fighter4focuschargebox3.clearTint();
        fighter4focuschargebox4.clearTint();
        fighter4focuschargebox5.clearTint();

}
fighter4damagefloatup = true
fighter4currentdamage = kunglaocurrentdamage
}
if (this.fighter5name == 'Kunglao'){
fighter5action = 0
kunglaoaction = 0
kunglaocurrentdamage = kunglaohatthrowdamage;
kunglaocurrentdamage += kunglaobonusdamage;
fighter5totaldamage += kunglaocurrentdamage 
enemy1health -= kunglaocurrentdamage;
}
if (this.fighter6name == 'Kunglao'){
fighter6action = 0
kunglaoaction = 0
kunglaocurrentdamage = kunglaohatthrowdamage;
kunglaocurrentdamage += kunglaobonusdamage;
fighter6totaldamage += kunglaocurrentdamage 
enemy1health -= kunglaocurrentdamage;
}
kunglaoidle = true
kunglaospells.x = kunglao.x
iskunglaoattackinghatthrow = false
iskunglaoattackingnow = false
iskunglaotargetpicked = false
kunglaobuttonselected = false
actionquenumber -= 1
}
}
}
}

if (iskunglaoattackingwhirl == true){
if (iskunglaoattackingnow == true){
if (kunglao.x < kunglaoattacktargetx) {

kunglao.anims.play('kunglaorun', true);
kunglao.x += 25 

if (kunglao.x > kunglaoattacktargetx - 1) {
kunglao.anims.play('kunglaowhirl', true);
if (this.fighter1name == 'Kunglao'){
fighter1action = 0
kunglaoaction = 0
kunglaocurrentdamage = kunglaowhirldamage;
kunglaocurrentdamage += kunglaobonusdamage;
fighter1totaldamage += kunglaocurrentdamage 
enemy1health -= kunglaocurrentdamage;
}
if (this.fighter2name == 'Kunglao'){
fighter2action = 0
kunglaoaction = 0
kunglaocurrentdamage = kunglaowhirldamage;
kunglaocurrentdamage += kunglaobonusdamage;
fighter2totaldamage += kunglaocurrentdamage 
enemy1health -= kunglaocurrentdamage;
}
if (this.fighter3name == 'Kunglao'){
fighter3action = 0
kunglaoaction = 0
kunglaocurrentdamage = kunglaowhirldamage;
kunglaocurrentdamage += kunglaobonusdamage;
fighter3totaldamage += kunglaocurrentdamage 
enemy1health -= kunglaocurrentdamage;
}
if (this.fighter4name == 'Kunglao'){
fighter4action = 0
kunglaoaction = 0
if (fighter4charge0active == true){
        kunglaocurrentdamage = kunglaowhirldamage;
        kunglaocurrentdamage += kunglaobonusdamage;
        fighter4totaldamage += kunglaocurrentdamage 
        enemy1health -= kunglaocurrentdamage;
}
     if (fighter4charge1active == true){
        kunglaocurrentdamage = kunglaowhirldamage + 1000;
        kunglaocurrentdamage += kunglaobonusdamage;
        fighter4totaldamage += kunglaocurrentdamage 
        enemy1health -= kunglaocurrentdamage;
        fighter4focuscharge -= 1
        fighter4charge1active = false
        fighter4focuschargebox1.clearTint();
        
}
     if (fighter4charge2active == true){
        kunglaocurrentdamage = kunglaowhirldamage + 2000;
        kunglaocurrentdamage += kunglaobonusdamage;
        fighter4totaldamage += kunglaocurrentdamage 
        enemy1health -= kunglaocurrentdamage;
        fighter4focuscharge -= 2
        fighter4charge2active = false
        fighter4focuschargebox1.clearTint();
        fighter4focuschargebox2.clearTint();

}
    if (fighter4charge3active == true){
        kunglaocurrentdamage = kunglaowhirldamage + 4000;
        kunglaocurrentdamage += kunglaobonusdamage;
        fighter4totaldamage += kunglaocurrentdamage 
        enemy1health -= kunglaocurrentdamage;
        fighter4focuscharge -= 3
        fighter4charge3active = false
        fighter4focuschargebox1.clearTint();
        fighter4focuschargebox2.clearTint();
        fighter4focuschargebox3.clearTint();

}
    if (fighter4charge4active == true){
        kunglaocurrentdamage = kunglaowhirldamage + 5500;
        kunglaocurrentdamage += kunglaobonusdamage;
        fighter4totaldamage += kunglaocurrentdamage 
        enemy1health -= kunglaocurrentdamage;
        fighter4focuscharge -= 4
        fighter4charge4active = false
        fighter4focuschargebox1.clearTint();
        fighter4focuschargebox2.clearTint();
        fighter4focuschargebox3.clearTint();
        fighter4focuschargebox4.clearTint();

}
if (fighter4charge5active == true){
        kunglaocurrentdamage = kunglaowhirldamage + 7000;
        kunglaocurrentdamage += kunglaobonusdamage;
        fighter4totaldamage += kunglaocurrentdamage 
        enemy1health -= kunglaocurrentdamage;
        fighter4focuscharge -= 5
        fighter4charge5active = false
        fighter4focuschargebox1.clearTint();
        fighter4focuschargebox2.clearTint();
        fighter4focuschargebox3.clearTint();
        fighter4focuschargebox4.clearTint();
        fighter4focuschargebox5.clearTint();

}
fighter4damagefloatup = true
fighter4currentdamage = kunglaocurrentdamage
}
if (this.fighter5name == 'Kunglao'){
fighter5action = 0
kunglaoaction = 0
kunglaocurrentdamage = kunglaowhirldamage;
kunglaocurrentdamage += kunglaobonusdamage;
fighter5totaldamage += kunglaocurrentdamage 
enemy1health -= kunglaocurrentdamage;
}
if (this.fighter6name == 'Kunglao'){
fighter6action = 0
kunglaoaction = 0
kunglaocurrentdamage = kunglaowhirldamage;
kunglaocurrentdamage += kunglaobonusdamage;
fighter6totaldamage += kunglaocurrentdamage 
enemy1health -= kunglaocurrentdamage;
}
}
}
}
}


if (iskunglaoattackingbrim == true){
if (iskunglaoattackingnow == true){
if (kunglao.x < kunglaoattacktargetx -300 ) {

kunglao.anims.play('kunglaorun', true);
kunglao.x += 25 

if (kunglao.x > kunglaoattacktargetx - 301) {
kunglao.anims.play('kunglaobrim', true);
if (this.fighter1name == 'kunglao'){

kunglaoidle = true
kunglao.x = 360
iskunglaoattackingbrim = false
iskunglaoattackingnow = false
iskunglaotargetpicked = false
}
}
}
}
}
if (iskunglaoattackingkick == true){
if (iskunglaoattackingnow == true){
if (kunglao.x < kunglaoattacktargetx) {
kunglaoidle = false
kunglao.anims.play('kunglaorun', true);
kunglao.x += 25 

if (kunglao.x > kunglaoattacktargetx - 5) {
kunglao.anims.play('kunglaokick', true);
if (this.fighter1name == 'Kunglao'){
fighter1action = 0
kunglaoaction = 0
kunglaocurrentdamage = kunglaokickdamage;
kunglaocurrentdamage += kunglaobonusdamage;
fighter1totaldamage += kunglaocurrentdamage 
enemy1health -= kunglaocurrentdamage;
}
if (this.fighter2name == 'Kunglao'){
fighter2action = 0
kunglaoaction = 0
kunglaocurrentdamage = kunglaokickdamage;
kunglaocurrentdamage += kunglaobonusdamage;
fighter2totaldamage += kunglaocurrentdamage 
enemy1health -= kunglaocurrentdamage;
}
if (this.fighter3name == 'Kunglao'){
fighter3action = 0
kunglaoaction = 0
kunglaocurrentdamage = kunglaokickdamage;
kunglaocurrentdamage += kunglaobonusdamage;
fighter3totaldamage += kunglaocurrentdamage 
enemy1health -= kunglaocurrentdamage;
}
if (this.fighter4name == 'Kunglao'){
fighter4action = 0
kunglaoaction = 0
if (fighter4charge0active == true){
        kunglaocurrentdamage = kunglaokickdamage;
        kunglaocurrentdamage += kunglaobonusdamage;
        fighter4totaldamage += kunglaocurrentdamage 
        enemy1health -= kunglaocurrentdamage;
}
     if (fighter4charge1active == true){
        kunglaocurrentdamage = kunglaokickdamage + 1000;
        kunglaocurrentdamage += kunglaobonusdamage;
        fighter4totaldamage += kunglaocurrentdamage 
        enemy1health -= kunglaocurrentdamage;
        fighter4focuscharge -= 1
        fighter4charge1active = false
        fighter4focuschargebox1.clearTint();
        
}
     if (fighter4charge2active == true){
        kunglaocurrentdamage = kunglaokickdamage + 2000;
        kunglaocurrentdamage += kunglaobonusdamage;
        fighter4totaldamage += kunglaocurrentdamage 
        enemy1health -= kunglaocurrentdamage;
        fighter4focuscharge -= 2
        fighter4charge2active = false
        fighter4focuschargebox1.clearTint();
        fighter4focuschargebox2.clearTint();

}
    if (fighter4charge3active == true){
        kunglaocurrentdamage = kunglaokickdamage + 4000;
        kunglaocurrentdamage += kunglaobonusdamage;
        fighter4totaldamage += kunglaocurrentdamage 
        enemy1health -= kunglaocurrentdamage;
        fighter4focuscharge -= 3
        fighter4charge3active = false
        fighter4focuschargebox1.clearTint();
        fighter4focuschargebox2.clearTint();
        fighter4focuschargebox3.clearTint();

}
    if (fighter4charge4active == true){
        kunglaocurrentdamage = kunglaokickdamage + 5500;
        kunglaocurrentdamage += kunglaobonusdamage;
        fighter4totaldamage += kunglaocurrentdamage 
        enemy1health -= kunglaocurrentdamage;
        fighter4focuscharge -= 4
        fighter4charge4active = false
        fighter4focuschargebox1.clearTint();
        fighter4focuschargebox2.clearTint();
        fighter4focuschargebox3.clearTint();
        fighter4focuschargebox4.clearTint();

}
if (fighter4charge5active == true){
        kunglaocurrentdamage = kunglaokickdamage + 7000;
        kunglaocurrentdamage += kunglaobonusdamage;
        fighter4totaldamage += kunglaocurrentdamage 
        enemy1health -= kunglaocurrentdamage;
        fighter4focuscharge -= 5
        fighter4charge5active = false
        fighter4focuschargebox1.clearTint();
        fighter4focuschargebox2.clearTint();
        fighter4focuschargebox3.clearTint();
        fighter4focuschargebox4.clearTint();
        fighter4focuschargebox5.clearTint();

}
fighter4damagefloatup = true
fighter4currentdamage = kunglaocurrentdamage
}
if (this.fighter5name == 'Kunglao'){
fighter5action = 0
kunglaoaction = 0
kunglaocurrentdamage = kunglaokickdamage;
kunglaocurrentdamage += kunglaobonusdamage;
fighter5totaldamage += kunglaocurrentdamage 
enemy1health -= kunglaocurrentdamage;
}
if (this.fighter6name == 'Kunglao'){
fighter6action = 0
kunglaoaction = 0
kunglaocurrentdamage = kunglaokickdamage;
kunglaocurrentdamage += kunglaobonusdamage;
fighter6totaldamage += kunglaocurrentdamage 
enemy1health -= kunglaocurrentdamage;
}
}
}
}
}
}
}
}

//sonjaattack
//sonjaonattack
function sonjaonattack ()
{
if (sonjaactive == true) {
if (battlemode == true) {
if (issonjaattackinghandst == true){
if (issonjaattackingnow == true){
if (sonja.x < sonjaattacktargetx) {
sonjaidle = false
sonja.anims.play('sonjarun', true);
sonja.x += 25 

if (sonja.x > sonjaattacktargetx - 5) {
sonja.anims.play('sonjahandst', true);
if (this.fighter1name == 'Sonja'){
fighter1action = 0
sonjaaction = 0
sonjacurrentdamage = sonjahandstdamage;
sonjacurrentdamage += sonjabonusdamage;
fighter1totaldamage += sonjacurrentdamage 
enemy1health -= sonjacurrentdamage;
}
if (this.fighter2name == 'Sonja'){
fighter2action = 0
sonjaaction = 0
sonjacurrentdamage = sonjahandstdamage;
sonjacurrentdamage += sonjabonusdamage;
fighter2totaldamage += sonjacurrentdamage 
enemy1health -= sonjacurrentdamage;
}
if (this.fighter3name == 'Sonja'){
fighter3action = 0
sonjaaction = 0
sonjacurrentdamage = sonjahandstdamage;
sonjacurrentdamage += sonjabonusdamage;
fighter3totaldamage += sonjacurrentdamage 
enemy1health -= sonjacurrentdamage;
}
if (this.fighter4name == 'Sonja'){
fighter4action = 0
sonjaaction = 0
sonjacurrentdamage = sonjahandstdamage;
sonjacurrentdamage += sonjabonusdamage;
fighter4totaldamage += sonjacurrentdamage 
enemy1health -= sonjacurrentdamage;
}
if (this.fighter5name == 'Sonja'){
fighter5action = 0
sonjaaction = 0
sonjacurrentdamage = sonjahandstdamage;
sonjacurrentdamage += sonjabonusdamage;
fighter5totaldamage += sonjacurrentdamage 
enemy1health -= sonjacurrentdamage;
}
if (this.fighter6name == 'Sonja'){
fighter6action = 0
sonjaaction = 0
if (fighter6charge0active == true){
        sonjacurrentdamage = sonjahandstdamage;
        sonjacurrentdamage += sonjabonusdamage;
        fighter6totaldamage += sonjacurrentdamage 
        enemy1health -= sonjacurrentdamage;
}
     if (fighter6charge1active == true){
        sonjacurrentdamage = sonjahandstdamage + 1000;
        sonjacurrentdamage += sonjabonusdamage;
        fighter6totaldamage += sonjacurrentdamage 
        enemy1health -= sonjacurrentdamage;
        fighter6focuscharge -= 1
        fighter6charge1active = false
        fighter6focuschargebox1.clearTint();
        
}
     if (fighter6charge2active == true){
        sonjacurrentdamage = sonjahandstdamage + 2000;
        sonjacurrentdamage += sonjabonusdamage;
        fighter6totaldamage += sonjacurrentdamage 
        enemy1health -= sonjacurrentdamage;
        fighter6focuscharge -= 2
        fighter6charge2active = false
        fighter6focuschargebox1.clearTint();
        fighter6focuschargebox2.clearTint();

}
    if (fighter6charge3active == true){
        sonjacurrentdamage = sonjahandstdamage + 4000;
        sonjacurrentdamage += sonjabonusdamage;
        fighter6totaldamage += sonjacurrentdamage 
        enemy1health -= sonjacurrentdamage;
        fighter6focuscharge -= 3
        fighter6charge3active = false
        fighter6focuschargebox1.clearTint();
        fighter6focuschargebox2.clearTint();
        fighter6focuschargebox3.clearTint();

}
    if (fighter6charge4active == true){
        sonjacurrentdamage = sonjahandstdamage + 5500;
        sonjacurrentdamage += sonjabonusdamage;
        fighter6totaldamage += sonjacurrentdamage 
        enemy1health -= sonjacurrentdamage;
        fighter6focuscharge -= 4
        fighter6charge4active = false
        fighter6focuschargebox1.clearTint();
        fighter6focuschargebox2.clearTint();
        fighter6focuschargebox3.clearTint();
        fighter6focuschargebox4.clearTint();

}
if (fighter6charge5active == true){
        sonjacurrentdamage = sonjahandstdamage + 7000;
        sonjacurrentdamage += sonjabonusdamage;
        fighter6totaldamage += sonjacurrentdamage 
        enemy1health -= sonjacurrentdamage;
        fighter6focuscharge -= 5
        fighter6charge5active = false
        fighter6focuschargebox1.clearTint();
        fighter6focuschargebox2.clearTint();
        fighter6focuschargebox3.clearTint();
        fighter6focuschargebox4.clearTint();
        fighter6focuschargebox5.clearTint();

}
fighter6damagefloatup = true
fighter6currentdamage = sonjacurrentdamage

}
}
}
}
}

if (issonjaattackingblaster == true){
if (issonjaattackingnow == true){
if (sonja.x < sonjaattacktargetx) {
sonjaspells.visible = true
sonjaspells.anims.play('sonjablastergr', true);
sonjaspells.x += 45 

if (sonjaspells.x > sonjaattacktargetx - 25) {
sonjablasterexplodenumber = 5
issonjablasterexplode = true
sonja.setScale(1.4, 1.4);
sonjaspells.setScale(1.4, 1.4);
if (this.fighter1name == 'Sonja'){
fighter1action = 0
sonjaaction = 0
sonjacurrentdamage = sonjablasterdamage;
sonjacurrentdamage += sonjabonusdamage;
fighter1totaldamage += sonjacurrentdamage 
enemy1health -= sonjacurrentdamage;
}
if (this.fighter2name == 'Sonja'){
fighter2action = 0
sonjaaction = 0
sonjacurrentdamage = sonjablasterdamage;
sonjacurrentdamage += sonjabonusdamage;
fighter2totaldamage += sonjacurrentdamage 
enemy1health -= sonjacurrentdamage;
}
if (this.fighter3name == 'Sonja'){
fighter3action = 0
sonjaaction = 0
sonjacurrentdamage = sonjablasterdamage;
sonjacurrentdamage += sonjabonusdamage;
fighter3totaldamage += sonjacurrentdamage 
enemy1health -= sonjacurrentdamage;
}
if (this.fighter4name == 'Sonja'){
fighter4action = 0
sonjaaction = 0
sonjacurrentdamage = sonjablasterdamage;
sonjacurrentdamage += sonjabonusdamage;
fighter4totaldamage += sonjacurrentdamage 
enemy1health -= sonjacurrentdamage;
}
if (this.fighter5name == 'Sonja'){
fighter5action = 0
sonjaaction = 0
sonjacurrentdamage = sonjablasterdamage;
sonjacurrentdamage += sonjabonusdamage;
fighter5totaldamage += sonjacurrentdamage 
enemy1health -= sonjacurrentdamage;
}
if (this.fighter6name == 'Sonja'){
fighter6action = 0
sonjaaction = 0
if (fighter6charge0active == true){
        sonjacurrentdamage = sonjablasterdamage;
        sonjacurrentdamage += sonjabonusdamage;
        fighter6totaldamage += sonjacurrentdamage 
        enemy1health -= sonjacurrentdamage;
}
     if (fighter6charge1active == true){
        sonjacurrentdamage = sonjablasterdamage + 1000;
        sonjacurrentdamage += sonjabonusdamage;
        fighter6totaldamage += sonjacurrentdamage 
        enemy1health -= sonjacurrentdamage;
        fighter6focuscharge -= 1
        fighter6charge1active = false
        fighter6focuschargebox1.clearTint();
        
}
     if (fighter6charge2active == true){
        sonjacurrentdamage = sonjablasterdamage + 2000;
        sonjacurrentdamage += sonjabonusdamage;
        fighter6totaldamage += sonjacurrentdamage 
        enemy1health -= sonjacurrentdamage;
        fighter6focuscharge -= 2
        fighter6charge2active = false
        fighter6focuschargebox1.clearTint();
        fighter6focuschargebox2.clearTint();

}
    if (fighter6charge3active == true){
        sonjacurrentdamage = sonjablasterdamage + 4000;
        sonjacurrentdamage += sonjabonusdamage;
        fighter6totaldamage += sonjacurrentdamage 
        enemy1health -= sonjacurrentdamage;
        fighter6focuscharge -= 3
        fighter6charge3active = false
        fighter6focuschargebox1.clearTint();
        fighter6focuschargebox2.clearTint();
        fighter6focuschargebox3.clearTint();

}
    if (fighter6charge4active == true){
        sonjacurrentdamage = sonjablasterdamage + 5500;
        sonjacurrentdamage += sonjabonusdamage;
        fighter6totaldamage += sonjacurrentdamage 
        enemy1health -= sonjacurrentdamage;
        fighter6focuscharge -= 4
        fighter6charge4active = false
        fighter6focuschargebox1.clearTint();
        fighter6focuschargebox2.clearTint();
        fighter6focuschargebox3.clearTint();
        fighter6focuschargebox4.clearTint();

}
if (fighter6charge5active == true){
        sonjacurrentdamage = sonjablasterdamage + 7000;
        sonjacurrentdamage += sonjabonusdamage;
        fighter6totaldamage += sonjacurrentdamage 
        enemy1health -= sonjacurrentdamage;
        fighter6focuscharge -= 5
        fighter6charge5active = false
        fighter6focuschargebox1.clearTint();
        fighter6focuschargebox2.clearTint();
        fighter6focuschargebox3.clearTint();
        fighter6focuschargebox4.clearTint();
        fighter6focuschargebox5.clearTint();

}
fighter6damagefloatup = true
fighter6currentdamage = sonjacurrentdamage
}
sonjaidle = true
sonjaspells.x = sonja.x
issonjaattackingblaster = false
issonjaattackingnow = false
issonjatargetpicked = false
sonjabuttonselected = false
actionquenumber -= 1
}
}
}
}
if (issonjaattackingkiss == true){
if (issonjaattackingnow == true){
if (sonja.x < sonjaattacktargetx -300 ) {

sonja.anims.play('sonjarun', true);
sonja.x += 25 

if (sonja.x > sonjaattacktargetx - 301) {

sonjaspells.x = subzero.x - 50
sonjaspells.y = subzero.y - 100
sonjaspells.anims.play('sonjakissgr', true);
sonjaspells.visible = true
sonja.anims.play('sonjakiss', true);
if (this.fighter6name == 'sonja'){
sonjaidle = true
sonja.x = 360
sonjaspells.x = sonja.x
issonjaattackingkiss = false
issonjaattackingnow = false
issonjatargetpicked = false
}
}
}
}
}
if (issonjaattackingdancer == true){
if (issonjaattackingnow == true){
if (sonja.x < sonjaattacktargetx -300 ) {

sonja.anims.play('sonjarun', true);
sonja.x += 25 

if (sonja.x > sonjaattacktargetx - 301) {
sonja.anims.play('sonjadancer', true);
if (this.fighter6name == 'sonja'){

sonjaidle = true
sonja.x = 360
issonjaattackingdancer = false
issonjaattackingnow = false
issonjatargetpicked = false
}
}
}
}
}
if (issonjaattackingkicks == true){
if (issonjaattackingnow == true){
if (sonja.x < sonjaattacktargetx) {
sonjaidle = false
sonja.anims.play('sonjarun', true);
sonja.x += 25 

if (sonja.x > sonjaattacktargetx - 5) {
sonja.anims.play('sonjakicks', true);
if (this.fighter1name == 'Sonja'){
fighter1action = 0
sonjaaction = 0
sonjacurrentdamage = sonjakicksdamage;
sonjacurrentdamage += sonjabonusdamage;
fighter1totaldamage += sonjacurrentdamage 
enemy1health -= sonjacurrentdamage;
}
if (this.fighter2name == 'Sonja'){
fighter2action = 0
sonjaaction = 0
sonjacurrentdamage = sonjakicksdamage;
sonjacurrentdamage += sonjabonusdamage;
fighter2totaldamage += sonjacurrentdamage 
enemy1health -= sonjacurrentdamage;
}
if (this.fighter3name == 'Sonja'){
fighter3action = 0
sonjaaction = 0
sonjacurrentdamage = sonjakicksdamage;
sonjacurrentdamage += sonjabonusdamage;
fighter3totaldamage += sonjacurrentdamage 
enemy1health -= sonjacurrentdamage;
}
if (this.fighter4name == 'Sonja'){
fighter4action = 0
sonjaaction = 0
sonjacurrentdamage = sonjakicksdamage;
sonjacurrentdamage += sonjabonusdamage;
fighter4totaldamage += sonjacurrentdamage 
enemy1health -= sonjacurrentdamage;
}
if (this.fighter5name == 'Sonja'){
fighter5action = 0
sonjaaction = 0
sonjacurrentdamage = sonjakicksdamage;
sonjacurrentdamage += sonjabonusdamage;
fighter5totaldamage += sonjacurrentdamage 
enemy1health -= sonjacurrentdamage;
}
if (this.fighter6name == 'Sonja'){
fighter6action = 0
sonjaaction = 0
if (fighter6charge0active == true){
        sonjacurrentdamage = sonjakicksdamage;
        sonjacurrentdamage += sonjabonusdamage;
        fighter6totaldamage += sonjacurrentdamage 
        enemy1health -= sonjacurrentdamage;
}
     if (fighter6charge1active == true){
        sonjacurrentdamage = sonjakicksdamage + 1000;
        sonjacurrentdamage += sonjabonusdamage;
        fighter6totaldamage += sonjacurrentdamage 
        enemy1health -= sonjacurrentdamage;
        fighter6focuscharge -= 1
        fighter6charge1active = false
        fighter6focuschargebox1.clearTint();
        
}
     if (fighter6charge2active == true){
        sonjacurrentdamage = sonjakicksdamage + 2000;
        sonjacurrentdamage += sonjabonusdamage;
        fighter6totaldamage += sonjacurrentdamage 
        enemy1health -= sonjacurrentdamage;
        fighter6focuscharge -= 2
        fighter6charge2active = false
        fighter6focuschargebox1.clearTint();
        fighter6focuschargebox2.clearTint();

}
    if (fighter6charge3active == true){
        sonjacurrentdamage = sonjakicksdamage + 4000;
        sonjacurrentdamage += sonjabonusdamage;
        fighter6totaldamage += sonjacurrentdamage 
        enemy1health -= sonjacurrentdamage;
        fighter6focuscharge -= 3
        fighter6charge3active = false
        fighter6focuschargebox1.clearTint();
        fighter6focuschargebox2.clearTint();
        fighter6focuschargebox3.clearTint();

}
    if (fighter6charge4active == true){
        sonjacurrentdamage = sonjakicksdamage + 5500;
        sonjacurrentdamage += sonjabonusdamage;
        fighter6totaldamage += sonjacurrentdamage 
        enemy1health -= sonjacurrentdamage;
        fighter6focuscharge -= 4
        fighter6charge4active = false
        fighter6focuschargebox1.clearTint();
        fighter6focuschargebox2.clearTint();
        fighter6focuschargebox3.clearTint();
        fighter6focuschargebox4.clearTint();

}
if (fighter6charge5active == true){
        sonjacurrentdamage = sonjakicksdamage + 7000;
        sonjacurrentdamage += sonjabonusdamage;
        fighter6totaldamage += sonjacurrentdamage 
        enemy1health -= sonjacurrentdamage;
        fighter6focuscharge -= 5
        fighter6charge5active = false
        fighter6focuschargebox1.clearTint();
        fighter6focuschargebox2.clearTint();
        fighter6focuschargebox3.clearTint();
        fighter6focuschargebox4.clearTint();
        fighter6focuschargebox5.clearTint();

}
fighter6damagefloatup = true
fighter6currentdamage = sonjacurrentdamage

}
}
}
}
}
}
}
}


//terraattack
//terraonattack
function terraonattack ()
{
if (terraactive == true) {
if (battlemode == true) {
if (isterracastingfire == true){
if (isterracastingnow == true){
if (this.fighter1name == 'Terra'){
fighter1action = 0
terraaction = 0
terracurrentdamage = terrafiredamage;
terracurrentdamage += terrabonusdamage;
fighter1totaldamage += terracurrentdamage 
enemy1health -= terracurrentdamage;
}
if (this.fighter2name == 'Terra'){
fighter2action = 0
terraaction = 0
terracurrentdamage = terrafiredamage;
terracurrentdamage += terrabonusdamage;
fighter2totaldamage += terracurrentdamage 
enemy1health -= terracurrentdamage;
}
if (this.fighter3name == 'Terra'){
fighter3action = 0
terraaction = 0
terracurrentdamage = terrafiredamage;
terracurrentdamage += terrabonusdamage;
fighter3totaldamage += terracurrentdamage 
enemy1health -= terracurrentdamage;
}
if (this.fighter4name == 'Terra'){
fighter4action = 0
terraaction = 0
terracurrentdamage = terrafiredamage;
terracurrentdamage += terrabonusdamage;
fighter4totaldamage += terracurrentdamage 
enemy1health -= terracurrentdamage;
}
if (this.fighter5name == 'Terra'){
fighter5action = 0
terraaction = 0
if (fighter5charge0active == true){
        terracurrentdamage = terrafiredamage;
        terracurrentdamage += terrabonusdamage;
        fighter5totaldamage += terracurrentdamage 
        enemy1health -= terracurrentdamage;
}
     if (fighter5charge1active == true){
        terracurrentdamage = terrafiredamage + 1000;
        terracurrentdamage += terrabonusdamage;
        fighter5totaldamage += terracurrentdamage 
        enemy1health -= terracurrentdamage;
        fighter5focuscharge -= 1
        fighter5charge1active = false
        fighter5focuschargebox1.clearTint();
        
}
     if (fighter5charge2active == true){
        terracurrentdamage = terrafiredamage + 2000;
        terracurrentdamage += terrabonusdamage;
        fighter5totaldamage += terracurrentdamage 
        enemy1health -= terracurrentdamage;
        fighter5focuscharge -= 2
        fighter5charge2active = false
        fighter5focuschargebox1.clearTint();
        fighter5focuschargebox2.clearTint();

}
    if (fighter5charge3active == true){
        terracurrentdamage = terrafiredamage + 4000;
        terracurrentdamage += terrabonusdamage;
        fighter5totaldamage += terracurrentdamage 
        enemy1health -= terracurrentdamage;
        fighter5focuscharge -= 3
        fighter5charge3active = false
        fighter5focuschargebox1.clearTint();
        fighter5focuschargebox2.clearTint();
        fighter5focuschargebox3.clearTint();

}
    if (fighter5charge4active == true){
        terracurrentdamage = terrafiredamage + 5500;
        terracurrentdamage += terrabonusdamage;
        fighter5totaldamage += terracurrentdamage 
        enemy1health -= terracurrentdamage;
        fighter5focuscharge -= 4
        fighter5charge4active = false
        fighter5focuschargebox1.clearTint();
        fighter5focuschargebox2.clearTint();
        fighter5focuschargebox3.clearTint();
        fighter5focuschargebox4.clearTint();

}
if (fighter5charge5active == true){
        terracurrentdamage = terrafiredamage + 7000;
        terracurrentdamage += terrabonusdamage;
        fighter5totaldamage += terracurrentdamage 
        enemy1health -= terracurrentdamage;
        fighter5focuscharge -= 5
        fighter5charge5active = false
        fighter5focuschargebox1.clearTint();
        fighter5focuschargebox2.clearTint();
        fighter5focuschargebox3.clearTint();
        fighter5focuschargebox4.clearTint();
        fighter5focuschargebox5.clearTint();

}
fighter5damagefloatup = true
fighter5currentdamage = terracurrentdamage

}
if (this.fighter6name == 'Terra'){
fighter6action = 0
terraaction = 0
terracurrentdamage = terrafiredamage;
terracurrentdamage += terrabonusdamage;
fighter6totaldamage += terracurrentdamage 
enemy1health -= terracurrentdamage;
}
}
}
if (isterracastingice == true){
if (isterracastingnow == true){


if (this.fighter1name == 'Terra'){
fighter1action = 0
terraaction = 0
terracurrentdamage = terraicedamage;
terracurrentdamage += terrabonusdamage;
fighter1totaldamage += terracurrentdamage 
enemy1health -= terracurrentdamage;
}
if (this.fighter2name == 'Terra'){
fighter2action = 0
terraaction = 0
terracurrentdamage = terraicedamage;
terracurrentdamage += terrabonusdamage;
fighter2totaldamage += terracurrentdamage 
enemy1health -= terracurrentdamage;
}
if (this.fighter3name == 'Terra'){
fighter3action = 0
terraaction = 0
terracurrentdamage = terraicedamage;
terracurrentdamage += terrabonusdamage;
fighter3totaldamage += terracurrentdamage 
enemy1health -= terracurrentdamage;
}
if (this.fighter4name == 'Terra'){
fighter4action = 0
terraaction = 0
terracurrentdamage = terraicedamage;
terracurrentdamage += terrabonusdamage;
fighter4totaldamage += terracurrentdamage 
enemy1health -= terracurrentdamage;
}
if (this.fighter5name == 'Terra'){
fighter5action = 0
terraaction = 0
if (fighter5charge0active == true){
        terracurrentdamage = terraicedamage;
        terracurrentdamage += terrabonusdamage;
        fighter5totaldamage += terracurrentdamage 
        enemy1health -= terracurrentdamage;
}
     if (fighter5charge1active == true){
        terracurrentdamage = terraicedamage + 1000;
        terracurrentdamage += terrabonusdamage;
        fighter5totaldamage += terracurrentdamage 
        enemy1health -= terracurrentdamage;
        fighter5focuscharge -= 1
        fighter5charge1active = false
        fighter5focuschargebox1.clearTint();
        
}
     if (fighter5charge2active == true){
        terracurrentdamage = terraicedamage + 2000;
        terracurrentdamage += terrabonusdamage;
        fighter5totaldamage += terracurrentdamage 
        enemy1health -= terracurrentdamage;
        fighter5focuscharge -= 2
        fighter5charge2active = false
        fighter5focuschargebox1.clearTint();
        fighter5focuschargebox2.clearTint();

}
    if (fighter5charge3active == true){
        terracurrentdamage = terraicedamage + 4000;
        terracurrentdamage += terrabonusdamage;
        fighter5totaldamage += terracurrentdamage 
        enemy1health -= terracurrentdamage;
        fighter5focuscharge -= 3
        fighter5charge3active = false
        fighter5focuschargebox1.clearTint();
        fighter5focuschargebox2.clearTint();
        fighter5focuschargebox3.clearTint();

}
    if (fighter5charge4active == true){
        terracurrentdamage = terraicedamage + 5500;
        terracurrentdamage += terrabonusdamage;
        fighter5totaldamage += terracurrentdamage 
        enemy1health -= terracurrentdamage;
        fighter5focuscharge -= 4
        fighter5charge4active = false
        fighter5focuschargebox1.clearTint();
        fighter5focuschargebox2.clearTint();
        fighter5focuschargebox3.clearTint();
        fighter5focuschargebox4.clearTint();

}
if (fighter5charge5active == true){
        terracurrentdamage = terraicedamage + 7000;
        terracurrentdamage += terrabonusdamage;
        fighter5totaldamage += terracurrentdamage 
        enemy1health -= terracurrentdamage;
        fighter5focuscharge -= 5
        fighter5charge5active = false
        fighter5focuschargebox1.clearTint();
        fighter5focuschargebox2.clearTint();
        fighter5focuschargebox3.clearTint();
        fighter5focuschargebox4.clearTint();
        fighter5focuschargebox5.clearTint();

}
fighter5damagefloatup = true
fighter5currentdamage = terracurrentdamage
}
if (this.fighter6name == 'Terra'){
fighter6action = 0
terraaction = 0
terracurrentdamage = terraicedamage;
terracurrentdamage += terrabonusdamage;
fighter6totaldamage += terracurrentdamage 
enemy1health -= terracurrentdamage;
}
}
}
if (isterracastingwind == true){
if (isterracastingnow == true){


if (this.fighter1name == 'Terra'){
fighter1action = 0
terraaction = 0
terracurrentdamage = terrawinddamage;
terracurrentdamage += terrabonusdamage;
fighter1totaldamage += terracurrentdamage 
enemy1health -= terracurrentdamage;
}
if (this.fighter2name == 'Terra'){
fighter2action = 0
terraaction = 0
terracurrentdamage = terrawinddamage;
terracurrentdamage += terrabonusdamage;
fighter2totaldamage += terracurrentdamage 
enemy1health -= terracurrentdamage;
}
if (this.fighter3name == 'Terra'){
fighter3action = 0
terraaction = 0
terracurrentdamage = terrawinddamage;
terracurrentdamage += terrabonusdamage;
fighter3totaldamage += terracurrentdamage 
enemy1health -= terracurrentdamage;
}
if (this.fighter4name == 'Terra'){
fighter4action = 0
terraaction = 0
terracurrentdamage = terrawinddamage;
terracurrentdamage += terrabonusdamage;
fighter4totaldamage += terracurrentdamage 
enemy1health -= terracurrentdamage;
}
if (this.fighter5name == 'Terra'){
fighter5action = 0
terraaction = 0
if (fighter5charge0active == true){
        terracurrentdamage = terrawinddamage;
        terracurrentdamage += terrabonusdamage;
        fighter5totaldamage += terracurrentdamage 
        enemy1health -= terracurrentdamage;
}
     if (fighter5charge1active == true){
        terracurrentdamage = terrawinddamage + 1000;
        terracurrentdamage += terrabonusdamage;
        fighter5totaldamage += terracurrentdamage 
        enemy1health -= terracurrentdamage;
        fighter5focuscharge -= 1
        fighter5charge1active = false
        fighter5focuschargebox1.clearTint();
        
}
     if (fighter5charge2active == true){
        terracurrentdamage = terrawinddamage + 2000;
        terracurrentdamage += terrabonusdamage;
        fighter5totaldamage += terracurrentdamage 
        enemy1health -= terracurrentdamage;
        fighter5focuscharge -= 2
        fighter5charge2active = false
        fighter5focuschargebox1.clearTint();
        fighter5focuschargebox2.clearTint();

}
    if (fighter5charge3active == true){
        terracurrentdamage = terrawinddamage + 4000;
        terracurrentdamage += terrabonusdamage;
        fighter5totaldamage += terracurrentdamage 
        enemy1health -= terracurrentdamage;
        fighter5focuscharge -= 3
        fighter5charge3active = false
        fighter5focuschargebox1.clearTint();
        fighter5focuschargebox2.clearTint();
        fighter5focuschargebox3.clearTint();

}
    if (fighter5charge4active == true){
        terracurrentdamage = terrawinddamage + 5500;
        terracurrentdamage += terrabonusdamage;
        fighter5totaldamage += terracurrentdamage 
        enemy1health -= terracurrentdamage;
        fighter5focuscharge -= 4
        fighter5charge4active = false
        fighter5focuschargebox1.clearTint();
        fighter5focuschargebox2.clearTint();
        fighter5focuschargebox3.clearTint();
        fighter5focuschargebox4.clearTint();

}
if (fighter5charge5active == true){
        terracurrentdamage = terrawinddamage + 7000;
        terracurrentdamage += terrabonusdamage;
        fighter5totaldamage += terracurrentdamage 
        enemy1health -= terracurrentdamage;
        fighter5focuscharge -= 5
        fighter5charge5active = false
        fighter5focuschargebox1.clearTint();
        fighter5focuschargebox2.clearTint();
        fighter5focuschargebox3.clearTint();
        fighter5focuschargebox4.clearTint();
        fighter5focuschargebox5.clearTint();

}
fighter5damagefloatup = true
fighter5currentdamage = terracurrentdamage
}
if (this.fighter6name == 'Terra'){
fighter6action = 0
terraaction = 0
terracurrentdamage = terrawinddamage;
terracurrentdamage += terrabonusdamage;
fighter6totaldamage += terracurrentdamage 
enemy1health -= terracurrentdamage;
}
}
}
if (isterracastingearth == true){
if (isterracastingnow == true){


if (this.fighter1name == 'Terra'){
fighter1action = 0
terraaction = 0
terracurrentdamage = terraearthdamage;
terracurrentdamage += terrabonusdamage;
fighter1totaldamage += terracurrentdamage 
enemy1health -= terracurrentdamage;
}
if (this.fighter2name == 'Terra'){
fighter2action = 0
terraaction = 0
terracurrentdamage = terraearthdamage;
terracurrentdamage += terrabonusdamage;
fighter2totaldamage += terracurrentdamage 
enemy1health -= terracurrentdamage;
}
if (this.fighter3name == 'Terra'){
fighter3action = 0
terraaction = 0
terracurrentdamage = terraearthdamage;
terracurrentdamage += terrabonusdamage;
fighter3totaldamage += terracurrentdamage 
enemy1health -= terracurrentdamage;
}
if (this.fighter4name == 'Terra'){
fighter4action = 0
terraaction = 0
terracurrentdamage = terraearthdamage;
terracurrentdamage += terrabonusdamage;
fighter4totaldamage += terracurrentdamage 
enemy1health -= terracurrentdamage;
}
if (this.fighter5name == 'Terra'){
fighter5action = 0
terraaction = 0
if (fighter5charge0active == true){
        terracurrentdamage = terraearthdamage;
        terracurrentdamage += terrabonusdamage;
        fighter5totaldamage += terracurrentdamage 
        enemy1health -= terracurrentdamage;
}
     if (fighter5charge1active == true){
        terracurrentdamage = terraearthdamage + 1000;
        terracurrentdamage += terrabonusdamage;
        fighter5totaldamage += terracurrentdamage 
        enemy1health -= terracurrentdamage;
        fighter5focuscharge -= 1
        fighter5charge1active = false
        fighter5focuschargebox1.clearTint();
        
}
     if (fighter5charge2active == true){
        terracurrentdamage = terraearthdamage + 2000;
        terracurrentdamage += terrabonusdamage;
        fighter5totaldamage += terracurrentdamage 
        enemy1health -= terracurrentdamage;
        fighter5focuscharge -= 2
        fighter5charge2active = false
        fighter5focuschargebox1.clearTint();
        fighter5focuschargebox2.clearTint();

}
    if (fighter5charge3active == true){
        terracurrentdamage = terraearthdamage + 4000;
        terracurrentdamage += terrabonusdamage;
        fighter5totaldamage += terracurrentdamage 
        enemy1health -= terracurrentdamage;
        fighter5focuscharge -= 3
        fighter5charge3active = false
        fighter5focuschargebox1.clearTint();
        fighter5focuschargebox2.clearTint();
        fighter5focuschargebox3.clearTint();

}
    if (fighter5charge4active == true){
        terracurrentdamage = terraearthdamage + 5500;
        terracurrentdamage += terrabonusdamage;
        fighter5totaldamage += terracurrentdamage 
        enemy1health -= terracurrentdamage;
        fighter5focuscharge -= 4
        fighter5charge4active = false
        fighter5focuschargebox1.clearTint();
        fighter5focuschargebox2.clearTint();
        fighter5focuschargebox3.clearTint();
        fighter5focuschargebox4.clearTint();

}
if (fighter5charge5active == true){
        terracurrentdamage = terraearthdamage + 7000;
        terracurrentdamage += terrabonusdamage;
        fighter5totaldamage += terracurrentdamage 
        enemy1health -= terracurrentdamage;
        fighter5focuscharge -= 5
        fighter5charge5active = false
        fighter5focuschargebox1.clearTint();
        fighter5focuschargebox2.clearTint();
        fighter5focuschargebox3.clearTint();
        fighter5focuschargebox4.clearTint();
        fighter5focuschargebox5.clearTint();

}
fighter5damagefloatup = true
fighter5currentdamage = terracurrentdamage

}
if (this.fighter6name == 'Terra'){
fighter6action = 0
terraaction = 0
terracurrentdamage = terraearthdamage;
terracurrentdamage += terrabonusdamage;
fighter6totaldamage += terracurrentdamage 
enemy1health -= terracurrentdamage;
}
}
}
}
}
}
//************************************
//explodes

function explodetime ()
{
if (isorchidfirebaexplode == true)
orchidfirebaexplodenumber -= 0.3;
{
if (orchidfirebaexplodenumber > 1)
{
orchidfirebaexplode.y = orchidspells.y
orchidfirebaexplode.x = orchidattacktargetx - 50
orchidfirebaexplode.visible = true
orchidfirebaexplode.anims.play('orchidfirebaexplode', true);
}
if (orchidfirebaexplodenumber < 1)
{
orchidfirebaexplode.visible = false
isorchidfirebaexplode = false
}
}

if (issonjablasterexplode == true)
sonjablasterexplodenumber -= 0.3;
{
if (sonjablasterexplodenumber > 1)
{
sonjablasterexplode.y = sonjaspells.y
sonjablasterexplode.x = sonjaattacktargetx - 50
sonjablasterexplode.visible = true
sonjablasterexplode.anims.play('sonjablasterexplode', true);
}
if (sonjablasterexplodenumber < 1)
{
sonjablasterexplode.visible = false
issonjablasterexplode = false
}
}

if (iskanobladebleed == true)
kanobladebleednumber -= 0.3;
{
if (kanobladebleednumber > 1)
{
kanobladebleed.y = kanobladespells.y
kanobladebleed.x = kanoattacktargetx - 75
kanobladebleed.visible = true
kanobladebleed.anims.play('kanobladebleed', true);
}
if (kanobladebleednumber < 1)
{
kanobladebleed.visible = false
iskanobladebleed = false
}
}


if (iskangfireballexplode == true)
kangfireballexplodenumber -= 0.3;
{
if (kangfireballexplodenumber > 1)
{
kangfireballexplode.y = kangspells.y
kangfireballexplode.x = kangattacktargetx - 50
kangfireballexplode.visible = true
kangfireballexplode.anims.play('kangfireballexplode', true);
}
if (kangfireballexplodenumber < 1)
{
kangfireballexplode.visible = false
iskangfireballexplode = false
}
}

if (iskangprayerboltstrike == true)
{
kangprayerboltstrikenumber -= 0.5;
kangprayerboltstrike.visible = true
kangprayerboltstrike.anims.play('kangprayerbolt', true);
}
}

//************************************
//endattacksbegin
//endattack
function endattacks ()
{
if (kangactive == true) {
if (iskangtargetpicked == true){
if (iskangattackingdragon == true){
endkangattacknumber += 1;
if (endkangattacknumber > 3) {
kangidle = true
kang.x = 450
iskangattackingdragon = false
iskangattackingnow = false
iskangtargetpicked = false
iskangpickingtarget = false
kang.setScale(1.4, 1.4);
kangspells.setScale(1, 1);
subzero.clearTint();
endkangattacknumber = 0
kangbuttonselected = false
kangcurrentdamage = 0
actionquenumber -= 1
}
}
}


if (iskangtargetpicked == true){
if (iskangattackingprayer == true){
endkangattacknumber += 1;
if (endkangattacknumber > 3) {
kangidle = true
kang.x = 450
iskangattackingprayer = false
iskangattackingnow = false
iskangtargetpicked = false
iskangpickingtarget = false
iskangprayerboltstrike = false
kangprayerboltstrike.visible = false
kang.setScale(1.4, 1.4);
kangspells.setScale(1, 1);
subzero.clearTint();
endkangattacknumber = 0
kangbuttonselected = false
kangcurrentdamage = 0
actionquenumber -= 1
kangprayerboltstrikenumber = 4
}
}
}

if (iskangtargetpicked == true){
if (iskangattackingbicycle == true){
endkangattacknumber += 1;
if (endkangattacknumber > 3) {
kangidle = true
kang.x = 450
iskangattackingbicycle = false
iskangattackingnow = false
iskangtargetpicked = false
iskangpickingtarget = false
kang.setScale(1.4, 1.4);
kangspells.setScale(1, 1);
subzero.clearTint();
endkangattacknumber = 0
actionquenumber -= 1
kangbuttonselected = false
kangcurrentdamage = 0
}
}
}
}


//spinalendattack
if (spinalactive == true) {
if (isspinaltargetpicked == true){
endspinalattacknumber += 1;
if (endspinalattacknumber > 4) {
spinalidle = true
spinal.x = 450
isspinalattackingslice = false
isspinalattackingslash = false
isspinalattackingbash = false
isspinalattackingspike = false
isspinalattackingblock = false
isspinalattackingnow = false
isspinaltargetpicked = false
actionquenumber -= 1
isspinalpickingtarget = false
subzero.clearTint();
spinal.setScale(1.0, 1.0);
endspinalattacknumber = 0
spinalbuttonselected = false
spinalcurrentdamage = 0
}
}
}

//comboendattack
if (comboactive == true) {
if (iscombotargetpicked == true){
endcomboattacknumber += 1;
if (endcomboattacknumber > 4) {
comboidle = true
combo.x = 450
iscomboattackingpunch = false
iscomboattackingjumpkick = false
iscomboattackinggun = false
iscomboattackingslam = false
iscomboattackingmuscle = false
iscomboattackingnow = false
iscombotargetpicked = false
iscombopickingtarget = false
subzero.clearTint();
endcomboattacknumber = 0
actionquenumber -= 1
combobuttonselected = false
combocurrentdamage = 0
}
}
}


//kanoendattack
if (iskanotargetpicked == true){
endkanoattacknumber += 1;
if (endkanoattacknumber > 4) {
kanoidle = true
kano.x = 380
iskanoattackingcut = false
iskanoattackingkick = false
iskanoattackinghell = false
iskanoattackinglaser = false
iskanoattackingblades = false
iskanoattackingnow = false
iskanotargetpicked = false
iskanopickingtarget = false
kano.setScale(1.4, 1.4);
kanospells.setScale(1, 1);
kanospellsfx.setScale(1, 1);
kanobladespells.setScale(1, 1);
subzero.clearTint();
endkanoattacknumber = 0
actionquenumber -= 1
kanobuttonselected = false
kanocurrentdamage = 0
}
}

//orchidendattack
if (isorchidtargetpicked == true){
endorchidattacknumber += 1;
if (endorchidattacknumber > 4) {
orchididle = true
orchid.x = 360
isorchidattackingwheel = false
isorchidattackingbaton = false
isorchidattackingfit = false
isorchidattackingnow = false
isorchidtargetpicked = false
isorchidpickingtarget = false
orchid.setScale(1.0, 1.0);
orchidspells.setScale(1, 1);
subzero.clearTint();
endorchidattacknumber = 0
orchidbuttonselected = false
orchidcurrentdamage = 0
actionquenumber -= 1
}
} 
//jagoendattack
if (isjagotargetpicked == true){
endjagoattacknumber += 1;
if (endjagoattacknumber > 4) {
jagoidle = true
jago.x = 340
isjagoattackingsword = false
isjagoattackingrkick = false
isjagoattackingfocus = false
isjagoattackingstab = false
isjagoattackingnow = false
isjagotargetpicked = false
isjagopickingtarget = false
jago.setScale(1.4, 1.4);
jagospells.setScale(1.4, 1.4);
subzero.clearTint();
endjagoattacknumber = 0
jagobuttonselected = false
jagocurrentdamage = 0
actionquenumber -= 1
}
}
//kunglaoendattack
if (iskunglaotargetpicked == true){
endkunglaoattacknumber += 1;
if (endkunglaoattacknumber > 4) {
kunglaoidle = true
kunglao.x = 340
iskunglaoattackingpalmkick = false
iskunglaoattackingwhirl = false
iskunglaoattackingkick = false
iskunglaoattackingnow = false
iskunglaotargetpicked = false
iskunglaopickingtarget = false
kunglao.setScale(1.4, 1.4);
kunglaospells.setScale(1.4, 1.4);
subzero.clearTint();
endkunglaoattacknumber = 0
kunglaobuttonselected = false
kunglaocurrentdamage = 0
actionquenumber -= 1
}
}
//sonjaendattack
if (issonjatargetpicked == true){
endsonjaattacknumber += 1;
if (endsonjaattacknumber > 4) {
sonjaidle = true
sonja.x = 380
issonjaattackinghandst = false
issonjaattackingkiss = false
issonjaattackingdancer = false
issonjaattackingblaster = false
issonjaattackingkicks = false
issonjaattackingnow = false
issonjatargetpicked = false
issonjapickingtarget = false
sonja.setScale(1.4, 1.4);
sonjaspells.setScale(1.4, 1.4);
subzero.clearTint();
actionquenumber -= 1
endsonjaattacknumber = 0
sonjabuttonselected = false
}
}
//terracast
//endterra
if (isterracastingnow == true){
endterracastnumber += 1;
if (endterracastnumber > 4) {
isterracastingnow = false
isterracastingfire = false
isterracastingice = false
isterracastingwind = false
isterracastingearth = false
isterracastingcall = false
isterratargetpicked = false
actionquenumber -= 1
terra.setScale(1.0, 1.0);
terraspells.setScale(1.0, 1.0);
subzero.clearTint();
terrabuttonselected = false
}
}

//rosacast
//endrosa
if (isrosacastingnow == true){
endrosacastnumber += 1;
if (endrosacastnumber > 4) {
isrosacastingnow = false
isrosacastingcure = false
isrosacastingheal = false
isrosacastingfast = false
isrosacastingshell = false
isrosatargetpicked = false
actionquenumber -= 1
subzero.clearTint();

}
}

//mogcast
//endmog
if (ismogcastingnow == true){
endmogcastnumber += 1;
if (endmogcastnumber > 4) {
ismogcastingnow = false
ismogcastingmoon = false
ismogcastingpower = false
ismogcastingdance = false
ismogcastingdream = false
ismogcastingbull = false
ismogtargetpicked = false
actionquenumber -=1 
subzero.clearTint();

}
}

//endattackbreakout
}
//endattackbreakout



function immunetime (){
if (support1status == 'frozen'){
rosaspelltargetx = support1x
rosaspelltargety = support1y + 50;
isrosacastingnow = true
rosaspells.visible = true
rosaspells.anims.play('rosacurespell', true);
rosafrozen = false
support1frozen = false
rosastatus = 'normal'
support1status = 'normal'
rosaidle = true
rosa.clearTint();

}
if (rosastatus == 'frozen'){
rosaspelltargetx = support1x
rosaspelltargety = support1y + 50;
isrosacastingnow = true
rosaspells.visible = true
rosaspells.anims.play('rosacurespell', true);
rosafrozen = false
support1frozen = false
rosastatus = 'normal'
support1status = 'normal'
rosaidle = true
rosa.clearTint();
}
}


//endattacksend
//*****************************
function actionqtime (){
if (actionquenumber > 5){
actionquecountdown = true
actionquetimenumber = 100
}

if (actionquecountdown == true){
focusboostimage.visible = true
actionquetimenumber -= 1
actionqueeffectnumber = 2
support1focustime += 1
support2focustime += 1
leader1focustime += 1
leader2focustime += 1
fighter1focustime += 1
fighter2focustime += 1
fighter3focustime += 1
fighter4focustime += 1
fighter5focustime += 1
fighter6focustime += 1
}

if (actionquecountdown == true){
if (actionquetimenumber < 1){
focusboostimage.visible = false
focusboostimage.y = 500
actionquecountdown = false
actionquetimenumber = 0
actionqueeffectnumber = 1
actionquenumber = 0
}
}

}

//bufftime
//rosabuff
function bufftime ()
{
if (rosafastbuffactive == true){
rosafastbufftime -= 1;
if (rosafastbufftime < 1){
if (rosafastbuffstat == 'leader1-0charge'){
leader1actionregen -= 0.5;
rosafastbuffactive = false
}
if (rosafastbuffstat == 'leader2-0charge'){
leader2actionregen -= 0.5;
rosafastbuffactive = false
}
if (rosafastbuffstat == 'support1-0charge'){
support1actionregen -= 0.5;
rosafastbuffactive = false
}
if (rosafastbuffstat == 'support2-0charge'){
support2actionregen -= 0.5;
rosafastbuffactive = false
}
if (rosafastbuffstat == 'fighter1-0charge'){
fighter1actionregen -= 0.5;
rosafastbuffactive = false
}
if (rosafastbuffstat == 'fighter2-0charge'){
fighter2actionregen -= 0.5;
rosafastbuffactive = false
}
if (rosafastbuffstat == 'fighter3-0charge'){
fighter3actionregen -= 0.5;
rosafastbuffactive = false
}
if (rosafastbuffstat == 'fighter4-0charge'){
fighter4actionregen -= 0.5;
rosafastbuffactive = false
}
if (rosafastbuffstat == 'fighter5-0charge'){
fighter5actionregen -= 0.5;
rosafastbuffactive = false
}
if (rosafastbuffstat == 'fighter6-0charge'){
fighter6actionregen -= 0.5;
rosafastbuffactive = false
}

if (rosafastbuffstat == 'leader1-1charge'){
leader1actionregen -= 1;
rosafastbuffactive = false
}
if (rosafastbuffstat == 'leader1-2charge'){
leader1actionregen -= 1.5;
rosafastbuffactive = false
}
if (rosafastbuffstat == 'leader1-3charge'){
leader1actionregen -= 2;
rosafastbuffactive = false
}
if (rosafastbuffstat == 'leader1-4charge'){
leader1actionregen -= 2.5;
rosafastbuffactive = false
}
if (rosafastbuffstat == 'leader1-5charge'){
leader1actionregen -= 3
leader2actionregen -= 1
support1actionregen -= 1
support2actionregen -= 1
fighter1actionregen -= 1
fighter2actionregen -= 1
fighter3actionregen -= 1
fighter4actionregen -= 1
fighter5actionregen -= 1
fighter6actionregen -= 1
rosafastbuffstat == ''
rosafastbuffactive = false
}
if (rosafastbuffstat == 'leader2-1charge'){
leader2actionregen -= 1;
rosafastbuffactive = false
}
if (rosafastbuffstat == 'leader2-2charge'){
leader2actionregen -= 1.5;
rosafastbuffactive = false
}
if (rosafastbuffstat == 'leader2-3charge'){
leader2actionregen -= 2;
rosafastbuffactive = false
}
if (rosafastbuffstat == 'leader2-4charge'){
leader2actionregen -= 2.5;
rosafastbuffactive = false
}
if (rosafastbuffstat == 'leader2-5charge'){
leader2actionregen -= 3
leader1actionregen -= 1
support1actionregen -= 1
support2actionregen -= 1
fighter1actionregen -= 1
fighter2actionregen -= 1
fighter3actionregen -= 1
fighter4actionregen -= 1
fighter5actionregen -= 1
fighter6actionregen -= 1
rosafastbuffstat == ''
rosafastbuffactive = false
}
if (rosafastbuffstat == 'support1-1charge'){
support1actionregen -= 1;
rosafastbuffactive = false
}
if (rosafastbuffstat == 'support1-2charge'){
support1actionregen -= 1.5;
rosafastbuffactive = false
}
if (rosafastbuffstat == 'support1-3charge'){
support1actionregen -= 2;
rosafastbuffactive = false
}
if (rosafastbuffstat == 'support1-4charge'){
support1actionregen -= 2.5;
rosafastbuffactive = false
}
if (rosafastbuffstat == 'support1-5charge'){
support1actionregen -= 3
leader1actionregen -= 1
leader2actionregen -= 1
support2actionregen -= 1
fighter1actionregen -= 1
fighter2actionregen -= 1
fighter3actionregen -= 1
fighter4actionregen -= 1
fighter5actionregen -= 1
fighter6actionregen -= 1
rosafastbuffstat == ''
rosafastbuffactive = false
}
if (rosafastbuffstat == 'support2-1charge'){
support2actionregen -= 1;
rosafastbuffactive = false
}
if (rosafastbuffstat == 'support2-2charge'){
support2actionregen -= 1.5;
rosafastbuffactive = false
}
if (rosafastbuffstat == 'support2-3charge'){
support2actionregen -= 2;
rosafastbuffactive = false
}
if (rosafastbuffstat == 'support2-4charge'){
support2actionregen -= 2.5;
rosafastbuffactive = false
}
if (rosafastbuffstat == 'support2-5charge'){
support2actionregen -= 3
leader1actionregen -= 1
leader2actionregen -= 1
support1actionregen -= 1
fighter1actionregen -= 1
fighter2actionregen -= 1
fighter3actionregen -= 1
fighter4actionregen -= 1
fighter5actionregen -= 1
fighter6actionregen -= 1
rosafastbuffstat == ''
rosafastbuffactive = false
}
if (rosafastbuffstat == 'fighter1-1charge'){
fighter1actionregen -= 1;
rosafastbuffactive = false
}
if (rosafastbuffstat == 'fighter1-2charge'){
fighter1actionregen -= 1.5;
rosafastbuffactive = false
}
if (rosafastbuffstat == 'fighter1-3charge'){
fighter1actionregen -= 2;
rosafastbuffactive = false
}
if (rosafastbuffstat == 'fighter1-4charge'){
fighter1actionregen -= 2.5;
rosafastbuffactive = false
}
if (rosafastbuffstat == 'fighter1-5charge'){
fighter1actionregen -= 3
leader1actionregen -= 1
leader2actionregen -= 1
support1actionregen -= 1
support2actionregen -= 1
fighter2actionregen -= 1
fighter3actionregen -= 1
fighter4actionregen -= 1
fighter5actionregen -= 1
fighter6actionregen -= 1
rosafastbuffstat == ''
rosafastbuffactive = false
}
if (rosafastbuffstat == 'fighter2-1charge'){
fighter2actionregen -= 1;
rosafastbuffactive = false
}
if (rosafastbuffstat == 'fighter2-2charge'){
fighter2actionregen -= 1.5;
rosafastbuffactive = false
}
if (rosafastbuffstat == 'fighter2-3charge'){
fighter2actionregen -= 2;
rosafastbuffactive = false
}
if (rosafastbuffstat == 'fighter2-4charge'){
fighter2actionregen -= 2.5;
rosafastbuffactive = false
}
if (rosafastbuffstat == 'fighter2-5charge'){
fighter2actionregen -= 3
leader1actionregen -= 1
leader2actionregen -= 1
support1actionregen -= 1
support2actionregen -= 1
fighter1actionregen -= 1
fighter3actionregen -= 1
fighter4actionregen -= 1
fighter5actionregen -= 1
fighter6actionregen -= 1
rosafastbuffstat == ''
rosafastbuffactive = false
}
if (rosafastbuffstat == 'fighter3-1charge'){
fighter3actionregen -= 1;
rosafastbuffactive = false
}
if (rosafastbuffstat == 'fighter3-2charge'){
fighter3actionregen -= 1.5;
rosafastbuffactive = false
}
if (rosafastbuffstat == 'fighter3-3charge'){
fighter3actionregen -= 2;
rosafastbuffactive = false
}
if (rosafastbuffstat == 'fighter3-4charge'){
fighter3actionregen -= 2.5;
rosafastbuffactive = false
}
if (rosafastbuffstat == 'fighter3-5charge'){
fighter3actionregen -= 3
leader1actionregen -= 1
leader2actionregen -= 1
support1actionregen -= 1
support2actionregen -= 1
fighter1actionregen -= 1
fighter2actionregen -= 1
fighter4actionregen -= 1
fighter5actionregen -= 1
fighter6actionregen -= 1
rosafastbuffstat == ''
rosafastbuffactive = false
}
if (rosafastbuffstat == 'fighter4-1charge'){
fighter4actionregen -= 1;
rosafastbuffactive = false
}
if (rosafastbuffstat == 'fighter4-2charge'){
fighter4actionregen -= 1.5;
rosafastbuffactive = false
}
if (rosafastbuffstat == 'fighter4-3charge'){
fighter4actionregen -= 2;
rosafastbuffactive = false
}
if (rosafastbuffstat == 'fighter4-4charge'){
fighter4actionregen -= 2.5;
rosafastbuffactive = false
}
if (rosafastbuffstat == 'fighter4-5charge'){
fighter4actionregen -= 3
leader1actionregen -= 1
leader2actionregen -= 1
support1actionregen -= 1
support2actionregen -= 1
fighter1actionregen -= 1
fighter2actionregen -= 1
fighter3actionregen -= 1
fighter5actionregen -= 1
fighter6actionregen -= 1
rosafastbuffstat == ''
rosafastbuffactive = false
}
if (rosafastbuffstat == 'fighter5-1charge'){
fighter5actionregen -= 1;
rosafastbuffactive = false
}
if (rosafastbuffstat == 'fighter5-2charge'){
fighter5actionregen -= 1.5;
rosafastbuffactive = false
}
if (rosafastbuffstat == 'fighter5-3charge'){
fighter5actionregen -= 2;
rosafastbuffactive = false
}
if (rosafastbuffstat == 'fighter5-4charge'){
fighter5actionregen -= 2.5;
rosafastbuffactive = false
}
if (rosafastbuffstat == 'fighter5-5charge'){
fighter5actionregen -= 3
leader1actionregen -= 1
leader2actionregen -= 1
support1actionregen -= 1
support2actionregen -= 1
fighter1actionregen -= 1
fighter2actionregen -= 1
fighter3actionregen -= 1
fighter4actionregen -= 1
fighter6actionregen -= 1
rosafastbuffstat == ''
rosafastbuffactive = false
}
if (rosafastbuffstat == 'fighter6-1charge'){
fighter6actionregen -= 1;
rosafastbuffactive = false
}
if (rosafastbuffstat == 'fighter6-2charge'){
fighter6actionregen -= 1.5;
rosafastbuffactive = false
}
if (rosafastbuffstat == 'fighter6-3charge'){
fighter6actionregen -= 2;
rosafastbuffactive = false
}
if (rosafastbuffstat == 'fighter6-4charge'){
fighter6actionregen -= 2.5;
rosafastbuffactive = false
}
if (rosafastbuffstat == 'fighter6-5charge'){
fighter6actionregen -= 3
leader1actionregen -= 1
leader2actionregen -= 1
support1actionregen -= 1
support2actionregen -= 1
fighter1actionregen -= 1
fighter2actionregen -= 1
fighter3actionregen -= 1
fighter4actionregen -= 1
fighter5actionregen -= 1
rosafastbuffstat == ''
rosafastbuffactive = false
}
rosafastbuffstat = ''
support1nochargeactive = true
}
}

if (rosashellbuffactive == true){
rosashellbufftime -= 1;
if (rosashellbufftime < 1){
if (rosashellbuffstat == 'leader1-0charge'){
leader1defenserating -= 25
}
if (rosashellbuffstat == 'leader1-1charge'){
 leader1defenserating -= 35
}
if (rosashellbuffstat == 'leader1-2charge'){
leader1defenserating -= 45
}
if (rosashellbuffstat == 'leader1-3charge'){
leader1defenserating -= 55
}
if (rosashellbuffstat == 'leader1-4charge'){
leader1defenserating -= 55
leader2defenserating -= 55
}
if (rosashellbuffstat == 'leader1-5charge'){
        leader1defenserating -= 60
        leader2defenserating -= 60
        support1defenserating -= 25
        support2defenserating -= 25
        fighter1defenserating -= 25
        fighter2defenserating -= 25
        fighter3defenserating -= 25
        fighter4defenserating -= 25
        fighter5defenserating -= 25
        fighter6defenserating -= 25
}
if (rosashellbuffstat == 'leader2-0charge'){
leader2defenserating -= 25
}
if (rosashellbuffstat == 'leader2-1charge'){
 leader2defenserating -= 35
}
if (rosashellbuffstat == 'leader2-2charge'){
leader2defenserating -= 45
}
if (rosashellbuffstat == 'leader2-3charge'){
leader2defenserating -= 55
}
if (rosashellbuffstat == 'leader2-4charge'){
leader2defenserating -= 55
leader1defenserating -= 55
}
if (rosashellbuffstat == 'leader2-5charge'){
        leader2defenserating -= 60
        leader1defenserating -= 60
        support1defenserating -= 25
        support2defenserating -= 25
        fighter1defenserating -= 25
        fighter2defenserating -= 25
        fighter3defenserating -= 25
        fighter4defenserating -= 25
        fighter5defenserating -= 25
        fighter6defenserating -= 25
}
if (rosashellbuffstat == 'support1-0charge'){
support1defenserating -= 25
}
if (rosashellbuffstat == 'support1-1charge'){
 support1defenserating -= 35
}
if (rosashellbuffstat == 'support1-2charge'){
support1defenserating -= 45
}
if (rosashellbuffstat == 'support1-3charge'){
support1defenserating -= 55
}
if (rosashellbuffstat == 'support1-4charge'){
support1defenserating -= 55
support2defenserating -= 55

}
if (rosashellbuffstat == 'support1-5charge'){
        support1defenserating -= 60
        support2defenserating -= 60
        leader1defenserating -= 25
        leader2defenserating -= 25
        fighter1defenserating -= 25
        fighter2defenserating -= 25
        fighter3defenserating -= 25
        fighter4defenserating -= 25
        fighter5defenserating -= 25
        fighter6defenserating -= 25
}
if (rosashellbuffstat == 'support2-0charge'){
support2defenserating -= 25
}
if (rosashellbuffstat == 'support2-1charge'){
 support2defenserating -= 35
}
if (rosashellbuffstat == 'support2-2charge'){
support2defenserating -= 45
}
if (rosashellbuffstat == 'support2-3charge'){
support2defenserating -= 55
}
if (rosashellbuffstat == 'support2-4charge'){
support2defenserating -= 55
support1defenserating -= 55

}
if (rosashellbuffstat == 'support2-5charge'){
        support2defenserating -= 60
        support1defenserating -= 60
        leader1defenserating -= 25
        leader2defenserating -= 25
        fighter1defenserating -= 25
        fighter2defenserating -= 25
        fighter3defenserating -= 25
        fighter4defenserating -= 25
        fighter5defenserating -= 25
        fighter6defenserating -= 25
}
if (rosashellbuffstat == 'fighter1-0charge'){
fighter1defenserating -= 25
}
if (rosashellbuffstat == 'fighter1-1charge'){
 fighter1defenserating -= 35
}
if (rosashellbuffstat == 'fighter1-2charge'){
fighter1defenserating -= 45
}
if (rosashellbuffstat == 'fighter1-3charge'){
fighter1defenserating -= 55
}
if (rosashellbuffstat == 'fighter1-4charge'){
fighter1defenserating -= 55
leader1defenserating -= 55

}
if (rosashellbuffstat == 'fighter1-5charge'){
        fighter1defenserating -= 60
        leader1defenserating -= 60
        support1defenserating -= 25
        support2defenserating -= 25
        fighter1defenserating -= 25
        fighter2defenserating -= 25
        fighter3defenserating -= 25
        fighter4defenserating -= 25
        fighter5defenserating -= 25
        fighter6defenserating -= 25
}
if (rosashellbuffstat == 'fighter2-0charge'){
fighter2defenserating -= 25
}
if (rosashellbuffstat == 'fighter2-1charge'){
 fighter2defenserating -= 35
}
if (rosashellbuffstat == 'fighter2-2charge'){
fighter2defenserating -= 45
}
if (rosashellbuffstat == 'fighter2-3charge'){
fighter2defenserating -= 55
}
if (rosashellbuffstat == 'fighter2-4charge'){
fighter2defenserating -= 55
leader1defenserating -= 55

}
if (rosashellbuffstat == 'fighter2-5charge'){
        fighter2defenserating -= 60
        leader1defenserating -= 60
        support1defenserating -= 25
        support2defenserating -= 25
        leader2defenserating -= 25
        fighter1defenserating -= 25
        fighter3defenserating -= 25
        fighter4defenserating -= 25
        fighter5defenserating -= 25
        fighter6defenserating -= 25
}
if (rosashellbuffstat == 'fighter3-0charge'){
fighter3defenserating -= 25
}
if (rosashellbuffstat == 'fighter3-1charge'){
 fighter3defenserating -= 35
}
if (rosashellbuffstat == 'fighter3-2charge'){
fighter3defenserating -= 45
}
if (rosashellbuffstat == 'fighter3-3charge'){
fighter3defenserating -= 55
}
if (rosashellbuffstat == 'fighter3-4charge'){
fighter3defenserating -= 55
leader1defenserating -= 55

}
if (rosashellbuffstat == 'fighter3-5charge'){
        fighter3defenserating -= 60
        leader1defenserating -= 60
        support1defenserating -= 25
        support2defenserating -= 25
        leader2defenserating -= 25
        fighter1defenserating -= 25
        fighter2defenserating -= 25
        fighter4defenserating -= 25
        fighter5defenserating -= 25
        fighter6defenserating -= 25
}
if (rosashellbuffstat == 'fighter4-0charge'){
fighter4defenserating -= 25
}
if (rosashellbuffstat == 'fighter4-1charge'){
 fighter4defenserating -= 35
}
if (rosashellbuffstat == 'fighter4-2charge'){
fighter4defenserating -= 45
}
if (rosashellbuffstat == 'fighter4-3charge'){
fighter4defenserating -= 55
}
if (rosashellbuffstat == 'fighter4-4charge'){
fighter4defenserating -= 55
leader1defenserating -= 55

}
if (rosashellbuffstat == 'fighter4-5charge'){
        fighter4defenserating -= 60
        leader1defenserating -= 60
        support1defenserating -= 25
        support2defenserating -= 25
        leader2defenserating -= 25
        fighter1defenserating -= 25
        fighter2defenserating -= 25
        fighter3defenserating -= 25
        fighter5defenserating -= 25
        fighter6defenserating -= 25
}
if (rosashellbuffstat == 'fighter5-0charge'){
fighter5defenserating -= 25
}
if (rosashellbuffstat == 'fighter5-1charge'){
 fighter5defenserating -= 35
}
if (rosashellbuffstat == 'fighter5-2charge'){
fighter5defenserating -= 45
}
if (rosashellbuffstat == 'fighter5-3charge'){
fighter5defenserating -= 55
}
if (rosashellbuffstat == 'fighter5-4charge'){
fighter5defenserating -= 55
leader1defenserating -= 55

}
if (rosashellbuffstat == 'fighter5-5charge'){
        fighter5defenserating -= 60
        leader1defenserating -= 60
        support1defenserating -= 25
        support2defenserating -= 25
        leader2defenserating -= 25
        fighter1defenserating -= 25
        fighter2defenserating -= 25
        fighter3defenserating -= 25
        fighter4defenserating -= 25
        fighter6defenserating -= 25
}
if (rosashellbuffstat == 'fighter6-0charge'){
fighter6defenserating -= 25
}
if (rosashellbuffstat == 'fighter6-1charge'){
 fighter6defenserating -= 35
}
if (rosashellbuffstat == 'fighter6-2charge'){
fighter6defenserating -= 45
}
if (rosashellbuffstat == 'fighter6-3charge'){
fighter6defenserating -= 55
}
if (rosashellbuffstat == 'fighter6-4charge'){
fighter6defenserating -= 55
leader1defenserating -= 55

}
if (rosashellbuffstat == 'fighter6-5charge'){
        fighter6defenserating -= 60
        leader1defenserating -= 60
        support1defenserating -= 25
        support2defenserating -= 25
        leader2defenserating -= 25
        fighter1defenserating -= 25
        fighter2defenserating -= 25
        fighter3defenserating -= 25
        fighter4defenserating -= 25
        fighter5defenserating -= 25
}
rosashellbuffstat = ''
support1nochargeactive = true
}
}

//mogbuff
if (mogpowerbuffactive == true){
mogpowerbufftime -= 1;
if (mogpowerbufftime < 1){
if (mogpowerbuffstat == '0charge'){
         leader1attackrating -= 100 + mogbonushealamount;
         leader2attackrating -= 100 + mogbonushealamount;
        support1attackrating -= 100 + mogbonushealamount;
        support2attackrating -= 100 + mogbonushealamount;
        fighter1attackrating -= 100 + mogbonushealamount;
        fighter2attackrating -= 100 + mogbonushealamount;
        fighter3attackrating -= 100 + mogbonushealamount;
        fighter4attackrating -= 100 + mogbonushealamount;
        fighter5attackrating -= 100 + mogbonushealamount;
        fighter6attackrating -= 100 + mogbonushealamount;
        mogpowerbuffactive = false
}
if (mogpowerbuffstat == '1charge'){
         leader1attackrating -= 200 + mogbonushealamount;
         leader2attackrating -= 200 + mogbonushealamount;
        support1attackrating -= 200 + mogbonushealamount;
        support2attackrating -= 200 + mogbonushealamount;
        fighter1attackrating -= 200 + mogbonushealamount;
        fighter2attackrating -= 200 + mogbonushealamount; 
        fighter3attackrating -= 200 + mogbonushealamount;
        fighter4attackrating -= 200 + mogbonushealamount;
        fighter5attackrating -= 200 + mogbonushealamount; 
        fighter6attackrating -= 200 + mogbonushealamount;
        mogpowerbuffactive = false
}
if (mogpowerbuffstat == '2charge'){
        leader1attackrating -= 300 + mogbonushealamount;
        leader2attackrating -= 300 + mogbonushealamount;
        support1attackrating -= 300 + mogbonushealamount;
        support2attackrating -= 300 + mogbonushealamount;
        fighter1attackrating -= 300 + mogbonushealamount;
        fighter2attackrating -= 300 + mogbonushealamount;
        fighter3attackrating -= 300 + mogbonushealamount;
        fighter4attackrating -= 300 + mogbonushealamount;
        fighter5attackrating -= 300 + mogbonushealamount;
        fighter6attackrating -= 300 + mogbonushealamount;
        mogpowerbuffactive = false

}
if (mogpowerbuffstat == '3charge'){
         leader1attackrating -= 400 + mogbonushealamount;
         leader2attackrating -= 400 + mogbonushealamount;
        support1attackrating -= 400 + mogbonushealamount;
        support2attackrating -= 400 + mogbonushealamount;
        fighter1attackrating -= 400 + mogbonushealamount;
        fighter2attackrating -= 400 + mogbonushealamount;
        fighter3attackrating -= 400 + mogbonushealamount;
        fighter4attackrating -= 400 + mogbonushealamount;
        fighter5attackrating -= 400 + mogbonushealamount;
        fighter6attackrating -= 400 + mogbonushealamount;
mogpowerbuffactive = false
}
if (mogpowerbuffstat == '4charge'){
         leader1attackrating -= 500 + mogbonushealamount;
         leader2attackrating -= 500 + mogbonushealamount;
        support1attackrating -= 500 + mogbonushealamount;
        support2attackrating -= 500 + mogbonushealamount;
        fighter1attackrating -= 500 + mogbonushealamount;
        fighter2attackrating -= 500 + mogbonushealamount;
        fighter3attackrating -= 500 + mogbonushealamount;
        fighter4attackrating -= 500 + mogbonushealamount;
        fighter5attackrating -= 500 + mogbonushealamount;
        fighter6attackrating -= 500 + mogbonushealamount;
mogpowerbuffactive = false

}
if (mogpowerbuffstat == '5charge'){
        leader1attackrating -= 600 + mogbonushealamount;
        leader2attackrating -= 600 + mogbonushealamount;
        support1attackrating -= 600 + mogbonushealamount;
        support2attackrating -= 600 + mogbonushealamount;
        fighter1attackrating -= 600 + mogbonushealamount;
        fighter2attackrating -= 600 + mogbonushealamount;
        fighter3attackrating -= 600 + mogbonushealamount;
        fighter4attackrating -= 600 + mogbonushealamount;
        fighter5attackrating -= 600 + mogbonushealamount;
        fighter6attackrating -= 600 + mogbonushealamount;
        mogpowerbuffactive = false

}
mogpowerbuffstat = ''
support2nochargeactive = true
}
}
if (mogmoonbuffactive == true){
mogmoonbufftime -= 1;
if (mogmoonbufftime < 1){
if (mogmoonbuffstat == '0charge'){
 leader1maxhealth -= 1000 + mogbonushealamount;
leader2maxhealth -= 1000 + mogbonushealamount;
support1maxhealth -= 1000 + mogbonushealamount;
support2maxhealth -= 1000 + mogbonushealamount;
fighter1maxhealth -= 1000 + mogbonushealamount;
fighter2maxhealth -= 1000 + mogbonushealamount;
fighter3maxhealth -= 1000 + mogbonushealamount;
fighter4maxhealth -= 1000 + mogbonushealamount;
fighter5maxhealth -= 1000 + mogbonushealamount;
fighter6maxhealth -= 1000 + mogbonushealamount;    
mogmoonbuffactive = false
}
if (mogmoonbuffstat == '1charge'){
leader1maxhealth -= 2000 + mogbonushealamount;
leader2maxhealth -= 2000 + mogbonushealamount;
support1maxhealth -= 2000 + mogbonushealamount;
support2maxhealth -= 2000 + mogbonushealamount;
fighter1maxhealth -= 2000 + mogbonushealamount;
fighter2maxhealth -= 2000 + mogbonushealamount; 
fighter3maxhealth -= 2000 + mogbonushealamount;
fighter4maxhealth -= 2000 + mogbonushealamount;
fighter5maxhealth -= 2000 + mogbonushealamount; 
fighter6maxhealth -= 2000 + mogbonushealamount;
mogmoonbuffactive = false
}
if (mogmoonbuffstat == '2charge'){
leader1maxhealth -= 3000 + mogbonushealamount;
leader2maxhealth -= 3000 + mogbonushealamount;
support1maxhealth -= 3000 + mogbonushealamount;
support2maxhealth -= 3000 + mogbonushealamount;
fighter1maxhealth -= 3000 + mogbonushealamount;
fighter2maxhealth -= 3000 + mogbonushealamount;
fighter3maxhealth -= 3000 + mogbonushealamount;
fighter4maxhealth -= 3000 + mogbonushealamount;
fighter5maxhealth -= 3000 + mogbonushealamount;
fighter6maxhealth -= 3000 + mogbonushealamount;
mogmoonbuffactive = false

}
if (mogmoonbuffstat == '3charge'){
leader1maxhealth -= 4000 + mogbonushealamount;
leader2maxhealth -= 4000 + mogbonushealamount;
support1maxhealth -= 4000 + mogbonushealamount;
support2maxhealth -= 4000 + mogbonushealamount;
fighter1maxhealth -= 4000 + mogbonushealamount;
fighter2maxhealth -= 4000 + mogbonushealamount;
fighter3maxhealth -= 4000 + mogbonushealamount;
fighter4maxhealth -= 4000 + mogbonushealamount;
fighter5maxhealth -= 4000 + mogbonushealamount;
fighter6maxhealth -= 4000 + mogbonushealamount;
mogmoonbuffactive = false
}
if (mogmoonbuffstat == '4charge'){
leader1maxhealth -= 5000 + mogbonushealamount;
leader2maxhealth -= 5000 + mogbonushealamount;
support1maxhealth -= 5000 + mogbonushealamount;
support2maxhealth -= 5000 + mogbonushealamount;
fighter1maxhealth -= 5000 + mogbonushealamount;
fighter2maxhealth -= 5000 + mogbonushealamount;
fighter3maxhealth -= 5000 + mogbonushealamount;
fighter4maxhealth -= 5000 + mogbonushealamount;
fighter5maxhealth -= 5000 + mogbonushealamount;
fighter6maxhealth -= 5000 + mogbonushealamount;
mogmoonbuffactive = false

}
if (mogmoonbuffstat == '5charge'){
leader1maxhealth -= 6000 + mogbonushealamount;
leader2maxhealth -= 6000 + mogbonushealamount;
support1maxhealth -= 6000 + mogbonushealamount;
support2maxhealth -= 6000 + mogbonushealamount;
fighter1maxhealth -= 6000 + mogbonushealamount;
fighter2maxhealth -= 6000 + mogbonushealamount;
fighter3maxhealth -= 6000 + mogbonushealamount;
fighter4maxhealth -= 6000 + mogbonushealamount;
fighter5maxhealth -= 6000 + mogbonushealamount;
fighter6maxhealth -= 6000 + mogbonushealamount;
mogmoonbuffactive = false

}
mogmoonbuffstat = ''
support2nochargeactive = true
}
}
if (mogdancebuffactive == true){
mogdancebufftime -= 1;
if (mogdancebufftime < 1){
if (mogdancebuffstat == '0charge'){

mogdancebuffactive = false
}
if (mogdancebuffstat == '1charge'){

mogdancebuffactive = false
}
if (mogdancebuffstat == '2charge'){

mogdancebuffactive = false

}
if (mogdancebuffstat == '3charge'){

mogdancebuffactive = false
}
if (mogdancebuffstat == '4charge'){

mogdancebuffactive = false

}
if (mogdancebuffstat == '5charge'){
leader1actionregen -= 2
leader2actionregen -= 2
support1actionregen -= 2
support2actionregen -= 2
fighter1actionregen -= 2
fighter2actionregen -= 2
fighter3actionregen -= 2
fighter4actionregen -= 2
fighter5actionregen -= 2
fighter6actionregen -= 2
mogdancebuffactive = false
}
mogdancebuffstat = ''
support2nochargeactive = true
}
}
if (mogdreambuffactive == true){
mogdreambufftime -= 1;
if (mogdreambufftime < 1){
if (mogdreambuffstat == '0charge'){
leader1supportrating -= 200 
leader2supportrating -= 200 
support1supportrating -= 200 
support2supportrating -= 200 
fighter1supportrating -= 200 
fighter2supportrating -= 200 
fighter3supportrating -= 200 
fighter4supportrating -= 200 
fighter5supportrating -= 200 
fighter6supportrating -= 200 
mogdreambuffactive = false
}
if (mogdreambuffstat == '1charge'){
leader1supportrating -= 400 
leader2supportrating -= 400 
support1supportrating -= 400 
support2supportrating -= 400 
fighter1supportrating -= 400 
fighter2supportrating -= 400  
fighter3supportrating -= 400 
fighter4supportrating -= 400 
fighter5supportrating -= 400  
fighter6supportrating -= 400 
mogdreambuffactive = false
}
if (mogdreambuffstat == '2charge'){
leader1supportrating -= 600 
leader2supportrating -= 600 
support1supportrating -= 600 
support2supportrating -= 600 
fighter1supportrating -= 600 
fighter2supportrating -= 600 
fighter3supportrating -= 600 
fighter4supportrating -= 600 
fighter5supportrating -= 600 
fighter6supportrating -= 600 
mogdreambuffactive = false

}
if (mogdreambuffstat == '3charge'){
leader1supportrating -= 800 
leader2supportrating -= 800 
support1supportrating -= 800 
support2supportrating -= 800 
fighter1supportrating -= 800 
fighter2supportrating -= 800 
fighter3supportrating -= 800 
fighter4supportrating -= 800 
fighter5supportrating -= 800 
fighter6supportrating -= 800 
mogdreambuffactive = false
}
if (mogdreambuffstat == '4charge'){
leader1supportrating -= 1000 
leader2supportrating -= 1000 
support1supportrating -= 1000 
support2supportrating -= 1000 
fighter1supportrating -= 1000 
fighter2supportrating -= 1000 
fighter3supportrating -= 1000 
fighter4supportrating -= 1000 
fighter5supportrating -= 1000 
fighter6supportrating -= 1000 
mogdreambuffactive = false

}
if (mogdreambuffstat == '5charge'){
leader1supportrating -= 1000
leader1actionregen -= 1
leader2supportrating -= 1000 
leader2actionregen -= 1
support1supportrating -= 1000 
support1actionregen -= 1
support2supportrating -= 1000 
support2actionregen -= 1
fighter1supportrating -= 1000 
fighter1actionregen -= 1
fighter2supportrating -= 1000 
fighter2actionregen -= 1
fighter3supportrating -= 1000 
fighter3actionregen -= 1
fighter4supportrating -= 1000 
fighter4actionregen -= 1
fighter5supportrating -= 1000 
fighter5actionregen -= 1
fighter6supportrating -= 1000 
mogdreambuffactive = false

}
mogdreambuffstat = ''
support2nochargeactive = true
}
}
}
//events
//gameevents
//gameevent
function gameevents ()
{

if (actionquenumber < 1){
    actionquenumber = 0
}

if (subzerohealth < 1) {
subzeroalive = false
subzerohealth = 0
subzeromaxhealth = 0
}

if (scorpionhealth < 1) {
scorpionalive = false
scorpionhealth = 0
scorpionmaxhealth = 0
}

if (support1health < 1) {
support1status = 'dead'
support1health = 0
support1maxhealth = 0
support1action = 0
support1alive = false
support1lowhealthbox.anims.play('deadnote', true);
}
if (support2health < 1) {
support2status = 'dead'
support2health = 0
support2maxhealth = 0
support2action = 0
support2alive = false
support2lowhealthbox.anims.play('deadnote', true);
}
if (leader1health < 1) {
leader1status = 'dead'
leader1health = 0
leader1maxhealth = 0
leader1action = 0
leader1alive = false
leader1lowhealthbox.anims.play('deadnote', true);
}
if (leader2health < 1) {
leader2status = 'dead'
leader2health = 0
leader2maxhealth = 0
leader2action = 0
leader2alive = false
leader2lowhealthbox.anims.play('deadnote', true);
}
if (fighter1health < 1) {
fighter1status = 'dead'
fighter1health = 0
fighter1maxhealth = 0
fighter1action = 0
fighter1alive = false
fighter1lowhealthbox.anims.play('deadnote', true);
}
if (fighter2health < 1) {
fighter2status = 'dead'
fighter2health = 0
fighter2maxhealth = 0
fighter2action = 0
fighter2alive = false
fighter2lowhealthbox.anims.play('deadnote', true);
}
if (fighter3health < 1) {
fighter3status = 'dead'
fighter3health = 0
fighter3maxhealth = 0
fighter3action = 0
fighter3alive = false
fighter3lowhealthbox.anims.play('deadnote', true);
}
if (fighter4health < 1) {
fighter4status = 'dead'
fighter4health = 0
fighter4maxhealth = 0
fighter4action = 0
fighter4alive = false
fighter4lowhealthbox.anims.play('deadnote', true);
}
if (fighter5health < 1) {
fighter5status = 'dead'
fighter5health = 0
fighter5maxhealth = 0
fighter5action = 0
fighter5alive = false
fighter5lowhealthbox.anims.play('deadnote', true);
}
if (fighter6health < 1) {
fighter6status = 'dead'
fighter6health = 0
fighter6maxhealth = 0
fighter6action = 0
fighter6alive = false
fighter6lowhealthbox.anims.play('deadnote', true);
}

if (support1health > support1maxhealth) {
support1health = support1maxhealth
}
if (support2health > support2maxhealth) {
support2health = support2maxhealth
}
if (leader1health > leader1maxhealth) {
leader1health = leader1maxhealth
}
if (leader2health > leader2maxhealth) {
leader2health = leader2maxhealth
}
if (fighter1health > fighter1maxhealth) {
fighter1health = fighter1maxhealth
}
if (fighter2health > fighter2maxhealth) {
fighter2health = fighter2maxhealth
}
if (fighter3health > fighter3maxhealth) {
fighter3health = fighter3maxhealth
}
if (fighter4health > fighter4maxhealth) {
fighter4health = fighter4maxhealth
}
if (fighter5health > fighter5maxhealth) {
fighter5health = fighter5maxhealth
}
if (fighter6health > fighter6maxhealth) {
fighter6health = fighter6maxhealth
}

if (support1health < 1999) {
if (support1health > 1) {
support1lowhealthbox.anims.play('lowhealthnote', true);
}
}
if (support1health > 1999) {
support1lowhealthbox.anims.play('nohealthnote', true);
}
if (support2health < 1999) {
if (support2health > 1) {
support2lowhealthbox.anims.play('lowhealthnote', true);
}
}
if (support2health > 1999) {
support2lowhealthbox.anims.play('nohealthnote', true);
}
if (leader1health < 1999) {
if (leader1health > 1) {
leader1lowhealthbox.anims.play('lowhealthnote', true);
}
}
if (leader1health > 1999) {
leader1lowhealthbox.anims.play('nohealthnote', true);
}
if (leader2health < 1999) {
if (leader2health > 1) {
leader2lowhealthbox.anims.play('lowhealthnote', true);
}
}
if (leader2health > 1999) {
leader2lowhealthbox.anims.play('nohealthnote', true);
}
if (fighter1health < 1999) {
if (fighter1health > 1) {
fighter1lowhealthbox.anims.play('lowhealthnote', true);
}
}
if (fighter1health > 1999) {
fighter1lowhealthbox.anims.play('nohealthnote', true);
}
if (fighter2health < 1999) {
if (fighter2health > 1) {
fighter2lowhealthbox.anims.play('lowhealthnote', true);
}
}
if (fighter2health > 1999) {
fighter2lowhealthbox.anims.play('nohealthnote', true);
}
if (fighter3health < 1999) {
if (fighter3health > 1) {
fighter3lowhealthbox.anims.play('lowhealthnote', true);
}
}
if (fighter3health > 1999) {
fighter3lowhealthbox.anims.play('nohealthnote', true);
}
if (fighter4health < 1999) {
if (fighter4health > 1) {
fighter4lowhealthbox.anims.play('lowhealthnote', true);
}
}
if (fighter4health > 1999) {
fighter4lowhealthbox.anims.play('nohealthnote', true);
}
if (fighter5health < 1999) {
if (fighter5health > 1) {
fighter5lowhealthbox.anims.play('lowhealthnote', true);
}
}
if (fighter5health > 1999) {
fighter5lowhealthbox.anims.play('nohealthnote', true);
}
if (fighter6health < 1999) {
if (fighter6health > 1) {
fighter6lowhealthbox.anims.play('lowhealthnote', true);
}
}
if (fighter6health > 1999) {
fighter6lowhealthbox.anims.play('nohealthnote', true);
}

}

//beginbuttontint
//************************************
function supporttinton ()
{
if (kangactive == true) {
kang.setTint(0x00ff00);
}
if (spinalactive == true) {
spinal.setTint(0x00ff00);
}
if (glaciusactive == true) {
glacius.setTint(0x00ff00);
}

if (kanoactive == true) {
kano.setTint(0x00ff00);
}
if (sindelactive == true) {
sindel.setTint(0x00ff00);
}
if (kabalactive == true) {
kabal.setTint(0x00ff00);
}
if (jagoactive == true) {
jago.setTint(0x00ff00);
}
if (cyraxactive == true) {
cyrax.setTint(0x00ff00);
}
if (cecilactive == true) {
cecil.setTint(0x00ff00);
}
if (rosaactive == true) {
rosa.setTint(0x00ff00);
}
if (cyanactive == true) {
cyan.setTint(0x00ff00);
}
if (golbezactive == true) {
golbez.setTint(0x00ff00);
}
if (kainactive == true) {
kain.setTint(0x00ff00);
}
if (terraactive == true) {
terra.setTint(0x00ff00);
}
if (mogactive == true) {
mog.setTint(0x00ff00);
}
if (kunglaoactive == true) {
kunglao.setTint(0x00ff00);
}
if (sonjaactive == true) {
sonja.setTint(0x00ff00);
}
if (sektoractive == true) {
sektor.setTint(0x00ff00);
}
if (comboactive == true) {
combo.setTint(0x00ff00);
}
if (orchidactive == true) {
orchid.setTint(0x00ff00);
}
}

//buttonshow
//buttontint
//tint




function rosabuttonhide ()
{
rosacurebox.visible = false
rosahealbox.visible = false
rosafastbox.visible = false
rosashellbox.visible = false
rosabowbox.visible = false
}

function rosabuttonshow ()
{
rosacurebox.visible = true
rosahealbox.visible = true
rosafastbox.visible = true
rosashellbox.visible = true
rosabowbox.visible = true
}


function rosabuttontinton ()
{
rosacurebox.setTint(0x00ff00);
rosahealbox.setTint(0x00ff00);
rosafastbox.setTint(0x00ff00);
rosashellbox.setTint(0x00ff00);
rosabowbox.setTint(0x00ff00);
rosacancastnow = true
}

function rosabuttontintoff ()
{
rosacurebox.clearTint();
rosahealbox.clearTint();
rosafastbox.clearTint();
rosashellbox.clearTint();
rosabowbox.clearTint();
}

function mogbuttonhide ()
{
mogmoonbox.visible = false
mogpowerbox.visible = false
mogdreambox.visible = false
mogdancebox.visible = false
mogbullbox.visible = false
}

function mogbuttonshow ()
{
mogmoonbox.visible = true
mogpowerbox.visible = true
mogdreambox.visible = true
mogdancebox.visible = true
mogbullbox.visible = true
}

function mogbuttontinton ()
{
mogmoonbox.setTint(0x00ff00);
mogpowerbox.setTint(0x00ff00);
mogdreambox.setTint(0x00ff00);
mogdancebox.setTint(0x00ff00);
mogbullbox.setTint(0x00ff00);
mogcancastnow = true
}

function mogbuttontintoff ()
{
mogmoonbox.clearTint();
mogpowerbox.clearTint();
mogdreambox.clearTint();
mogdancebox.clearTint();
mogbullbox.clearTint();
}

function kangbuttonhide ()
{
kangflykickbox.visible = false
kangfireballbox.visible = false
kangbicyclebox.visible = false
kangdragonbox.visible = false
kangprayerbox.visible = false
}

function kangbuttonshow ()
{
kangflykickbox.visible = true
kangfireballbox.visible = true
kangbicyclebox.visible = true
kangdragonbox.visible = true
kangprayerbox.visible = true
}


function kangbuttontinton ()
{
kangflykickbox.setTint(0xFF0000);
kangfireballbox.setTint(0xFF0000);
kangbicyclebox.setTint(0xFF0000);
kangdragonbox.setTint(0xFF0000);
kangprayerbox.setTint(0xFF0000);
kangcanattacknow = true
}

function kangbuttontintoff ()
{
kangflykickbox.clearTint();
kangfireballbox.clearTint();
kangbicyclebox.clearTint();
kangdragonbox.clearTint();
kangprayerbox.clearTint();
kangcanattacknow = false
iskangpickingtarget == false
}

function kangbuttontintdisable ()
{
kangflykickbox.setTint(0x6D6D6D);
kangfireballbox.setTint(0x6D6D6D);
kangbicyclebox.setTint(0x6D6D6D);
kangdragonbox.setTint(0x6D6D6D);
kangprayerbox.setTint(0x6D6D6D);
}

function spinalbuttonhide ()
{
spinalslicebox.visible = false
spinalslashbox.visible = false
spinalbashbox.visible = false
spinalspikebox.visible = false
spinalblockbox.visible = false
}

function spinalbuttonshow ()
{
spinalslicebox.visible = true
spinalslashbox.visible = true
spinalbashbox.visible = true
spinalspikebox.visible = true
spinalblockbox.visible = true
}


function spinalbuttontinton ()
{
spinalslicebox.setTint(0xFF0000);
spinalslashbox.setTint(0xFF0000);
spinalbashbox.setTint(0xFF0000);
spinalspikebox.setTint(0xFF0000);
spinalblockbox.setTint(0xFF0000);
spinalcanattacknow = true
}

function spinalbuttontintdisable ()
{
spinalslicebox.setTint(0x6D6D6D);
spinalslashbox.setTint(0x6D6D6D);
spinalbashbox.setTint(0x6D6D6D);
spinalspikebox.setTint(0x6D6D6D);
spinalblockbox.setTint(0x6D6D6D);
}


function spinalbuttontintoff ()
{
spinalslicebox.clearTint();
spinalslashbox.clearTint();
spinalbashbox.clearTint();
spinalspikebox.clearTint();
spinalblockbox.clearTint();
spinalcanattacknow = false
isspinalpickingtarget == false
}

function combobuttontinton ()
{
combopunchbox.setTint(0xFF0000);
combojumpkickbox.setTint(0xFF0000);
combogunbox.setTint(0xFF0000);
comboslambox.setTint(0xFF0000);
combomusclebox.setTint(0xFF0000);
combocanattacknow = true
}


function combobuttonhide ()
{
combopunchbox.visible = false
combojumpkickbox.visible = false
combogunbox.visible = false
comboslambox.visible = false
combomusclebox.visible = false
}

function combobuttonshow ()
{
combopunchbox.visible = true
combojumpkickbox.visible = true
combogunbox.visible = true
comboslambox.visible = true
combomusclebox.visible = true
}

function combobuttontintoff ()
{
combopunchbox.clearTint();
combojumpkickbox.clearTint();
combogunbox.clearTint();
comboslambox.clearTint();
combomusclebox.clearTint();
combocanattacknow = false
iscombopickingtarget == false
}

function combobuttontintdisable ()
{
combopunchbox.setTint(0x6D6D6D);
combojumpkickbox.setTint(0x6D6D6D);
combogunbox.setTint(0x6D6D6D);
comboslambox.setTint(0x6D6D6D);
combomusclebox.setTint(0x6D6D6D);
}

function kanobuttonhide ()
{
kanobladesbox.visible = false
kanocutbox.visible = false
kanolaserbox.visible = false
kanohellbox.visible = false
kanokickbox.visible = false
}

function kanobuttonshow ()
{
kanobladesbox.visible = true
kanocutbox.visible = true
kanolaserbox.visible = true
kanohellbox.visible = true
kanokickbox.visible = true
}


function kanobuttontinton ()
{
kanobladesbox.setTint(0xFF0000);
kanocutbox.setTint(0xFF0000);
kanolaserbox.setTint(0xFF0000);
kanohellbox.setTint(0xFF0000);
kanokickbox.setTint(0xFF0000);
kanocanattacknow = true
}

function kanobuttontintdisable ()
{
kanobladesbox.setTint(0x6D6D6D);
kanocutbox.setTint(0x6D6D6D);
kanolaserbox.setTint(0x6D6D6D);
kanohellbox.setTint(0x6D6D6D);
kanokickbox.setTint(0x6D6D6D);
}

function kanobuttontintoff ()
{
kanobladesbox.clearTint();
kanocutbox.clearTint();
kanolaserbox.clearTint();
kanohellbox.clearTint();
kanokickbox.clearTint();
kanocanattacknow = false
iskanopickingtarget == false
}

function orchidbuttonhide ()
{
orchidwheelbox.visible = false
orchidfirebabox.visible = false
orchidbatonbox.visible = false
orchidcatbox.visible = false
orchidfitbox.visible = false
}

function orchidbuttonshow ()
{
orchidwheelbox.visible = true
orchidfirebabox.visible = true
orchidbatonbox.visible = true
orchidcatbox.visible = true
orchidfitbox.visible = true
}

function orchidbuttontinton ()
{
orchidwheelbox.setTint(0xFF0000);
orchidfirebabox.setTint(0xFF0000);
orchidbatonbox.setTint(0xFF0000);
orchidcatbox.setTint(0xFF0000);
orchidfitbox.setTint(0xFF0000);
orchidcanattacknow = true
}

function orchidbuttontintdisable ()
{
orchidwheelbox.setTint(0x6D6D6D);
orchidfirebabox.setTint(0x6D6D6D);
orchidbatonbox.setTint(0x6D6D6D);
orchidcatbox.setTint(0x6D6D6D);
orchidfitbox.setTint(0x6D6D6D);
}

function orchidbuttontintoff ()
{
orchidwheelbox.clearTint();
orchidfirebabox.clearTint();
orchidbatonbox.clearTint();
orchidcatbox.clearTint();
orchidfitbox.clearTint();
orchidcanattacknow = true
}

function jagobuttonhide ()
{
jagoswordbox.visible = false
jagoplasmabox.visible = false
jagorkickbox.visible = false
jagofocusbox.visible = false
jagostabbox.visible = false
}

function jagobuttonshow ()
{
jagoswordbox.visible = true
jagoplasmabox.visible = true
jagorkickbox.visible = true
jagofocusbox.visible = true
jagostabbox.visible = true
}


function jagobuttontinton ()
{
jagoswordbox.setTint(0xFF0000);
jagoplasmabox.setTint(0xFF0000);
jagorkickbox.setTint(0xFF0000);
jagofocusbox.setTint(0xFF0000);
jagostabbox.setTint(0xFF0000);
jagocanattacknow = true
}
function jagobuttontintdisable ()
{
jagoswordbox.setTint(0x6D6D6D);
jagoplasmabox.setTint(0x6D6D6D);
jagorkickbox.setTint(0x6D6D6D);
jagofocusbox.setTint(0x6D6D6D);
jagostabbox.setTint(0x6D6D6D);
}

function jagobuttontintoff ()
{
jagoswordbox.clearTint();
jagoplasmabox.clearTint();
jagorkickbox.clearTint();
jagofocusbox.clearTint();
jagostabbox.clearTint();
jagocanattacknow = false
isjagopickingtarget == false
}

function kunglaobuttonhide ()
{
kunglaopalmkickbox.visible = false
kunglaohatthrowbox.visible = false
kunglaowhirlbox.visible = false
kunglaobrimbox.visible = false
kunglaokickbox.visible = false
}

function kunglaobuttonshow ()
{
kunglaopalmkickbox.visible = true
kunglaohatthrowbox.visible = true
kunglaowhirlbox.visible = true
kunglaobrimbox.visible = true
kunglaokickbox.visible = true
}

function kunglaobuttontinton ()
{
kunglaopalmkickbox.setTint(0xFF0000);
kunglaohatthrowbox.setTint(0xFF0000);
kunglaowhirlbox.setTint(0xFF0000);
kunglaobrimbox.setTint(0xFF0000);
kunglaokickbox.setTint(0xFF0000);
kunglaocanattacknow = true
}
function kunglaobuttontintdisable ()
{
kunglaopalmkickbox.setTint(0x6D6D6D);
kunglaohatthrowbox.setTint(0x6D6D6D);
kunglaowhirlbox.setTint(0x6D6D6D);
kunglaobrimbox.setTint(0x6D6D6D);
kunglaokickbox.setTint(0x6D6D6D);
}

function kunglaobuttontintoff ()
{
kunglaopalmkickbox.clearTint();
kunglaohatthrowbox.clearTint();
kunglaowhirlbox.clearTint();
kunglaobrimbox.clearTint();
kunglaokickbox.clearTint();
kunglaocanattacknow = false
iskunglaopickingtarget == false
}

function terrabuttonhide ()
{
terrafirebox.visible = false
terraicebox.visible = false
terrawindbox.visible = false
terraearthbox.visible = false
terracallbox.visible = false
}

function terrabuttonshow ()
{
terrafirebox.visible = true
terraicebox.visible = true
terrawindbox.visible = true
terraearthbox.visible = true
terracallbox.visible = true
}


function terrabuttontinton ()
{
terrafirebox.setTint(0xFF0000);
terraicebox.setTint(0xFF0000);
terrawindbox.setTint(0xFF0000);
terraearthbox.setTint(0xFF0000);
terracallbox.setTint(0xFF0000);
terracancastnow = true
}
function terrabuttontintdisable ()
{
terrafirebox.setTint(0x6D6D6D);
terraicebox.setTint(0x6D6D6D);
terrawindbox.setTint(0x6D6D6D);
terraearthbox.setTint(0x6D6D6D);
terracallbox.setTint(0x6D6D6D);
}

function terrabuttontintoff ()
{
terrafirebox.clearTint();
terraicebox.clearTint();
terrawindbox.clearTint();
terraearthbox.clearTint();
terracallbox.clearTint();
terracancastnow = false
isterrapickingtarget == false
}

function sonjabuttonhide ()
{
sonjahandstbox.visible = false
sonjablasterbox.visible = false
sonjakissbox.visible = false
sonjadancerbox.visible = false
sonjakicksbox.visible = false
}

function sonjabuttonshow ()
{
sonjahandstbox.visible = true
sonjablasterbox.visible = true
sonjakissbox.visible = true
sonjadancerbox.visible = true
sonjakicksbox.visible = true
}


function sonjabuttontinton ()
{
sonjahandstbox.setTint(0xFF0000);
sonjablasterbox.setTint(0xFF0000);
sonjakissbox.setTint(0xFF0000);
sonjadancerbox.setTint(0xFF0000);
sonjakicksbox.setTint(0xFF0000);
sonjacanattacknow = true
}

function sonjabuttontintdisable ()
{
sonjahandstbox.setTint(0x6D6D6D);
sonjablasterbox.setTint(0x6D6D6D);
sonjakissbox.setTint(0x6D6D6D);
sonjadancerbox.setTint(0x6D6D6D);
sonjakicksbox.setTint(0x6D6D6D);
}

function sonjabuttontintoff ()
{
sonjahandstbox.clearTint();
sonjablasterbox.clearTint();
sonjakissbox.clearTint();
sonjadancerbox.clearTint();
sonjakicksbox.clearTint();
sonjacanattacknow = false
issonjapickingtarget == false
}



//************************************
//endbuttontint
//chargetime

function chargetime ()
{
if (support1focuscharge == 0) {
support1focuschargebox1.visible = false
support1focuschargebox2.visible = false
support1focuschargebox3.visible = false
support1focuschargebox4.visible = false
support1focuschargebox5.visible = false
}
if (support1focuscharge == 1) {
support1focuschargebox1.visible = true
support1focuschargebox2.visible = false
support1focuschargebox3.visible = false
support1focuschargebox4.visible = false
support1focuschargebox5.visible = false
}
if (support1focuscharge == 2) {
support1focuschargebox1.visible = true
support1focuschargebox2.visible = true
support1focuschargebox3.visible = false
support1focuschargebox4.visible = false
support1focuschargebox5.visible = false
}
if (support1focuscharge == 3) {
support1focuschargebox1.visible = true
support1focuschargebox2.visible = true
support1focuschargebox3.visible = true
support1focuschargebox4.visible = false
support1focuschargebox5.visible = false
}
if (support1focuscharge == 4) {
support1focuschargebox1.visible = true
support1focuschargebox2.visible = true
support1focuschargebox3.visible = true
support1focuschargebox4.visible = true
support1focuschargebox5.visible = false
}
if (support1focuscharge == 5) {
support1focuschargebox1.visible = true
support1focuschargebox2.visible = true
support1focuschargebox3.visible = true
support1focuschargebox4.visible = true
support1focuschargebox5.visible = true
}

if (support1focuschargeon ==  true){
support1focustime += 1
if (actionqueeffectnumber > 1){
    support1focustime += 1
}
if (support1focustime > 99) {
support1focuscharge += 1;
support1focustime -= 99;
}
if (support1focuscharge > 5) {
support1focuscharge = 5;
support1focustime = 99;
}
}
if (support2focuscharge == 0) {
support2focuschargebox1.visible = false
support2focuschargebox2.visible = false
support2focuschargebox3.visible = false
support2focuschargebox4.visible = false
support2focuschargebox5.visible = false
}
if (support2focuscharge == 1) {
support2focuschargebox1.visible = true
support2focuschargebox2.visible = false
support2focuschargebox3.visible = false
support2focuschargebox4.visible = false
support2focuschargebox5.visible = false
}
if (support2focuscharge == 2) {
support2focuschargebox1.visible = true
support2focuschargebox2.visible = true
support2focuschargebox3.visible = false
support2focuschargebox4.visible = false
support2focuschargebox5.visible = false
}
if (support2focuscharge == 3) {
support2focuschargebox1.visible = true
support2focuschargebox2.visible = true
support2focuschargebox3.visible = true
support2focuschargebox4.visible = false
support2focuschargebox5.visible = false
}
if (support2focuscharge == 4) {
support2focuschargebox1.visible = true
support2focuschargebox2.visible = true
support2focuschargebox3.visible = true
support2focuschargebox4.visible = true
support2focuschargebox5.visible = false
}
if (support2focuscharge == 5) {
support2focuschargebox1.visible = true
support2focuschargebox2.visible = true
support2focuschargebox3.visible = true
support2focuschargebox4.visible = true
support2focuschargebox5.visible = true
}

if (support2focuschargeon ==  true){
support2focustime += 1;
if (actionqueeffectnumber > 1){
    support2focustime += 1
}
if (support2focustime > 99) {
support2focuscharge += 1;
support2focustime -= 99;
}
if (support2focuscharge > 5) {
support2focuscharge = 5;
support2focustime = 99;
}
}
if (leader1focuscharge == 0) {
leader1focuschargebox1.visible = false
leader1focuschargebox2.visible = false
leader1focuschargebox3.visible = false
leader1focuschargebox4.visible = false
leader1focuschargebox5.visible = false
}
if (leader1focuscharge == 1) {
leader1focuschargebox1.visible = true
leader1focuschargebox2.visible = false
leader1focuschargebox3.visible = false
leader1focuschargebox4.visible = false
leader1focuschargebox5.visible = false
}
if (leader1focuscharge == 2) {
leader1focuschargebox1.visible = true
leader1focuschargebox2.visible = true
leader1focuschargebox3.visible = false
leader1focuschargebox4.visible = false
leader1focuschargebox5.visible = false
}
if (leader1focuscharge == 3) {
leader1focuschargebox1.visible = true
leader1focuschargebox2.visible = true
leader1focuschargebox3.visible = true
leader1focuschargebox4.visible = false
leader1focuschargebox5.visible = false
}
if (leader1focuscharge == 4) {
leader1focuschargebox1.visible = true
leader1focuschargebox2.visible = true
leader1focuschargebox3.visible = true
leader1focuschargebox4.visible = true
leader1focuschargebox5.visible = false
}
if (leader1focuscharge == 5) {
leader1focuschargebox1.visible = true
leader1focuschargebox2.visible = true
leader1focuschargebox3.visible = true
leader1focuschargebox4.visible = true
leader1focuschargebox5.visible = true
}

if (leader1focuschargeon ==  true){
leader1focustime += 1;
if (actionqueeffectnumber > 1){
    leader1focustime += 1
}
if (leader1focustime > 99) {
leader1focuscharge += 1;
leader1focustime -= 99;
}
if (leader1focuscharge > 5) {
leader1focuscharge = 5;
leader1focustime = 99;
}
}
if (leader2focuscharge == 0) {
leader2focuschargebox1.visible = false
leader2focuschargebox2.visible = false
leader2focuschargebox3.visible = false
leader2focuschargebox4.visible = false
leader2focuschargebox5.visible = false
}
if (leader2focuscharge == 1) {
leader2focuschargebox1.visible = true
leader2focuschargebox2.visible = false
leader2focuschargebox3.visible = false
leader2focuschargebox4.visible = false
leader2focuschargebox5.visible = false
}
if (leader2focuscharge == 2) {
leader2focuschargebox1.visible = true
leader2focuschargebox2.visible = true
leader2focuschargebox3.visible = false
leader2focuschargebox4.visible = false
leader2focuschargebox5.visible = false
}
if (leader2focuscharge == 3) {
leader2focuschargebox1.visible = true
leader2focuschargebox2.visible = true
leader2focuschargebox3.visible = true
leader2focuschargebox4.visible = false
leader2focuschargebox5.visible = false
}
if (leader2focuscharge == 4) {
leader2focuschargebox1.visible = true
leader2focuschargebox2.visible = true
leader2focuschargebox3.visible = true
leader2focuschargebox4.visible = true
leader2focuschargebox5.visible = false
}
if (leader2focuscharge == 5) {
leader2focuschargebox1.visible = true
leader2focuschargebox2.visible = true
leader2focuschargebox3.visible = true
leader2focuschargebox4.visible = true
leader2focuschargebox5.visible = true
}

if (leader2focuschargeon ==  true){
leader2focustime += 1;
if (actionqueeffectnumber > 1){
    leader2focustime += 1
}
if (leader2focustime > 99) {
leader2focuscharge += 1;
leader2focustime -= 99;
}
if (leader2focuscharge > 5) {
leader2focuscharge = 5;
leader2focustime = 99;
}
}
if (fighter1focuscharge == 0) {
fighter1focuschargebox1.visible = false
fighter1focuschargebox2.visible = false
fighter1focuschargebox3.visible = false
fighter1focuschargebox4.visible = false
fighter1focuschargebox5.visible = false
}
if (fighter1focuscharge == 1) {
fighter1focuschargebox1.visible = true
fighter1focuschargebox2.visible = false
fighter1focuschargebox3.visible = false
fighter1focuschargebox4.visible = false
fighter1focuschargebox5.visible = false
}
if (fighter1focuscharge == 2) {
fighter1focuschargebox1.visible = true
fighter1focuschargebox2.visible = true
fighter1focuschargebox3.visible = false
fighter1focuschargebox4.visible = false
fighter1focuschargebox5.visible = false
}
if (fighter1focuscharge == 3) {
fighter1focuschargebox1.visible = true
fighter1focuschargebox2.visible = true
fighter1focuschargebox3.visible = true
fighter1focuschargebox4.visible = false
fighter1focuschargebox5.visible = false
}
if (fighter1focuscharge == 4) {
fighter1focuschargebox1.visible = true
fighter1focuschargebox2.visible = true
fighter1focuschargebox3.visible = true
fighter1focuschargebox4.visible = true
fighter1focuschargebox5.visible = false
}
if (fighter1focuscharge == 5) {
fighter1focuschargebox1.visible = true
fighter1focuschargebox2.visible = true
fighter1focuschargebox3.visible = true
fighter1focuschargebox4.visible = true
fighter1focuschargebox5.visible = true
}

if (fighter1focuschargeon ==  true){
fighter1focustime += 1;
if (actionqueeffectnumber > 1){
    fighter1focustime += 1
}
if (fighter1focustime > 99) {
fighter1focuscharge += 1;
fighter1focustime -= 99;
}
if (fighter1focuscharge > 5) {
fighter1focuscharge = 5;
fighter1focustime = 99;
}
}
if (fighter2focuscharge == 0) {
fighter2focuschargebox1.visible = false
fighter2focuschargebox2.visible = false
fighter2focuschargebox3.visible = false
fighter2focuschargebox4.visible = false
fighter2focuschargebox5.visible = false
}
if (fighter2focuscharge == 1) {
fighter2focuschargebox1.visible = true
fighter2focuschargebox2.visible = false
fighter2focuschargebox3.visible = false
fighter2focuschargebox4.visible = false
fighter2focuschargebox5.visible = false
}
if (fighter2focuscharge == 2) {
fighter2focuschargebox1.visible = true
fighter2focuschargebox2.visible = true
fighter2focuschargebox3.visible = false
fighter2focuschargebox4.visible = false
fighter2focuschargebox5.visible = false
}
if (fighter2focuscharge == 3) {
fighter2focuschargebox1.visible = true
fighter2focuschargebox2.visible = true
fighter2focuschargebox3.visible = true
fighter2focuschargebox4.visible = false
fighter2focuschargebox5.visible = false
}
if (fighter2focuscharge == 4) {
fighter2focuschargebox1.visible = true
fighter2focuschargebox2.visible = true
fighter2focuschargebox3.visible = true
fighter2focuschargebox4.visible = true
fighter2focuschargebox5.visible = false
}
if (fighter2focuscharge == 5) {
fighter2focuschargebox1.visible = true
fighter2focuschargebox2.visible = true
fighter2focuschargebox3.visible = true
fighter2focuschargebox4.visible = true
fighter2focuschargebox5.visible = true
}

if (fighter2focuschargeon ==  true){
fighter2focustime += 1;
if (actionqueeffectnumber > 1){
    fighter2focustime += 1
}
if (fighter2focustime > 99) {
fighter2focuscharge += 1;
fighter2focustime -= 99;
}
if (fighter2focuscharge > 5) {
fighter2focuscharge = 5;
fighter2focustime = 99;
}
}
if (fighter3focuscharge == 0) {
fighter3focuschargebox1.visible = false
fighter3focuschargebox2.visible = false
fighter3focuschargebox3.visible = false
fighter3focuschargebox4.visible = false
fighter3focuschargebox5.visible = false
}
if (fighter3focuscharge == 1) {
fighter3focuschargebox1.visible = true
fighter3focuschargebox2.visible = false
fighter3focuschargebox3.visible = false
fighter3focuschargebox4.visible = false
fighter3focuschargebox5.visible = false
}
if (fighter3focuscharge == 2) {
fighter3focuschargebox1.visible = true
fighter3focuschargebox2.visible = true
fighter3focuschargebox3.visible = false
fighter3focuschargebox4.visible = false
fighter3focuschargebox5.visible = false
}
if (fighter3focuscharge == 3) {
fighter3focuschargebox1.visible = true
fighter3focuschargebox2.visible = true
fighter3focuschargebox3.visible = true
fighter3focuschargebox4.visible = false
fighter3focuschargebox5.visible = false
}
if (fighter3focuscharge == 4) {
fighter3focuschargebox1.visible = true
fighter3focuschargebox2.visible = true
fighter3focuschargebox3.visible = true
fighter3focuschargebox4.visible = true
fighter3focuschargebox5.visible = false
}
if (fighter3focuscharge == 5) {
fighter3focuschargebox1.visible = true
fighter3focuschargebox2.visible = true
fighter3focuschargebox3.visible = true
fighter3focuschargebox4.visible = true
fighter3focuschargebox5.visible = true
}

if (fighter3focuschargeon ==  true){
fighter3focustime += 1
if (actionqueeffectnumber > 1){
    fighter3focustime += 1
}
if (fighter3focustime > 99) {
fighter3focuscharge += 1;
fighter3focustime -= 99;
}
if (fighter3focuscharge > 5) {
fighter3focuscharge = 5;
fighter3focustime = 99;
}
}
if (fighter4focuscharge == 0) {
fighter4focuschargebox1.visible = false
fighter4focuschargebox2.visible = false
fighter4focuschargebox3.visible = false
fighter4focuschargebox4.visible = false
fighter4focuschargebox5.visible = false
}
if (fighter4focuscharge == 1) {
fighter4focuschargebox1.visible = true
fighter4focuschargebox2.visible = false
fighter4focuschargebox3.visible = false
fighter4focuschargebox4.visible = false
fighter4focuschargebox5.visible = false
}
if (fighter4focuscharge == 2) {
fighter4focuschargebox1.visible = true
fighter4focuschargebox2.visible = true
fighter4focuschargebox3.visible = false
fighter4focuschargebox4.visible = false
fighter4focuschargebox5.visible = false
}
if (fighter4focuscharge == 3) {
fighter4focuschargebox1.visible = true
fighter4focuschargebox2.visible = true
fighter4focuschargebox3.visible = true
fighter4focuschargebox4.visible = false
fighter4focuschargebox5.visible = false
}
if (fighter4focuscharge == 4) {
fighter4focuschargebox1.visible = true
fighter4focuschargebox2.visible = true
fighter4focuschargebox3.visible = true
fighter4focuschargebox4.visible = true
fighter4focuschargebox5.visible = false
}
if (fighter4focuscharge == 5) {
fighter4focuschargebox1.visible = true
fighter4focuschargebox2.visible = true
fighter4focuschargebox3.visible = true
fighter4focuschargebox4.visible = true
fighter4focuschargebox5.visible = true
}

if (fighter4focuschargeon ==  true){
fighter4focustime += 1;
if (actionqueeffectnumber > 1){
    fighter4focustime += 1
}
if (fighter4focustime > 99) {
fighter4focuscharge += 1;
fighter4focustime -= 99;
}
if (fighter4focuscharge > 5) {
fighter4focuscharge = 5;
fighter4focustime = 99;
}
}
if (fighter5focuscharge == 0) {
fighter5focuschargebox1.visible = false
fighter5focuschargebox2.visible = false
fighter5focuschargebox3.visible = false
fighter5focuschargebox4.visible = false
fighter5focuschargebox5.visible = false
}
if (fighter5focuscharge == 1) {
fighter5focuschargebox1.visible = true
fighter5focuschargebox2.visible = false
fighter5focuschargebox3.visible = false
fighter5focuschargebox4.visible = false
fighter5focuschargebox5.visible = false
}
if (fighter5focuscharge == 2) {
fighter5focuschargebox1.visible = true
fighter5focuschargebox2.visible = true
fighter5focuschargebox3.visible = false
fighter5focuschargebox4.visible = false
fighter5focuschargebox5.visible = false
}
if (fighter5focuscharge == 3) {
fighter5focuschargebox1.visible = true
fighter5focuschargebox2.visible = true
fighter5focuschargebox3.visible = true
fighter5focuschargebox4.visible = false
fighter5focuschargebox5.visible = false
}
if (fighter5focuscharge == 4) {
fighter5focuschargebox1.visible = true
fighter5focuschargebox2.visible = true
fighter5focuschargebox3.visible = true
fighter5focuschargebox4.visible = true
fighter5focuschargebox5.visible = false
}
if (fighter5focuscharge == 5) {
fighter5focuschargebox1.visible = true
fighter5focuschargebox2.visible = true
fighter5focuschargebox3.visible = true
fighter5focuschargebox4.visible = true
fighter5focuschargebox5.visible = true
}

if (fighter5focuschargeon ==  true){
fighter5focustime += 1;
if (actionqueeffectnumber > 1){
    fighter5focustime += 1
}
if (fighter5focustime > 99) {
fighter5focuscharge += 1;
fighter5focustime -= 99;
}
if (fighter5focuscharge > 5) {
fighter5focuscharge = 5;
fighter5focustime = 99;
}
}
if (fighter6focuscharge == 0) {
fighter6focuschargebox1.visible = false
fighter6focuschargebox2.visible = false
fighter6focuschargebox3.visible = false
fighter6focuschargebox4.visible = false
fighter6focuschargebox5.visible = false
}
if (fighter6focuscharge == 1) {
fighter6focuschargebox1.visible = true
fighter6focuschargebox2.visible = false
fighter6focuschargebox3.visible = false
fighter6focuschargebox4.visible = false
fighter6focuschargebox5.visible = false
}
if (fighter6focuscharge == 2) {
fighter6focuschargebox1.visible = true
fighter6focuschargebox2.visible = true
fighter6focuschargebox3.visible = false
fighter6focuschargebox4.visible = false
fighter6focuschargebox5.visible = false
}
if (fighter6focuscharge == 3) {
fighter6focuschargebox1.visible = true
fighter6focuschargebox2.visible = true
fighter6focuschargebox3.visible = true
fighter6focuschargebox4.visible = false
fighter6focuschargebox5.visible = false
}
if (fighter6focuscharge == 4) {
fighter6focuschargebox1.visible = true
fighter6focuschargebox2.visible = true
fighter6focuschargebox3.visible = true
fighter6focuschargebox4.visible = true
fighter6focuschargebox5.visible = false
}
if (fighter6focuscharge == 5) {
fighter6focuschargebox1.visible = true
fighter6focuschargebox2.visible = true
fighter6focuschargebox3.visible = true
fighter6focuschargebox4.visible = true
fighter6focuschargebox5.visible = true
}

if (fighter6focuschargeon ==  true){
fighter6focustime += 1
if (actionqueeffectnumber > 1){
    fighter6focustime += 1
}
if (fighter6focustime > 99) {
fighter6focuscharge += 1;
fighter6focustime -= 99;
}
if (fighter6focuscharge > 5) {
fighter6focuscharge = 5;
fighter6focustime = 99;
}
}
}


//actiontime
//action
//supportaction
function support1actiontime ()
{


if (this.support1name == 'Rosa'){
rosaaction = support1action
rosastatus = support1status
rosafrozen = support1frozen
}
if (this.support1name == 'Mog'){
mogaction = support1action
mogstatus = support1status
mogfrozen = support1frozen
}
if (support1health < 1) {
if (this.support1name == 'Rosa'){
support1status = 'dead'
rosaidle = false
rosadead = true
support1health = 0
}
if (this.support1name == 'Mog'){
support1status = 'dead'
mogidle = false
mogdead = true
support1health = 0
}
}

if (support1status == 'normal') {
support1action += support1actionregen;
if (support1action > 99) {
support1action = 100
if (this.support1name == 'Rosa'){
rosabuttontinton()
}
if (this.support1name == 'Mog'){
mogbuttontinton()
}
}
if (support1action < 100) {
if (this.support1name == 'Rosa'){
rosabuttontintoff()
support1nochargeactive = true
isrosacastingcure = false
isrosacastingheal = false
isrosacastingfast = false
isrosacastingshell = false
}
if (this.support1name == 'Mog'){
mogbuttontintoff()
}
}
}
if (support1action > 99) {
support1uiactionbar.anims.play('actionbar100gr', true);
support1actiontxt.visible = false
}

if (support1action > 90) {
if (support1action < 99) {
support1uiactionbar.anims.play('actionbar90gr', true);
}
}

if (support1action > 80) {
if (support1action < 89) {
support1uiactionbar.anims.play('actionbar80gr', true);
}
}

if (support1action > 70) {
if (support1action < 79) {
support1uiactionbar.anims.play('actionbar70gr', true);
}
}

if (support1action > 60) {
if (support1action < 69) {
support1uiactionbar.anims.play('actionbar60gr', true);
}
}

if (support1action > 50) {
if (support1action < 59) {
support1uiactionbar.anims.play('actionbar50gr', true);
}
}

if (support1action > 40) {
if (support1action < 49) {
support1uiactionbar.anims.play('actionbar40gr', true);
}
}

if (support1action > 30) {
if (support1action < 39) {
support1uiactionbar.anims.play('actionbar30gr', true);
}
}

if (support1action > 20) {
if (support1action < 29) {
support1uiactionbar.anims.play('actionbar20gr', true);
}
}

if (support1action < 10) {
support1uiactionbar.anims.play('actionbar10gr', true);
support1actiontxt.visible = true
isrosapickingtarget = false
}
}

function support2actiontime ()
{
if (this.support2name == 'Rosa'){
rosaaction = support2action
rosastatus = support2status
rosafrozen = support2frozen
}
if (this.support2name == 'Mog'){
mogaction = support2action
mogstatus = support2status
mogfrozen = support2frozen
}
if (support2health < 1) {
if (this.support2name == 'Rosa'){
support2status = 'dead'
rosaidle = false
rosadead = true
support2health = 0
}
if (this.support2name == 'Mog'){
support2status = 'dead'
mogidle = false
mogdead = true
support2health = 0
}
}

if (support2status == 'normal') {
support2action += support2actionregen;
if (support2action > 99) {
support2action = 100
if (this.support2name == 'Rosa'){
rosabuttontinton()
}
if (this.support2name == 'Mog'){
mogbuttontinton()
}
}
if (support2action < 100) {
if (this.support2name == 'Rosa'){
rosabuttontintoff()
}
if (this.support2name == 'Mog'){
mogbuttontintoff()
support2nochargeactive = true
}
}
}
if (support2action > 99) {
support2uiactionbar.anims.play('actionbar100gr', true);
support2actiontxt.visible = false
}

if (support2action > 90) {
if (support2action < 99) {
support2uiactionbar.anims.play('actionbar90gr', true);
}
}

if (support2action > 80) {
if (support2action < 89) {
support2uiactionbar.anims.play('actionbar80gr', true);
}
}

if (support2action > 70) {
if (support2action < 79) {
support2uiactionbar.anims.play('actionbar70gr', true);
}
}

if (support2action > 60) {
if (support2action < 69) {
support2uiactionbar.anims.play('actionbar60gr', true);
}
}

if (support2action > 50) {
if (support2action < 59) {
support2uiactionbar.anims.play('actionbar50gr', true);
}
}

if (support2action > 40) {
if (support2action < 49) {
support2uiactionbar.anims.play('actionbar40gr', true);
}
}

if (support2action > 30) {
if (support2action < 39) {
support2uiactionbar.anims.play('actionbar30gr', true);
}
}

if (support2action > 20) {
if (support2action < 29) {
support2uiactionbar.anims.play('actionbar20gr', true);
}
}

if (support2action < 10) {
support2uiactionbar.anims.play('actionbar10gr', true);
support2actiontxt.visible = false
}
}


//leader1action
function leader1actiontime ()
{
if (this.leader1name == 'Kang'){
kangaction = leader1action
kangstatus = leader1status
kangfrozen = leader1frozen
}
if (this.leader1name == 'Spinal'){
spinalaction = leader1action
spinalstatus = leader1status
spinalfrozen = leader1frozen
}
if (this.leader1name == 'Combo'){
comboaction = leader1action
combostatus = leader1status
combofrozen = leader1frozen
}
if (this.leader1name == 'Glacius'){
glaciusaction = leader1action
glaciusstatus = leader1status
glaciusfrozen = leader1frozen
}
if (this.leader1name == 'Cecil'){
cecilaction = leader1action
cecilstatus = leader1status
cecilfrozen = leader1frozen
}

if (leader1health < 1) {
if (this.leader1name == 'Kang'){
leader1status = 'dead'
kangidle = false
kangdead = true
leader1health = 0
}
if (this.leader1name == 'Spinal'){
leader1status = 'dead'
spinalidle = false
spinaldead = true
leader1health = 0
}
if (this.leader1name == 'Combo'){
leader1status = 'dead'
comboidle = false
combodead = true
leader1health = 0
}
if (this.leader1name == 'Glacius'){
leader1status = 'dead'
glaciusidle = false
glaciusdead = true
leader1health = 0
}
if (this.leader1name == 'Cecil'){
leader1status = 'dead'
Cecilidle = false
Cecildead = true
leader1health = 0
}
}

if (leader1status == 'normal') {
leader1action += leader1actionregen;
if (leader1action > 99) {
leader1action = 100
if (this.leader1name == 'Kang'){
kangbuttontinton()
}
if (this.leader1name == 'Spinal'){
spinalbuttontinton()
}
if (this.leader1name == 'Combo'){
combobuttontinton()
}
if (this.leader1name == 'Glacius'){
glaciusbuttontinton()
}
if (this.leader1name == 'Cecil'){
cecilbuttontinton()
}
}
if (leader1action < 100) {
if (this.leader1name == 'Kang'){
kangbuttontintoff()
}
if (this.leader1name == 'Spinal'){
spinalbuttontintoff()
}
if (this.leader1name == 'Combo'){
combobuttontintoff()
}
if (this.leader1name == 'Glacius'){
glaciusbuttontintoff()
}
if (this.leader1name == 'Cecil'){
cecilbuttontintoff()
}
}
}
if (leader1action > 99) {
leader1uiactionbar.anims.play('actionbar100gr', true);
leader1actiontxt.visible = false
}

if (leader1action > 90) {
if (leader1action < 99) {
leader1uiactionbar.anims.play('actionbar90gr', true);
}
}

if (leader1action > 80) {
if (leader1action < 89) {
leader1uiactionbar.anims.play('actionbar80gr', true);
}
}

if (leader1action > 70) {
if (leader1action < 79) {
leader1uiactionbar.anims.play('actionbar70gr', true);
}
}

if (leader1action > 60) {
if (leader1action < 69) {
leader1uiactionbar.anims.play('actionbar60gr', true);
}
}

if (leader1action > 50) {
if (leader1action < 59) {
leader1uiactionbar.anims.play('actionbar50gr', true);
}
}

if (leader1action > 40) {
if (leader1action < 49) {
leader1uiactionbar.anims.play('actionbar40gr', true);
}
}

if (leader1action > 30) {
if (leader1action < 39) {
leader1uiactionbar.anims.play('actionbar30gr', true);
}
}

if (leader1action > 20) {
if (leader1action < 29) {
leader1uiactionbar.anims.play('actionbar20gr', true);
}
}

if (leader1action < 10) {
leader1uiactionbar.anims.play('actionbar10gr', true);
leader1actiontxt.visible = true
}
}

//leader2action
function leader2actiontime ()
{
if (this.leader2name == 'Kang'){
kangaction = leader2action
kangstatus = leader2status
kangfrozen = leader2frozen
}
if (this.leader2name == 'Spinal'){
spinalaction = leader2action
spinalstatus = leader2status
spinalfrozen = leader2frozen
}
if (this.leader2name == 'Combo'){
comboaction = leader2action
combostatus = leader2status
combofrozen = leader2frozen
}
if (this.leader2name == 'Glacius'){
glaciusaction = leader2action
glaciusstatus = leader2status
glaciusfrozen = leader2frozen
}
if (this.leader2name == 'Cecil'){
cecilaction = leader2action
cecilstatus = leader2status
cecilfrozen = leader2frozen
}

if (leader2health < 1) {
if (this.leader2name == 'Kang'){
leader2status = 'dead'
kangidle = false
kangdead = true
leader2health = 0
}
if (this.leader2name == 'Spinal'){
leader2status = 'dead'
spinalidle = false
spinaldead = true
leader2health = 0
}
if (this.leader2name == 'Combo'){
leader2status = 'dead'
comboidle = false
combodead = true
leader2health = 0
}
if (this.leader2name == 'Glacius'){
leader2status = 'dead'
glaciusidle = false
glaciusdead = true
leader2health = 0
}
if (this.leader2name == 'Cecil'){
leader2status = 'dead'
Cecilidle = false
Cecildead = true
leader2health = 0
}
}

if (leader2status == 'normal') {
leader2action += leader2actionregen;
if (leader2action > 99) {
leader2action = 100
if (this.leader2name == 'Kang'){
kangbuttontinton()
}
if (this.leader2name == 'Spinal'){
spinalbuttontinton()
}
if (this.leader2name == 'Combo'){
combobuttontinton()
}
if (this.leader2name == 'Glacius'){
glaciusbuttontinton()
}
if (this.leader2name == 'Cecil'){
cecilbuttontinton()
}
}
if (leader2action < 100) {
if (this.leader2name == 'Kang'){
kangbuttontintoff()
}
if (this.leader2name == 'Spinal'){
spinalbuttontintoff()
}
if (this.leader2name == 'Combo'){
combobuttontintoff()
}
if (this.leader2name == 'Glacius'){
glaciusbuttontintoff()
}
if (this.leader2name == 'Cecil'){
cecilbuttontintoff()
}
}
}
if (leader2action > 99) {
leader2uiactionbar.anims.play('actionbar100gr', true);
leader2actiontxt.visible = false
}

if (leader2action > 90) {
if (leader2action < 99) {
leader2uiactionbar.anims.play('actionbar90gr', true);
}
}

if (leader2action > 80) {
if (leader2action < 89) {
leader2uiactionbar.anims.play('actionbar80gr', true);
}
}

if (leader2action > 70) {
if (leader2action < 79) {
leader2uiactionbar.anims.play('actionbar70gr', true);
}
}

if (leader2action > 60) {
if (leader2action < 69) {
leader2uiactionbar.anims.play('actionbar60gr', true);
}
}

if (leader2action > 50) {
if (leader2action < 59) {
leader2uiactionbar.anims.play('actionbar50gr', true);
}
}

if (leader2action > 40) {
if (leader2action < 49) {
leader2uiactionbar.anims.play('actionbar40gr', true);
}
}

if (leader2action > 30) {
if (leader2action < 39) {
leader2uiactionbar.anims.play('actionbar30gr', true);
}
}

if (leader2action > 20) {
if (leader2action < 29) {
leader2uiactionbar.anims.play('actionbar20gr', true);
}
}

if (leader2action < 10) {
leader2uiactionbar.anims.play('actionbar10gr', true);
leader2actiontxt.visible = true
}
}

//fighter1action
function fighter1actiontime ()
{
if (this.fighter1name == 'Kano'){
kanoaction = fighter1action
kanostatus = fighter1status
kanofrozen = fighter1frozen
}
if (this.fighter1name == 'Sindel'){
sindelaction = fighter1action
sindelstatus = fighter1status
sindelfrozen = fighter1frozen
}
if (this.fighter1name == 'Kabal'){
kabalaction = fighter1action
kabalstatus = fighter1status
kabalfrozen = fighter1frozen
}
if (this.fighter1name == 'Jago'){
jagoaction = fighter1action
jagostatus = fighter1status
jagofrozen = fighter1frozen
}
if (this.fighter1name == 'Cyrax'){
cyraxaction = fighter1action
cyraxstatus = fighter1status
cyraxfrozen = fighter1frozen
}
if (this.fighter1name == 'Cyan'){
cyanaction = fighter1action
cyanstatus = fighter1status
cyanfrozen = fighter1frozen
}
if (this.fighter1name == 'Golbez'){
golbezaction = fighter1action
golbezstatus = fighter1status
golbezfrozen = fighter1frozen
}
if (this.fighter1name == 'Kain'){
kainaction = fighter1action
kainstatus = fighter1status
kainfrozen = fighter1frozen
}
if (this.fighter1name == 'Terra'){
terraaction = fighter1action
terrastatus = fighter1status
terrafrozen = fighter1frozen
}
if (this.fighter1name == 'Kunglao'){
kunglaoaction = fighter1action
kunglaostatus = fighter1status
kunglaofrozen = fighter1frozen
}
if (this.fighter1name == 'Sonja'){
sonjaaction = fighter1action
sonjastatus = fighter1status
sonjafrozen = fighter1frozen
}
if (this.fighter1name == 'Sektor'){
sektoraction = fighter1action
sektorstatus = fighter1status
sektorfrozen = fighter1frozen
}
if (this.fighter1name == 'Orchid'){
orchidaction = fighter1action
orchidstatus = fighter1status
orchidfrozen = fighter1frozen
}

if (fighter1health < 1) {
if (this.fighter1name == 'Kano'){
fighter1status = 'dead'
kanoidle = false
kanodead = true
fighter1health = 0
}
if (this.fighter1name == 'Sindel'){
fighter1status = 'dead'
sindelidle = false
sindeldead = true
fighter1health = 0
}
if (this.fighter1name == 'Kabal'){
fighter1status = 'dead'
kabalidle = false
kabaldead = true
fighter1health = 0
}
if (this.fighter1name == 'Jago'){
fighter1status = 'dead'
jagoidle = false
jagodead = true
fighter1health = 0
}
if (this.fighter1name == 'Cyrax'){
fighter1status = 'dead'
Cyraxidle = false
Cyraxdead = true
fighter1health = 0
}
if (this.fighter1name == 'Cyan'){
fighter1status = 'dead'
cyanidle = false
cyandead = true
fighter1health = 0
}
if (this.fighter1name == 'Golbez'){
fighter1status = 'dead'
golbezidle = false
golbezdead = true
fighter1health = 0
}
if (this.fighter1name == 'Kain'){
fighter1status = 'dead'
kainidle = false
kaindead = true
fighter1health = 0
}
if (this.fighter1name == 'Terra'){
fighter1status = 'dead'
terraidle = false
terradead = true
fighter1health = 0
}
if (this.fighter1name == 'Kunglao'){
fighter1status = 'dead'
Kunglaoidle = false
Kunglaodead = true
fighter1health = 0
}
if (this.fighter1name == 'Sonja'){
fighter1status = 'dead'
sonjaidle = false
sonjadead = true
fighter1health = 0
}
if (this.fighter1name == 'Sektor'){
fighter1status = 'dead'
sektoridle = false
sektordead = true
fighter1health = 0
}
if (this.fighter1name == 'Orchid'){
fighter1status = 'dead'
orchididle = false
orchiddead = true
fighter1health = 0
}
}

if (fighter1status == 'normal') {
fighter1action += fighter1actionregen;
if (fighter1action > 99) {
fighter1action = 100
if (this.fighter1name == 'Kano'){
kanobuttontinton()
}
if (this.fighter1name == 'Sindel'){
sindelbuttontinton()
}
if (this.fighter1name == 'Kabal'){
kabalbuttontinton()
}
if (this.fighter1name == 'Jago'){
jagobuttontinton()
}
if (this.fighter1name == 'Cyrax'){
cyraxbuttontinton()
}
if (this.fighter1name == 'Cyan'){
cyanbuttontinton()
}
if (this.fighter1name == 'Golbez'){
golbezbuttontinton()
}
if (this.fighter1name == 'Kain'){
kainbuttontinton()
}
if (this.fighter1name == 'Terra'){
terrabuttontinton()
}
if (this.fighter1name == 'Kunglao'){
kunglaobuttontinton()
}
if (this.fighter1name == 'Sonja'){
sonjabuttontinton()
}
if (this.fighter1name == 'Sektor'){
sektorbuttontinton()
}
if (this.fighter1name == 'Orchid'){
orchidbuttontinton()
}
}
if (fighter1action < 100) {
if (this.fighter1name == 'Kano'){
kanobuttontintoff()
}
if (this.fighter1name == 'Sindel'){
sindelbuttontintoff()
}
if (this.fighter1name == 'Kabal'){
kabalbuttontintoff()
}
if (this.fighter1name == 'Jago'){
jagobuttontintoff()
}
if (this.fighter1name == 'Cyrax'){
cyraxbuttontintoff()
}
if (this.fighter1name == 'Cyan'){
cyanbuttontintoff()
}
if (this.fighter1name == 'Golbez'){
golbezbuttontintoff()
}
if (this.fighter1name == 'Kain'){
kainbuttontintoff()
}
if (this.fighter1name == 'Terra'){
terrabuttontintoff()
}
if (this.fighter1name == 'Kunglao'){
kunglaobuttontintoff()
}
if (this.fighter1name == 'Sonja'){
sonjabuttontintoff()
}
if (this.fighter1name == 'Sektor'){
sektorbuttontintoff()
}
if (this.fighter1name == 'Orchid'){
orchidbuttontintoff()
}
}
}
if (fighter1action > 99) {
fighter1uiactionbar.anims.play('actionbar100gr', true);
fighter1actiontxt.visible = false
}

if (fighter1action > 90) {
if (fighter1action < 99) {
fighter1uiactionbar.anims.play('actionbar90gr', true);
}
}

if (fighter1action > 80) {
if (fighter1action < 89) {
fighter1uiactionbar.anims.play('actionbar80gr', true);
}
}

if (fighter1action > 70) {
if (fighter1action < 79) {
fighter1uiactionbar.anims.play('actionbar70gr', true);
}
}

if (fighter1action > 60) {
if (fighter1action < 69) {
fighter1uiactionbar.anims.play('actionbar60gr', true);
}
}

if (fighter1action > 50) {
if (fighter1action < 59) {
fighter1uiactionbar.anims.play('actionbar50gr', true);
}
}

if (fighter1action > 40) {
if (fighter1action < 49) {
fighter1uiactionbar.anims.play('actionbar40gr', true);
}
}

if (fighter1action > 30) {
if (fighter1action < 39) {
fighter1uiactionbar.anims.play('actionbar30gr', true);
}
}

if (fighter1action > 20) {
if (fighter1action < 29) {
fighter1uiactionbar.anims.play('actionbar20gr', true);
}
}

if (fighter1action < 10) {
fighter1uiactionbar.anims.play('actionbar10gr', true);
fighter1actiontxt.visible = true
}
}

//fighter2action
function fighter2actiontime ()
{
if (this.fighter2name == 'Kano'){
kanoaction = fighter2action
kanostatus = fighter2status
kanofrozen = fighter2frozen
}
if (this.fighter2name == 'Sindel'){
sindelaction = fighter2action
sindelstatus = fighter2status
sindelfrozen = fighter2frozen
}
if (this.fighter2name == 'Kabal'){
kabalaction = fighter2action
kabalstatus = fighter2status
kabalfrozen = fighter2frozen
}
if (this.fighter2name == 'Jago'){
jagoaction = fighter2action
jagostatus = fighter2status
jagofrozen = fighter2frozen
}
if (this.fighter2name == 'Cyrax'){
cyraxaction = fighter2action
cyraxstatus = fighter2status
cyraxfrozen = fighter2frozen
}
if (this.fighter2name == 'Cyan'){
cyanaction = fighter2action
cyanstatus = fighter2status
cyanfrozen = fighter2frozen
}
if (this.fighter2name == 'Golbez'){
golbezaction = fighter2action
golbezstatus = fighter2status
golbezfrozen = fighter2frozen
}
if (this.fighter2name == 'Kain'){
kainaction = fighter2action
kainstatus = fighter2status
kainfrozen = fighter2frozen
}
if (this.fighter2name == 'Terra'){
terraaction = fighter2action
terrastatus = fighter2status
terrafrozen = fighter2frozen
}
if (this.fighter2name == 'Kunglao'){
kunglaoaction = fighter2action
kunglaostatus = fighter2status
kunglaofrozen = fighter2frozen
}
if (this.fighter2name == 'Sonja'){
sonjaaction = fighter2action
sonjastatus = fighter2status
sonjafrozen = fighter2frozen
}
if (this.fighter2name == 'Sektor'){
sektoraction = fighter2action
sektorstatus = fighter2status
sektorfrozen = fighter2frozen
}
if (this.fighter2name == 'Orchid'){
orchidaction = fighter2action
orchidstatus = fighter2status
orchidfrozen = fighter2frozen
}

if (fighter2health < 1) {
if (this.fighter2name == 'Kano'){
fighter2status = 'dead'
kanoidle = false
kanodead = true
fighter2health = 0
}
if (this.fighter2name == 'Sindel'){
fighter2status = 'dead'
sindelidle = false
sindeldead = true
fighter2health = 0
}
if (this.fighter2name == 'Kabal'){
fighter2status = 'dead'
kabalidle = false
kabaldead = true
fighter2health = 0
}
if (this.fighter2name == 'Jago'){
fighter2status = 'dead'
jagoidle = false
jagodead = true
fighter2health = 0
}
if (this.fighter2name == 'Cyrax'){
fighter2status = 'dead'
Cyraxidle = false
Cyraxdead = true
fighter2health = 0
}
if (this.fighter2name == 'Cyan'){
fighter2status = 'dead'
cyanidle = false
cyandead = true
fighter2health = 0
}
if (this.fighter2name == 'Golbez'){
fighter2status = 'dead'
golbezidle = false
golbezdead = true
fighter2health = 0
}
if (this.fighter2name == 'Kain'){
fighter2status = 'dead'
kainidle = false
kaindead = true
fighter2health = 0
}
if (this.fighter2name == 'Terra'){
fighter2status = 'dead'
terraidle = false
terradead = true
fighter2health = 0
}
if (this.fighter2name == 'Kunglao'){
fighter2status = 'dead'
Kunglaoidle = false
Kunglaodead = true
fighter2health = 0
}
if (this.fighter2name == 'Sonja'){
fighter2status = 'dead'
sonjaidle = false
sonjadead = true
fighter2health = 0
}
if (this.fighter2name == 'Sektor'){
fighter2status = 'dead'
sektoridle = false
sektordead = true
fighter2health = 0
}
if (this.fighter2name == 'Orchid'){
fighter2status = 'dead'
orchididle = false
orchiddead = true
fighter2health = 0
}
}

if (fighter2status == 'normal') {
fighter2action += fighter2actionregen;
if (fighter2action > 99) {
fighter2action = 100
if (this.fighter2name == 'Kano'){
kanobuttontinton()
}
if (this.fighter2name == 'Sindel'){
sindelbuttontinton()
}
if (this.fighter2name == 'Kabal'){
kabalbuttontinton()
}
if (this.fighter2name == 'Jago'){
jagobuttontinton()
}
if (this.fighter2name == 'Cyrax'){
cyraxbuttontinton()
}
if (this.fighter2name == 'Cyan'){
cyanbuttontinton()
}
if (this.fighter2name == 'Golbez'){
golbezbuttontinton()
}
if (this.fighter2name == 'Kain'){
kainbuttontinton()
}
if (this.fighter2name == 'Terra'){
terrabuttontinton()
}
if (this.fighter2name == 'Kunglao'){
kunglaobuttontinton()
}
if (this.fighter2name == 'Sonja'){
sonjabuttontinton()
}
if (this.fighter2name == 'Sektor'){
sektorbuttontinton()
}
if (this.fighter2name == 'Orchid'){
orchidbuttontinton()
}
}
if (fighter2action < 100) {
if (this.fighter2name == 'Kano'){
kanobuttontintoff()
}
if (this.fighter2name == 'Sindel'){
sindelbuttontintoff()
}
if (this.fighter2name == 'Kabal'){
kabalbuttontintoff()
}
if (this.fighter2name == 'Jago'){
jagobuttontintoff()
}
if (this.fighter2name == 'Cyrax'){
cyraxbuttontintoff()
}
if (this.fighter2name == 'Cyan'){
cyanbuttontintoff()
}
if (this.fighter2name == 'Golbez'){
golbezbuttontintoff()
}
if (this.fighter2name == 'Kain'){
kainbuttontintoff()
}
if (this.fighter2name == 'Terra'){
terrabuttontintoff()
}
if (this.fighter2name == 'Kunglao'){
kunglaobuttontintoff()
}
if (this.fighter2name == 'Sonja'){
sonjabuttontintoff()
}
if (this.fighter2name == 'Sektor'){
sektorbuttontintoff()
}
if (this.fighter2name == 'Orchid'){
orchidbuttontintoff()
}
}
}
if (fighter2action > 99) {
fighter2uiactionbar.anims.play('actionbar100gr', true);
fighter2actiontxt.visible = false
}

if (fighter2action > 90) {
if (fighter2action < 99) {
fighter2uiactionbar.anims.play('actionbar90gr', true);
}
}

if (fighter2action > 80) {
if (fighter2action < 89) {
fighter2uiactionbar.anims.play('actionbar80gr', true);
}
}

if (fighter2action > 70) {
if (fighter2action < 79) {
fighter2uiactionbar.anims.play('actionbar70gr', true);
}
}

if (fighter2action > 60) {
if (fighter2action < 69) {
fighter2uiactionbar.anims.play('actionbar60gr', true);
}
}

if (fighter2action > 50) {
if (fighter2action < 59) {
fighter2uiactionbar.anims.play('actionbar50gr', true);
}
}

if (fighter2action > 40) {
if (fighter2action < 49) {
fighter2uiactionbar.anims.play('actionbar40gr', true);
}
}

if (fighter2action > 30) {
if (fighter2action < 39) {
fighter2uiactionbar.anims.play('actionbar30gr', true);
}
}

if (fighter2action > 20) {
if (fighter2action < 29) {
fighter2uiactionbar.anims.play('actionbar20gr', true);
}
}

if (fighter2action < 10) {
fighter2uiactionbar.anims.play('actionbar10gr', true);
fighter2actiontxt.visible = true
}
}
//fighter3action
function fighter3actiontime ()
{
if (this.fighter3name == 'Kano'){
kanoaction = fighter3action
kanostatus = fighter3status
kanofrozen = fighter3frozen
}
if (this.fighter3name == 'Sindel'){
sindelaction = fighter3action
sindelstatus = fighter3status
sindelfrozen = fighter3frozen
}
if (this.fighter3name == 'Kabal'){
kabalaction = fighter3action
kabalstatus = fighter3status
kabalfrozen = fighter3frozen
}
if (this.fighter3name == 'Jago'){
jagoaction = fighter3action
jagostatus = fighter3status
jagofrozen = fighter3frozen
}
if (this.fighter3name == 'Cyrax'){
cyraxaction = fighter3action
cyraxstatus = fighter3status
cyraxfrozen = fighter3frozen
}
if (this.fighter3name == 'Cyan'){
cyanaction = fighter3action
cyanstatus = fighter3status
cyanfrozen = fighter3frozen
}
if (this.fighter3name == 'Golbez'){
golbezaction = fighter3action
golbezstatus = fighter3status
golbezfrozen = fighter3frozen
}
if (this.fighter3name == 'Kain'){
kainaction = fighter3action
kainstatus = fighter3status
kainfrozen = fighter3frozen
}
if (this.fighter3name == 'Terra'){
terraaction = fighter3action
terrastatus = fighter3status
terrafrozen = fighter3frozen
}
if (this.fighter3name == 'Kunglao'){
kunglaoaction = fighter3action
kunglaostatus = fighter3status
kunglaofrozen = fighter3frozen
}
if (this.fighter3name == 'Sonja'){
sonjaaction = fighter3action
sonjastatus = fighter3status
sonjafrozen = fighter3frozen
}
if (this.fighter3name == 'Sektor'){
sektoraction = fighter3action
sektorstatus = fighter3status
sektorfrozen = fighter3frozen
}
if (this.fighter3name == 'Orchid'){
orchidaction = fighter3action
orchidstatus = fighter3status
orchidfrozen = fighter3frozen
}

if (fighter3health < 1) {
if (this.fighter3name == 'Kano'){
fighter3status = 'dead'
kanoidle = false
kanodead = true
fighter3health = 0
}
if (this.fighter3name == 'Sindel'){
fighter3status = 'dead'
sindelidle = false
sindeldead = true
fighter3health = 0
}
if (this.fighter3name == 'Kabal'){
fighter3status = 'dead'
kabalidle = false
kabaldead = true
fighter3health = 0
}
if (this.fighter3name == 'Jago'){
fighter3status = 'dead'
jagoidle = false
jagodead = true
fighter3health = 0
}
if (this.fighter3name == 'Cyrax'){
fighter3status = 'dead'
Cyraxidle = false
Cyraxdead = true
fighter3health = 0
}
if (this.fighter3name == 'Cyan'){
fighter3status = 'dead'
cyanidle = false
cyandead = true
fighter3health = 0
}
if (this.fighter3name == 'Golbez'){
fighter3status = 'dead'
golbezidle = false
golbezdead = true
fighter3health = 0
}
if (this.fighter3name == 'Kain'){
fighter3status = 'dead'
kainidle = false
kaindead = true
fighter3health = 0
}
if (this.fighter3name == 'Terra'){
fighter3status = 'dead'
terraidle = false
terradead = true
fighter3health = 0
}
if (this.fighter3name == 'Kunglao'){
fighter3status = 'dead'
Kunglaoidle = false
Kunglaodead = true
fighter3health = 0
}
if (this.fighter3name == 'Sonja'){
fighter3status = 'dead'
sonjaidle = false
sonjadead = true
fighter3health = 0
}
if (this.fighter3name == 'Sektor'){
fighter3status = 'dead'
sektoridle = false
sektordead = true
fighter3health = 0
}
if (this.fighter3name == 'Orchid'){
fighter3status = 'dead'
orchididle = false
orchiddead = true
fighter3health = 0
}
}

if (fighter3status == 'normal') {
fighter3action += fighter3actionregen;
if (fighter3action > 99) {
fighter3action = 100
if (this.fighter3name == 'Kano'){
kanobuttontinton()
}
if (this.fighter3name == 'Sindel'){
sindelbuttontinton()
}
if (this.fighter3name == 'Kabal'){
kabalbuttontinton()
}
if (this.fighter3name == 'Jago'){
jagobuttontinton()
}
if (this.fighter3name == 'Cyrax'){
cyraxbuttontinton()
}
if (this.fighter3name == 'Cyan'){
cyanbuttontinton()
}
if (this.fighter3name == 'Golbez'){
golbezbuttontinton()
}
if (this.fighter3name == 'Kain'){
kainbuttontinton()
}
if (this.fighter3name == 'Terra'){
terrabuttontinton()
}
if (this.fighter3name == 'Kunglao'){
kunglaobuttontinton()
}
if (this.fighter3name == 'Sonja'){
sonjabuttontinton()
}
if (this.fighter3name == 'Sektor'){
sektorbuttontinton()
}
if (this.fighter3name == 'Orchid'){
orchidbuttontinton()
}
}
if (fighter3action < 100) {
if (this.fighter3name == 'Kano'){
kanobuttontintoff()
}
if (this.fighter3name == 'Sindel'){
sindelbuttontintoff()
}
if (this.fighter3name == 'Kabal'){
kabalbuttontintoff()
}
if (this.fighter3name == 'Jago'){
jagobuttontintoff()
}
if (this.fighter3name == 'Cyrax'){
cyraxbuttontintoff()
}
if (this.fighter3name == 'Cyan'){
cyanbuttontintoff()
}
if (this.fighter3name == 'Golbez'){
golbezbuttontintoff()
}
if (this.fighter3name == 'Kain'){
kainbuttontintoff()
}
if (this.fighter3name == 'Terra'){
terrabuttontintoff()
}
if (this.fighter3name == 'Kunglao'){
kunglaobuttontintoff()
}
if (this.fighter3name == 'Sonja'){
sonjabuttontintoff()
}
if (this.fighter3name == 'Sektor'){
sektorbuttontintoff()
}
if (this.fighter3name == 'Orchid'){
orchidbuttontintoff()
}
}
}
if (fighter3action > 99) {
fighter3uiactionbar.anims.play('actionbar100gr', true);
fighter3actiontxt.visible = false
}

if (fighter3action > 90) {
if (fighter3action < 99) {
fighter3uiactionbar.anims.play('actionbar90gr', true);
}
}

if (fighter3action > 80) {
if (fighter3action < 89) {
fighter3uiactionbar.anims.play('actionbar80gr', true);
}
}

if (fighter3action > 70) {
if (fighter3action < 79) {
fighter3uiactionbar.anims.play('actionbar70gr', true);
}
}

if (fighter3action > 60) {
if (fighter3action < 69) {
fighter3uiactionbar.anims.play('actionbar60gr', true);
}
}

if (fighter3action > 50) {
if (fighter3action < 59) {
fighter3uiactionbar.anims.play('actionbar50gr', true);
}
}

if (fighter3action > 40) {
if (fighter3action < 49) {
fighter3uiactionbar.anims.play('actionbar40gr', true);
}
}

if (fighter3action > 30) {
if (fighter3action < 39) {
fighter3uiactionbar.anims.play('actionbar30gr', true);
}
}

if (fighter3action > 20) {
if (fighter3action < 29) {
fighter3uiactionbar.anims.play('actionbar20gr', true);
}
}

if (fighter3action < 10) {
fighter3uiactionbar.anims.play('actionbar10gr', true);
fighter3actiontxt.visible = true
}
}


//fighter4action
function fighter4actiontime ()
{
if (this.fighter4name == 'Kano'){
kanoaction = fighter4action
kanostatus = fighter4status
kanofrozen = fighter4frozen
}
if (this.fighter4name == 'Sindel'){
sindelaction = fighter4action
sindelstatus = fighter4status
sindelfrozen = fighter4frozen
}
if (this.fighter4name == 'Kabal'){
kabalaction = fighter4action
kabalstatus = fighter4status
kabalfrozen = fighter4frozen
}
if (this.fighter4name == 'Jago'){
jagoaction = fighter4action
jagostatus = fighter4status
jagofrozen = fighter4frozen
}
if (this.fighter4name == 'Cyrax'){
cyraxaction = fighter4action
cyraxstatus = fighter4status
cyraxfrozen = fighter4frozen
}
if (this.fighter4name == 'Cyan'){
cyanaction = fighter4action
cyanstatus = fighter4status
cyanfrozen = fighter4frozen
}
if (this.fighter4name == 'Golbez'){
golbezaction = fighter4action
golbezstatus = fighter4status
golbezfrozen = fighter4frozen
}
if (this.fighter4name == 'Kain'){
kainaction = fighter4action
kainstatus = fighter4status
kainfrozen = fighter4frozen
}
if (this.fighter4name == 'Terra'){
terraaction = fighter4action
terrastatus = fighter4status
terrafrozen = fighter4frozen
}
if (this.fighter4name == 'Kunglao'){
kunglaoaction = fighter4action
kunglaostatus = fighter4status
kunglaofrozen = fighter4frozen
}
if (this.fighter4name == 'Sonja'){
sonjaaction = fighter4action
sonjastatus = fighter4status
sonjafrozen = fighter4frozen
}
if (this.fighter4name == 'Sektor'){
sektoraction = fighter4action
sektorstatus = fighter4status
sektorfrozen = fighter4frozen
}
if (this.fighter4name == 'Orchid'){
orchidaction = fighter4action
orchidstatus = fighter4status
orchidfrozen = fighter4frozen
}

if (fighter4health < 1) {
if (this.fighter4name == 'Kano'){
fighter4status = 'dead'
kanoidle = false
kanodead = true
fighter4health = 0
}
if (this.fighter4name == 'Sindel'){
fighter4status = 'dead'
sindelidle = false
sindeldead = true
fighter4health = 0
}
if (this.fighter4name == 'Kabal'){
fighter4status = 'dead'
kabalidle = false
kabaldead = true
fighter4health = 0
}
if (this.fighter4name == 'Jago'){
fighter4status = 'dead'
jagoidle = false
jagodead = true
fighter4health = 0
}
if (this.fighter4name == 'Cyrax'){
fighter4status = 'dead'
Cyraxidle = false
Cyraxdead = true
fighter4health = 0
}
if (this.fighter4name == 'Cyan'){
fighter4status = 'dead'
cyanidle = false
cyandead = true
fighter4health = 0
}
if (this.fighter4name == 'Golbez'){
fighter4status = 'dead'
golbezidle = false
golbezdead = true
fighter4health = 0
}
if (this.fighter4name == 'Kain'){
fighter4status = 'dead'
kainidle = false
kaindead = true
fighter4health = 0
}
if (this.fighter4name == 'Terra'){
fighter4status = 'dead'
terraidle = false
terradead = true
fighter4health = 0
}
if (this.fighter4name == 'Kunglao'){
fighter4status = 'dead'
kunglaoidle = false
kunglaodead = true
fighter4health = 0
}
if (this.fighter4name == 'Sonja'){
fighter4status = 'dead'
sonjaidle = false
sonjadead = true
fighter4health = 0
}
if (this.fighter4name == 'Sektor'){
fighter4status = 'dead'
sektoridle = false
sektordead = true
fighter4health = 0
}
if (this.fighter4name == 'Orchid'){
fighter4status = 'dead'
orchididle = false
orchiddead = true
fighter4health = 0
}
}

if (fighter4status == 'normal') {
fighter4action += fighter4actionregen;
if (fighter4action > 99) {
fighter4action = 100
if (this.fighter4name == 'Kano'){
kanobuttontinton()
}
if (this.fighter4name == 'Sindel'){
sindelbuttontinton()
}
if (this.fighter4name == 'Kabal'){
kabalbuttontinton()
}
if (this.fighter4name == 'Jago'){
jagobuttontinton()
}
if (this.fighter4name == 'Cyrax'){
cyraxbuttontinton()
}
if (this.fighter4name == 'Cyan'){
cyanbuttontinton()
}
if (this.fighter4name == 'Golbez'){
golbezbuttontinton()
}
if (this.fighter4name == 'Kain'){
kainbuttontinton()
}
if (this.fighter4name == 'Terra'){
terrabuttontinton()
}
if (this.fighter4name == 'Kunglao'){
kunglaobuttontinton()
}
if (this.fighter4name == 'Sonja'){
sonjabuttontinton()
}
if (this.fighter4name == 'Sektor'){
sektorbuttontinton()
}
if (this.fighter4name == 'Orchid'){
orchidbuttontinton()
}
}
if (fighter4action < 100) {
if (this.fighter4name == 'Kano'){
kanobuttontintoff()
}
if (this.fighter4name == 'Sindel'){
sindelbuttontintoff()
}
if (this.fighter4name == 'Kabal'){
kabalbuttontintoff()
}
if (this.fighter4name == 'Jago'){
jagobuttontintoff()
}
if (this.fighter4name == 'Cyrax'){
cyraxbuttontintoff()
}
if (this.fighter4name == 'Cyan'){
cyanbuttontintoff()
}
if (this.fighter4name == 'Golbez'){
golbezbuttontintoff()
}
if (this.fighter4name == 'Kain'){
kainbuttontintoff()
}
if (this.fighter4name == 'Terra'){
terrabuttontintoff()
}
if (this.fighter4name == 'Kunglao'){
kunglaobuttontintoff()
}
if (this.fighter4name == 'Sonja'){
sonjabuttontintoff()
}
if (this.fighter4name == 'Sektor'){
sektorbuttontintoff()
}
if (this.fighter4name == 'Orchid'){
orchidbuttontintoff()
}
}
}
if (fighter4action > 99) {
fighter4uiactionbar.anims.play('actionbar100gr', true);
fighter4actiontxt.visible = false
}

if (fighter4action > 90) {
if (fighter4action < 99) {
fighter4uiactionbar.anims.play('actionbar90gr', true);
}
}

if (fighter4action > 80) {
if (fighter4action < 89) {
fighter4uiactionbar.anims.play('actionbar80gr', true);
}
}

if (fighter4action > 70) {
if (fighter4action < 79) {
fighter4uiactionbar.anims.play('actionbar70gr', true);
}
}

if (fighter4action > 60) {
if (fighter4action < 69) {
fighter4uiactionbar.anims.play('actionbar60gr', true);
}
}

if (fighter4action > 50) {
if (fighter4action < 59) {
fighter4uiactionbar.anims.play('actionbar50gr', true);
}
}

if (fighter4action > 40) {
if (fighter4action < 49) {
fighter4uiactionbar.anims.play('actionbar40gr', true);
}
}

if (fighter4action > 30) {
if (fighter4action < 39) {
fighter4uiactionbar.anims.play('actionbar30gr', true);
}
}

if (fighter4action > 20) {
if (fighter4action < 29) {
fighter4uiactionbar.anims.play('actionbar20gr', true);
}
}

if (fighter4action < 10) {
fighter4uiactionbar.anims.play('actionbar10gr', true);
fighter4actiontxt.visible = true
}
}

//fighter5action
function fighter5actiontime ()
{
if (this.fighter5name == 'Kano'){
kanoaction = fighter5action
kanostatus = fighter5status
kanofrozen = fighter5frozen
}
if (this.fighter5name == 'Sindel'){
sindelaction = fighter5action
sindelstatus = fighter5status
sindelfrozen = fighter5frozen
}
if (this.fighter5name == 'Kabal'){
kabalaction = fighter5action
kabalstatus = fighter5status
kabalfrozen = fighter5frozen
}
if (this.fighter5name == 'Jago'){
jagoaction = fighter5action
jagostatus = fighter5status
jagofrozen = fighter5frozen
}
if (this.fighter5name == 'Cyrax'){
cyraxaction = fighter5action
cyraxstatus = fighter5status
cyraxfrozen = fighter5frozen
}
if (this.fighter5name == 'Cyan'){
cyanaction = fighter5action
cyanstatus = fighter5status
cyanfrozen = fighter5frozen
}
if (this.fighter5name == 'Golbez'){
golbezaction = fighter5action
golbezstatus = fighter5status
golbezfrozen = fighter5frozen
}
if (this.fighter5name == 'Kain'){
kainaction = fighter5action
kainstatus = fighter5status
kainfrozen = fighter5frozen
}
if (this.fighter5name == 'Terra'){
terraaction = fighter5action
terrastatus = fighter5status
terrafrozen = fighter5frozen
}
if (this.fighter5name == 'Kunglao'){
kunglaoaction = fighter5action
kunglaostatus = fighter5status
kunglaofrozen = fighter5frozen
}
if (this.fighter5name == 'Sonja'){
sonjaaction = fighter5action
sonjastatus = fighter5status
sonjafrozen = fighter5frozen
}
if (this.fighter5name == 'Sektor'){
sektoraction = fighter5action
sektorstatus = fighter5status
sektorfrozen = fighter5frozen
}
if (this.fighter5name == 'Orchid'){
orchidaction = fighter5action
orchidstatus = fighter5status
orchidfrozen = fighter5frozen
}

if (fighter5health < 1) {
if (this.fighter5name == 'Kano'){
fighter5status = 'dead'
kanoidle = false
kanodead = true
fighter5health = 0
}
if (this.fighter5name == 'Sindel'){
fighter5status = 'dead'
sindelidle = false
sindeldead = true
fighter5health = 0
}
if (this.fighter5name == 'Kabal'){
fighter5status = 'dead'
kabalidle = false
kabaldead = true
fighter5health = 0
}
if (this.fighter5name == 'Jago'){
fighter5status = 'dead'
jagoidle = false
jagodead = true
fighter5health = 0
}
if (this.fighter5name == 'Cyrax'){
fighter5status = 'dead'
Cyraxidle = false
Cyraxdead = true
fighter5health = 0
}
if (this.fighter5name == 'Cyan'){
fighter5status = 'dead'
cyanidle = false
cyandead = true
fighter5health = 0
}
if (this.fighter5name == 'Golbez'){
fighter5status = 'dead'
golbezidle = false
golbezdead = true
fighter5health = 0
}
if (this.fighter5name == 'Kain'){
fighter5status = 'dead'
kainidle = false
kaindead = true
fighter5health = 0
}
if (this.fighter5name == 'Terra'){
fighter5status = 'dead'
terraidle = false
terradead = true
fighter5health = 0
}
if (this.fighter5name == 'Kunglao'){
fighter5status = 'dead'
Kunglaoidle = false
Kunglaodead = true
fighter5health = 0
}
if (this.fighter5name == 'Sonja'){
fighter5status = 'dead'
sonjaidle = false
sonjadead = true
fighter5health = 0
}
if (this.fighter5name == 'Sektor'){
fighter5status = 'dead'
sektoridle = false
sektordead = true
fighter5health = 0
}
if (this.fighter5name == 'Orchid'){
fighter5status = 'dead'
orchididle = false
orchiddead = true
fighter5health = 0
}
}

if (fighter5status == 'normal') {
fighter5action += fighter5actionregen;
if (fighter5action > 99) {
fighter5action = 100
if (this.fighter5name == 'Kano'){
kanobuttontinton()
}
if (this.fighter5name == 'Sindel'){
sindelbuttontinton()
}
if (this.fighter5name == 'Kabal'){
kabalbuttontinton()
}
if (this.fighter5name == 'Jago'){
jagobuttontinton()
}
if (this.fighter5name == 'Cyrax'){
cyraxbuttontinton()
}
if (this.fighter5name == 'Cyan'){
cyanbuttontinton()
}
if (this.fighter5name == 'Golbez'){
golbezbuttontinton()
}
if (this.fighter5name == 'Kain'){
kainbuttontinton()
}
if (this.fighter5name == 'Terra'){
terrabuttontinton()
}
if (this.fighter5name == 'Kunglao'){
kunglaobuttontinton()
}
if (this.fighter5name == 'Sonja'){
sonjabuttontinton()
}
if (this.fighter5name == 'Sektor'){
sektorbuttontinton()
}
if (this.fighter5name == 'Orchid'){
orchidbuttontinton()
}
}
if (fighter5action < 100) {
if (this.fighter5name == 'Kano'){
kanobuttontintoff()
}
if (this.fighter5name == 'Sindel'){
sindelbuttontintoff()
}
if (this.fighter5name == 'Kabal'){
kabalbuttontintoff()
}
if (this.fighter5name == 'Jago'){
jagobuttontintoff()
}
if (this.fighter5name == 'Cyrax'){
cyraxbuttontintoff()
}
if (this.fighter5name == 'Cyan'){
cyanbuttontintoff()
}
if (this.fighter5name == 'Golbez'){
golbezbuttontintoff()
}
if (this.fighter5name == 'Kain'){
kainbuttontintoff()
}
if (this.fighter5name == 'Terra'){
terrabuttontintoff()
}
if (this.fighter5name == 'Kunglao'){
kunglaobuttontintoff()
}
if (this.fighter5name == 'Sonja'){
sonjabuttontintoff()
}
if (this.fighter5name == 'Sektor'){
sektorbuttontintoff()
}
if (this.fighter5name == 'Orchid'){
orchidbuttontintoff()
}
}
}
if (fighter5action > 99) {
fighter5uiactionbar.anims.play('actionbar100gr', true);
fighter5actiontxt.visible = false
}

if (fighter5action > 90) {
if (fighter5action < 99) {
fighter5uiactionbar.anims.play('actionbar90gr', true);
}
}

if (fighter5action > 80) {
if (fighter5action < 89) {
fighter5uiactionbar.anims.play('actionbar80gr', true);
}
}

if (fighter5action > 70) {
if (fighter5action < 79) {
fighter5uiactionbar.anims.play('actionbar70gr', true);
}
}

if (fighter5action > 60) {
if (fighter5action < 69) {
fighter5uiactionbar.anims.play('actionbar60gr', true);
}
}

if (fighter5action > 50) {
if (fighter5action < 59) {
fighter5uiactionbar.anims.play('actionbar50gr', true);
}
}

if (fighter5action > 40) {
if (fighter5action < 49) {
fighter5uiactionbar.anims.play('actionbar40gr', true);
}
}

if (fighter5action > 30) {
if (fighter5action < 39) {
fighter5uiactionbar.anims.play('actionbar30gr', true);
}
}

if (fighter5action > 20) {
if (fighter5action < 29) {
fighter5uiactionbar.anims.play('actionbar20gr', true);
}
}

if (fighter5action < 10) {
fighter5uiactionbar.anims.play('actionbar10gr', true);
fighter5actiontxt.visible = true
}
}

//fighter6action
function fighter6actiontime ()
{
if (this.fighter6name == 'Kano'){
kanoaction = fighter6action
kanostatus = fighter6status
kanofrozen = fighter6frozen
}
if (this.fighter6name == 'Sindel'){
sindelaction = fighter6action
sindelstatus = fighter6status
sindelfrozen = fighter6frozen
}
if (this.fighter6name == 'Kabal'){
kabalaction = fighter6action
kabalstatus = fighter6status
kabalfrozen = fighter6frozen
}
if (this.fighter6name == 'Jago'){
jagoaction = fighter6action
jagostatus = fighter6status
jagofrozen = fighter6frozen
}
if (this.fighter6name == 'Cyrax'){
cyraxaction = fighter6action
cyraxstatus = fighter6status
cyraxfrozen = fighter6frozen
}
if (this.fighter6name == 'Cyan'){
cyanaction = fighter6action
cyanstatus = fighter6status
cyanfrozen = fighter6frozen
}
if (this.fighter6name == 'Golbez'){
golbezaction = fighter6action
golbezstatus = fighter6status
golbezfrozen = fighter6frozen
}
if (this.fighter6name == 'Kain'){
kainaction = fighter6action
kainstatus = fighter6status
kainfrozen = fighter6frozen
}
if (this.fighter6name == 'Terra'){
terraaction = fighter6action
terrastatus = fighter6status
terrafrozen = fighter6frozen
}
if (this.fighter6name == 'Kunglao'){
kunglaoaction = fighter6action
kunglaostatus = fighter6status
kunglaofrozen = fighter6frozen
}
if (this.fighter6name == 'Sonja'){
sonjaaction = fighter6action
sonjastatus = fighter6status
sonjafrozen = fighter6frozen
}
if (this.fighter6name == 'Sektor'){
sektoraction = fighter6action
sektorstatus = fighter6status
sektorfrozen = fighter6frozen
}
if (this.fighter6name == 'Orchid'){
orchidaction = fighter6action
orchidstatus = fighter6status
orchidfrozen = fighter6frozen
}

if (fighter6health < 1) {
if (this.fighter6name == 'Kano'){
fighter6status = 'dead'
kanoidle = false
kanodead = true
fighter6health = 0
}
if (this.fighter6name == 'Sindel'){
fighter6status = 'dead'
sindelidle = false
sindeldead = true
fighter6health = 0
}
if (this.fighter6name == 'Kabal'){
fighter6status = 'dead'
kabalidle = false
kabaldead = true
fighter6health = 0
}
if (this.fighter6name == 'Jago'){
fighter6status = 'dead'
jagoidle = false
jagodead = true
fighter6health = 0
}
if (this.fighter6name == 'Cyrax'){
fighter6status = 'dead'
Cyraxidle = false
Cyraxdead = true
fighter6health = 0
}
if (this.fighter6name == 'Cyan'){
fighter6status = 'dead'
cyanidle = false
cyandead = true
fighter6health = 0
}
if (this.fighter6name == 'Golbez'){
fighter6status = 'dead'
golbezidle = false
golbezdead = true
fighter6health = 0
}
if (this.fighter6name == 'Kain'){
fighter6status = 'dead'
kainidle = false
kaindead = true
fighter6health = 0
}
if (this.fighter6name == 'Terra'){
fighter6status = 'dead'
terraidle = false
terradead = true
fighter6health = 0
}
if (this.fighter6name == 'Kunglao'){
fighter6status = 'dead'
Kunglaoidle = false
Kunglaodead = true
fighter6health = 0
}
if (this.fighter6name == 'Sonja'){
fighter6status = 'dead'
sonjaidle = false
sonjadead = true
fighter6health = 0
}
if (this.fighter6name == 'Sektor'){
fighter6status = 'dead'
sektoridle = false
sektordead = true
fighter6health = 0
}
if (this.fighter6name == 'Orchid'){
fighter6status = 'dead'
orchididle = false
orchiddead = true
fighter6health = 0
}
}

if (fighter6status == 'normal') {
fighter6action += fighter6actionregen;
if (fighter6action > 99) {
fighter6action = 100
if (this.fighter6name == 'Kano'){
kanobuttontinton()
}
if (this.fighter6name == 'Sindel'){
sindelbuttontinton()
}
if (this.fighter6name == 'Kabal'){
kabalbuttontinton()
}
if (this.fighter6name == 'Jago'){
jagobuttontinton()
}
if (this.fighter6name == 'Cyrax'){
cyraxbuttontinton()
}
if (this.fighter6name == 'Cyan'){
cyanbuttontinton()
}
if (this.fighter6name == 'Golbez'){
golbezbuttontinton()
}
if (this.fighter6name == 'Kain'){
kainbuttontinton()
}
if (this.fighter6name == 'Terra'){
terrabuttontinton()
}
if (this.fighter6name == 'Kunglao'){
kunglaobuttontinton()
}
if (this.fighter6name == 'Sonja'){
sonjabuttontinton()
}
if (this.fighter6name == 'Sektor'){
sektorbuttontinton()
}
if (this.fighter6name == 'Orchid'){
orchidbuttontinton()
}
}
if (fighter6action < 100) {
if (this.fighter6name == 'Kano'){
kanobuttontintoff()
}
if (this.fighter6name == 'Sindel'){
sindelbuttontintoff()
}
if (this.fighter6name == 'Kabal'){
kabalbuttontintoff()
}
if (this.fighter6name == 'Jago'){
jagobuttontintoff()
}
if (this.fighter6name == 'Cyrax'){
cyraxbuttontintoff()
}
if (this.fighter6name == 'Cyan'){
cyanbuttontintoff()
}
if (this.fighter6name == 'Golbez'){
golbezbuttontintoff()
}
if (this.fighter6name == 'Kain'){
kainbuttontintoff()
}
if (this.fighter6name == 'Terra'){
terrabuttontintoff()
}
if (this.fighter6name == 'Kunglao'){
kunglaobuttontintoff()
}
if (this.fighter6name == 'Sonja'){
sonjabuttontintoff()
}
if (this.fighter6name == 'Sektor'){
sektorbuttontintoff()
}
if (this.fighter6name == 'Orchid'){
orchidbuttontintoff()
}
}
}
if (fighter6action > 99) {
fighter6uiactionbar.anims.play('actionbar100gr', true);
fighter6actiontxt.visible = false
}

if (fighter6action > 90) {
if (fighter6action < 99) {
fighter6uiactionbar.anims.play('actionbar90gr', true);
}
}

if (fighter6action > 80) {
if (fighter6action < 89) {
fighter6uiactionbar.anims.play('actionbar80gr', true);
}
}

if (fighter6action > 70) {
if (fighter6action < 79) {
fighter6uiactionbar.anims.play('actionbar70gr', true);
}
}

if (fighter6action > 60) {
if (fighter6action < 69) {
fighter6uiactionbar.anims.play('actionbar60gr', true);
}
}

if (fighter6action > 50) {
if (fighter6action < 59) {
fighter6uiactionbar.anims.play('actionbar50gr', true);
}
}

if (fighter6action > 40) {
if (fighter6action < 49) {
fighter6uiactionbar.anims.play('actionbar40gr', true);
}
}

if (fighter6action > 30) {
if (fighter6action < 39) {
fighter6uiactionbar.anims.play('actionbar30gr', true);
}
}

if (fighter6action > 20) {
if (fighter6action < 29) {
fighter6uiactionbar.anims.play('actionbar20gr', true);
}
}

if (fighter6action < 10) {
fighter6uiactionbar.anims.play('actionbar10gr', true);
fighter6actiontxt.visible = true
}
}

function resetdamagetxtpositions(){
    support1damagetakentxt.x = support1x
    support2damagetakentxt.x = support2x
    leader1damagetakentxt.x = leader1x
    leader2damagetakentxt.x = leader2x
    fighter1damagetakentxt.x = fighter1x
    fighter2damagetakentxt.x = fighter2x
    fighter3damagetakentxt.x = fighter3x
    fighter4damagetakentxt.x = fighter4x
    fighter5damagetakentxt.x = fighter5x
    fighter6damagetakentxt.x = fighter6x
}
//************************************************
//enemy
//subzerobattle
//
//enemyattack
//subzeroaction
//************************************************
function enemy1actiontime()
{

if (enemy1health > 99999) {
enemy1uihealthbar.anims.play('enemyhealthbar100gr', true);

}

if (enemy1health > 90000) {
if (enemy1health < 99000) {
enemy1uihealthbar.anims.play('enemyhealthbar90gr', true);
}
}

if (enemy1health > 80000) {
if (enemy1health < 89000) {
enemy1uihealthbar.anims.play('enemyhealthbar80gr', true);
}
}

if (enemy1health > 70000) {
if (enemy1health < 79000) {
enemy1uihealthbar.anims.play('enemyhealthbar70gr', true);
}
}

if (enemy1health > 60000) {
if (enemy1health < 69000) {
enemy1uihealthbar.anims.play('enemyhealthbar60gr', true);
}
}

if (enemy1health > 50000) {
if (enemy1health < 59000) {
enemy1uihealthbar.anims.play('enemyhealthbar50gr', true);
}
}

if (enemy1health > 40000) {
if (enemy1health < 49000) {
enemy1uihealthbar.anims.play('enemyhealthbar40gr', true);
}
}

if (enemy1health > 30000) {
if (enemy1health < 39000) {
enemy1uihealthbar.anims.play('enemyhealthbar30gr', true);
}
}

if (enemy1health > 20000) {
if (enemy1health < 29000) {
enemy1uihealthbar.anims.play('enemyhealthbar20gr', true);
}
}

if (enemy1health < 10000) {
enemy1uihealthbar.anims.play('enemyhealthbar10gr', true);
}

if (enemy1action > 99) {
enemy1uiactionbar.anims.play('enemyactionbar100gr', true);

}

if (enemy1action > 90) {
if (enemy1action < 99) {
enemy1uiactionbar.anims.play('enemyactionbar90gr', true);
}
}

if (enemy1action > 80) {
if (enemy1action < 89) {
enemy1uiactionbar.anims.play('enemyactionbar80gr', true);
}
}

if (enemy1action > 70) {
if (enemy1action < 79) {
enemy1uiactionbar.anims.play('enemyactionbar70gr', true);
}
}

if (enemy1action > 60) {
if (enemy1action < 69) {
enemy1uiactionbar.anims.play('enemyactionbar60gr', true);
}
}

if (enemy1action > 50) {
if (enemy1action < 59) {
enemy1uiactionbar.anims.play('enemyactionbar50gr', true);
}
}

if (enemy1action > 40) {
if (enemy1action < 49) {
enemy1uiactionbar.anims.play('enemyactionbar40gr', true);
}
}

if (enemy1action > 30) {
if (enemy1action < 39) {
enemy1uiactionbar.anims.play('enemyactionbar30gr', true);
}
}

if (enemy1action > 20) {
if (enemy1action < 29) {
enemy1uiactionbar.anims.play('enemyactionbar20gr', true);
}
}

if (enemy1action < 10) {
enemy1uiactionbar.anims.play('enemyactionbar10gr', true);
}


if (subzerobattle == true) {
enemy1action += 1;
if (enemy1action > 99) {
enemy1action = 100
}
if (enemy1action == 100) {
enemy1attackready = true

if (issubzerotargetpicked == true){
if (issubzeroattackmovepicked == false){
randomnumber2 = Math.floor(Math.random() * 3);
}

if (issubzeroattackmovepicked == false){
if (randomnumber2 == 1) {
subzerostatus = 'iceblast'
subzeroselectedmove = 'iceblast'
issubzeroattackmovepicked = true
if (subzerospells.x > subzero.x ) {
subzerospells.x = subzero.x -200
}
}
if (randomnumber2 == 2) {
subzerostatus = 'slide'
subzeroselectedmove = 'slide'
issubzeroattackmovepicked = true
}
}
}
if (issubzeropickingtarget == true) {
randomnumber = Math.floor(Math.random() * 11);
if (randomnumber == 1) {
if (leader1health < 1) {
}
issubzeropickingtarget = true
subzerotarget = this.leader1name
subzerotargetx = leader1x
subzerotargety = leader1y
issubzerotargetpicked = true
issubzeropickingtarget = false
}
if (randomnumber == 2) {
if (leader2health < 1) {
}
issubzeropickingtarget = true
subzerotarget = this.leader2name
subzerotargetx = leader2x
subzerotargety = leader2y
issubzerotargetpicked = true
issubzeropickingtarget = false
}
if (randomnumber == 3) {
if (fighter1health < 1) {
}
issubzeropickingtarget = true
subzerotarget = this.fighter1name
subzerotargetx = fighter1x
subzerotargety = fighter1y
issubzerotargetpicked = true
issubzeropickingtarget = false
}
if (randomnumber == 4) {
if (fighter2health < 1) {
}
issubzeropickingtarget = true
subzerotarget = this.fighter2name
subzerotargetx = fighter2x
subzerotargety = fighter2y
issubzerotargetpicked = true
issubzeropickingtarget = false
}
if (randomnumber == 5) {
if (fighter3health < 1) {

}
issubzeropickingtarget = true
subzerotarget = this.fighter3name
subzerotargetx = fighter3x
subzerotargety = fighter3y
issubzerotargetpicked = true
issubzeropickingtarget = false
}
if (randomnumber == 6) {
if (fighter4health < 1) {

}
issubzeropickingtarget = true
subzerotarget = this.fighter4name
subzerotargetx = fighter4x
subzerotargety = fighter4y
issubzerotargetpicked = true
issubzeropickingtarget = false
}
if (randomnumber == 7) {
if (fighter5health < 1) {

}
issubzeropickingtarget = true
subzerotarget = this.fighter5name
subzerotargetx = fighter5x
subzerotargety = fighter5y
issubzerotargetpicked = true
issubzeropickingtarget = false
}
if (randomnumber == 8) {
if (fighter6health < 1) {

}
issubzeropickingtarget = true
subzerotarget = this.fighter6name
subzerotargetx = fighter6x
subzerotargety = fighter6y
issubzerotargetpicked = true
issubzeropickingtarget = false
}
if (randomnumber == 9) {
if (support1health < 1) {

}
issubzeropickingtarget = true
subzerotarget = this.support1name
subzerotargetx = support1x
subzerotargety = support1y
issubzerotargetpicked = true
issubzeropickingtarget = false
}
if (randomnumber == 10) {
if (support2health < 1) {
}
issubzeropickingtarget = true
subzerotarget = this.support2name
subzerotargetx = support2x
subzerotargety = support2y
issubzerotargetpicked = true
issubzeropickingtarget = false
}
}
}


if (issubzeroattackmovepicked == true){
if (subzeroselectedmove == 'slide'){


if (subzero.x > subzerotargetx ) {
subzero.anims.play('subzeroslide', true);
subzero.x -= 50
}
if (subzero.x < subzerotargetx +35  ) {
subzeroslide ()
subzero.x = 1200
subzeroselectedmove = ''
issubzeroattackmovepicked = false
subzerospells.x = subzero.x -200
subzerospells.y = subzero.y - 125
subzerostatus = 'ready'
}
}
}



if (issubzeroattackmovepicked == true){
if (subzeroselectedmove == 'iceblast'){

}
subzerospells.anims.play('subzeroiceblastgr', true);
if (subzerospells.x > subzerotargetx ) {
subzerospells.x -= 20
enemy1action = 0

}
if (subzeroselectedmove == 'iceblast'){
if (subzerospells.x < subzerotargetx +1 ) {
subzerofreeze()

subzerospells.visible = false
subzeroselectedmove = ''
subzerospells.x = subzero.x -200
subzerospells.y = subzero.y - 125
issubzeroattackmovepicked = false
issubzerotargetpicked = false
issubzeropickingtarget = true
subzerostatus = 'ready'
}
if (subzerospells.y < subzerotargety +25  ) {
subzerospells.y += 5
}
if (subzerospells.y > subzerotargety +25  ) {
subzerospells.y -= 3
}
}
}

//subzeroslide
function subzeroslide ()
{
support1health -= 500 - support1defenserating
support1currentdamagetaken = 500 - support1defenserating
support1damagetakenfloatup = true
support2health -= 500 - support2defenserating
support2currentdamagetaken = 500 - support2defenserating
support2damagetakenfloatup = true
leader1health -= 500 - leader1defenserating
leader1currentdamagetaken = 500 - leader1defenserating
leader1damagetakenfloatup = true
leader2health -= 500 - leader2defenserating
leader2currentdamagetaken = 500 - leader2defenserating
leader2damagetakenfloatup = true
fighter1health -= 500 - fighter1defenserating
fighter1currentdamagetaken = 500 - fighter1defenserating
fighter1damagetakenfloatup = true
fighter2health -= 500 - fighter2defenserating
fighter2currentdamagetaken = 500 - fighter2defenserating
fighter2damagetakenfloatup = true
fighter3health -= 500 - fighter3defenserating
fighter3currentdamagetaken = 500 - fighter3defenserating
fighter3damagetakenfloatup = true
fighter4health -= 500 - fighter4defenserating
fighter4currentdamagetaken = 500 - fighter4defenserating
fighter4damagetakenfloatup = true
fighter5health -= 500 - fighter5defenserating
fighter5currentdamagetaken = 500 - fighter5defenserating
fighter5damagetakenfloatup = true
fighter6health -= 500 - fighter6defenserating
fighter6currentdamagetaken = 500 - fighter6defenserating
fighter6damagetakenfloatup = true
}

//subzerofreeze
function subzerofreeze ()
{
if (kangactive == true) {
if (subzerotarget == 'Kang') {
if (activeleader1name == 'Kang') {
kangfrozen = true
leader1frozen = true
leader1status = 'frozen'
kangbuttontintdisable()
leader1health -= 1000  - leader1defenserating 
leader1currentdamagetaken = 1000 - leader1defenserating
leader1damagetakenfloatup = true
leader1action = 0
}
}
}

if (spinalactive == true) {
if (subzerotarget == 'Spinal') {
if (activeleader2name == 'Spinal') {
spinalfrozen = true
spinalstatus = 'frozen'
leader2frozen = true
leader2status = 'frozen'
spinalbuttontintdisable()
leader2health -= 1000 - leader2defenserating
leader2currentdamagetaken = 1000 - leader2defenserating
leader2damagetakenfloatup = true
leader2action = 0
}
}
}

if (comboactive == true) {
if (subzerotarget == 'Combo') {
if (activeleader1name == 'Combo') {
combofrozen = true
combostatus = 'frozen'
leader1status = 'frozen'
combobuttontintdisable()
leader1health -= 1000 - leader1defenserating
leader1action = 0
}
}
}

if (subzerotarget == 'Kano') {
if (activefighter1name == 'Kano') {
kanofrozen = true
kanostatus = 'frozen'
fighter1frozen = true
fighter1status = 'frozen'
kanobuttontintdisable()
fighter1health -= 1000 - fighter1defenserating
fighter1currentdamagetaken = 1000 - fighter1defenserating
fighter1damagetakenfloatup = true
fighter1action = 0
}
}

if (subzerotarget == 'Orchid') {
if (activefighter2name == 'Orchid') {
orchidfrozen = true
orchidstatus = 'frozen'
fighter2frozen = true
fighter2status = 'frozen'
orchidbuttontintdisable()
fighter2health -= 1000 - fighter2defenserating
fighter2currentdamagetaken = 1000 - fighter2defenserating
fighter2damagetakenfloatup = true
fighter2action = 0
}
}
if (subzerotarget == 'Jago') {
if (activefighter3name == 'Jago') {
jagofrozen = true
jagostatus = 'frozen'
fighter3frozen = true
fighter3status = 'frozen'
jagobuttontintdisable()
fighter3health -= 1000 - fighter3defenserating
fighter3currentdamagetaken = 1000 - fighter3defenserating
fighter3damagetakenfloatup = true
fighter3action = 0
}
}
if (subzerotarget == 'Kunglao') {
if (activefighter4name == 'Kunglao') {
kunglaofrozen = true
kunglaostatus = 'frozen'
fighter4frozen = true
fighter4status = 'frozen'
kunglaobuttontintdisable()
fighter4health -= 1000 - fighter4defenserating
fighter4currentdamagetaken = 1000 - fighter4defenserating
fighter4damagetakenfloatup = true
fighter4action = 0
}
}
if (subzerotarget == 'Terra') {
if (activefighter5name == 'Terra') {
terrafrozen = true
terrastatus = 'frozen'
fighter5frozen = true
fighter5status = 'frozen'
terrabuttontintdisable()
fighter5health -= 1000 - fighter5defenserating
fighter5currentdamagetaken = 1000 - fighter5defenserating
fighter5damagetakenfloatup = true
fighter5action = 0
}
}
if (subzerotarget == 'Sonja') {
if (activefighter6name == 'Sonja') {
sonjafrozen = true
sonjastatus = 'frozen'
fighter6frozen = true
fighter6status = 'frozen'
sonjabuttontintdisable()
fighter6health -= 1000 - fighter6defenserating
fighter6currentdamagetaken = 1000 - fighter6defenserating
fighter6damagetakenfloatup = true
fighter6action = 0
}
}
if (subzerotarget == 'Rosa') {
if (activesupport1name == 'Rosa') {
rosafrozen = true
rosastatus = 'frozen'
support1status = 'frozen'
support1health -= 1000 - support1defenserating
support1currentdamagetaken = 1000 - support1defenserating
support1damagetakenfloatup = true
support1action = 0
}
}
if (subzerotarget == 'Mog') {
if (activesupport2name == 'Mog') {
mogfrozen = true
mogstatus = 'frozen'
support2status = 'frozen'
support2health -= 1000 - support2defenserating
support2currentdamagetaken = 1000 - support2defenserating
support2damagetakenfloatup = true
support2action = 0
}
}
}
}

//*********************************************************
//scorpionbattle
//scorpionstart
//******************************************************

if (scorpionbattle == true) {
enemy1action += 1;
if (enemy1action > 99) {
enemy1action = 100
}
if (enemy1action == 100) {
enemy1attackready = true

if (isscorpiontargetpicked == true){
if (isscorpionattackmovepicked == false){
randomnumber2 = Math.floor(Math.random() * 3);
}

if (isscorpionattackmovepicked == false){
if (randomnumber2 == 1) {
scorpionstatus = 'spear'
scorpionselectedmove = 'spear'
isscorpionattackmovepicked = true
}
if (randomnumber2 == 2) {
scorpionstatus = 'punch'
scorpionselectedmove = 'punch'
isscorpionattackmovepicked = true
}
}
}
}
if (isscorpionpickingtarget == true) {
randomnumber = Math.floor(Math.random() * 11);

if (randomnumber == 1) {
if (leader1health < 1) {

}
isscorpionpickingtarget = true
scorpiontarget = this.leader1name
scorpiontargetis = 'leader1'
scorpiontargetx = leader1x
scorpiontargety = leader1y
isscorpiontargetpicked = true
isscorpionpickingtarget = false
}
if (randomnumber == 2) {
if (leader2health < 1) {

}
isscorpionpickingtarget = true
scorpiontarget = this.leader2name
scorpiontargetis = 'leader2'
scorpiontargetx = leader2x
scorpiontargety = leader2y
isscorpiontargetpicked = true
isscorpionpickingtarget = false
}

if (randomnumber == 3) {
if (fighter1health < 1) {

}
isscorpionpickingtarget = true
scorpiontarget = this.fighter1name
scorpiontargetis = 'fighter1'
scorpiontargetx = fighter1x
scorpiontargety = fighter1y
isscorpiontargetpicked = true
isscorpionpickingtarget = false
}
if (randomnumber == 4) {
if (fighter2health < 1) {

}
isscorpionpickingtarget = true
scorpiontarget = this.fighter2name
scorpiontargetis = 'fighter2'
scorpiontargetx = fighter2x
scorpiontargety = fighter2y
isscorpiontargetpicked = true
isscorpionpickingtarget = false
}
if (randomnumber == 5) {
if (fighter3health < 1) {

}
isscorpionpickingtarget = true
scorpiontarget = this.fighter3name
scorpiontargetis = 'fighter3'
scorpiontargetx = fighter3x
scorpiontargety = fighter3y
isscorpiontargetpicked = true
isscorpionpickingtarget = false
}
if (randomnumber == 6) {
if (fighter4health < 1) {

}
isscorpionpickingtarget = true
scorpiontarget = this.fighter4name
scorpiontargetis = 'fighter4'
scorpiontargetx = fighter4x
scorpiontargety = fighter4y
isscorpiontargetpicked = true
isscorpionpickingtarget = false
}
if (randomnumber == 7) {
if (fighter5health < 1) {

}
isscorpionpickingtarget = true
scorpiontarget = this.fighter5name
scorpiontargetis = 'fighter5'
scorpiontargetx = fighter5x
scorpiontargety = fighter5y
isscorpiontargetpicked = true
isscorpionpickingtarget = false
}
if (randomnumber == 8) {
if (fighter6health < 1) {

}
isscorpionpickingtarget = true
scorpiontarget = this.fighter6name
scorpiontargetis = 'fighter6'
scorpiontargetx = fighter6x
scorpiontargety = fighter6y
isscorpiontargetpicked = true
isscorpionpickingtarget = false
}
if (randomnumber == 9) {
if (support1health < 1) {

}
isscorpionpickingtarget = true
scorpiontarget = this.support1name
scorpiontargetis = 'support1'
scorpiontargetx = support1x
scorpiontargety = support1y
isscorpiontargetpicked = true
isscorpionpickingtarget = false
}
if (randomnumber == 10) {
if (support2health < 1) {

}
isscorpionpickingtarget = true
scorpiontarget = this.support2name
scorpiontargetis = 'support2'
scorpiontargetx = support2x
scorpiontargety = support2y
isscorpiontargetpicked = true
isscorpionpickingtarget = false
}
}
}
if (isscorpionattackmovepicked == true){
if (scorpionselectedmove == 'punch'){
if (scorpionpunchnumber > 1 ) {
scorpionpunchnumber -= 0.1;
if (scorpion.x > scorpiontargetx + 180 ) {
scorpion.anims.play('scorpionwalk', true);
scorpion.x -= 25
}
}
if (scorpion.x < scorpiontargetx +181  ) {
if (scorpionpunchnumber > 1  ) {
scorpion.anims.play('scorpionpunch', true);
if (scorpiontarget == 'Kang') {
if (activeleader1name == 'Kang') {
leader1health -= 100  - leader1defenserating 
scorpioncurrentdamage += 100 - leader1defenserating
leader1currentdamagetaken = scorpioncurrentdamage
leader1damagetakenfloatup = true
}
}
if (scorpiontarget == 'Spinal') {
if (activeleader2name == 'Spinal') {
leader2health -= 100 - leader2defenserating
scorpioncurrentdamage += 100 - leader2defenserating
leader2currentdamagetaken = scorpioncurrentdamage
leader2damagetakenfloatup = true
}
}
if (scorpiontarget == 'Combo') {
if (activeleader1name == 'Combo') {
leader1health -= 100 - leader1defenserating
scorpioncurrentdamage += 100 - leader1defenserating
leader1currentdamagetaken = scorpioncurrentdamage
leader1damagetakenfloatup = true
}
}
if (scorpiontarget == 'Kano') {
if (activefighter1name == 'Kano') {
fighter1health -= 100 - fighter1defenserating
scorpioncurrentdamage += 100 - fighter1defenserating
fighter1currentdamagetaken = scorpioncurrentdamage
fighter1damagetakenfloatup = true
}
}

if (scorpiontarget == 'Orchid') {
if (activefighter2name == 'Orchid') {
fighter2health -= 100 - fighter2defenserating
scorpioncurrentdamage += 100 - fighter2defenserating
fighter2currentdamagetaken = scorpioncurrentdamage
fighter2damagetakenfloatup = true
}
}
if (scorpiontarget == 'Jago') {
if (activefighter3name == 'Jago') {
fighter3health -= 100 - fighter3defenserating
scorpioncurrentdamage += 100 - fighter3defenserating
fighter3currentdamagetaken = scorpioncurrentdamage
fighter3damagetakenfloatup = true
}
}
if (scorpiontarget == 'Kunglao') {
if (activefighter4name == 'Kunglao') {
fighter4health -= 100 - fighter4defenserating
scorpioncurrentdamage += 100 - fighter4defenserating
fighter4currentdamagetaken = scorpioncurrentdamage
fighter4damagetakenfloatup = true
}
}
if (scorpiontarget == 'Terra') {
if (activefighter5name == 'Terra') {
fighter5health -= 100 - fighter5defenserating
scorpioncurrentdamage += 100 - fighter5defenserating
fighter5currentdamagetaken = scorpioncurrentdamage
fighter5damagetakenfloatup = true
}
}
if (scorpiontarget == 'Sonja') {
if (activefighter6name == 'Sonja') {
fighter6health -= 100 - fighter6defenserating
scorpioncurrentdamage += 100 - fighter6defenserating
fighter6currentdamagetaken = scorpioncurrentdamage
fighter6damagetakenfloatup = true

}
}
if (scorpiontarget == 'Rosa') {
if (activesupport1name == 'Rosa') {
support1health -= 100 - support1defenserating
scorpioncurrentdamage += 100 - support1defenserating
support1currentdamagetaken = scorpioncurrentdamage
support1damagetakenfloatup = true
}
}
if (scorpiontarget == 'Mog') {
if (activesupport2name == 'Mog') {
support2health -= 100 - support2defenserating
scorpioncurrentdamage += 100 - support2defenserating
support2currentdamagetaken = scorpioncurrentdamage
support2damagetakenfloatup = true
}
}
}
}
if (scorpionpunchnumber < 1 ) {
enemy1action = 0
scorpionpunchnumber = 7
scorpion.x = 1200
scorpionselectedmove = ''
isscorpionattackmovepicked = false
isscorpionpickingtarget = true
scorpioncurrentdamage = 0
scorpion.anims.play('scorpionready', true);
}
}
}
if (isscorpionattackmovepicked == true){
if (scorpionselectedmove == 'spear'){
if (scorpionspearnumber > 5 ) {
scorpionspear = true
scorpionspearnumber -= 0.1;
if (scorpionspear == true ) {
scorpion.setFlipX(true);
scorpion.anims.play('scorpionspear', true);
scorpionspeargr.x = scorpion.x - 700
scorpionspear.y = scorpion.y - 135
scorpionspeargr.visible = true
scorpionspeargr.anims.play('scorpionspeargr' , true);

}
}
if (scorpionspearnumber < 5  ) {
scorpionspearnumber -= 0.1;
if (scorpiontarget == 'Kang') {
if (activeleader1name == 'Kang') {
leader1health -= 100  - leader1defenserating
scorpioncurrentdamage += 100 - leader1defenserating
leader1currentdamagetaken = scorpioncurrentdamage
leader1damagetakenfloatup = true
kangidle = false
kangspear = true
leader1spear = true
leader1status = 'spear'
if (kang.x < scorpion.x -200 ) {
kang.x += 32;
kang.y -= 8;
}
if (kang.x > scorpion.x -201 ) {
scorpionspeargr.visible = false
scorpion.setFlipX(false);
scorpion.anims.play('scorpionpunch', true);
leader1damagetakentxt.x = kang.x
leader1health -= 10  - leader1defenserating
scorpioncurrentdamage += 10 - leader1defenserating
leader1currentdamagetaken = scorpioncurrentdamage
leader1damagetakenfloatup = true
}
}
}

if (scorpiontarget == 'Spinal') {
if (activeleader2name == 'Spinal') {
leader2health -= 100  - leader2defenserating
scorpioncurrentdamage += 100 - leader2defenserating
leader2currentdamagetaken = scorpioncurrentdamage
leader2damagetakenfloatup = true
spinalidle = false
spinalspear = true
leader2spear = true
leader2status = 'spear'
if (spinal.x < scorpion.x -200 ) {
spinal.x += 32;
spinal.y -= 8;
}
if (spinal.x > scorpion.x -201 ) {
scorpionspeargr.visible = false
scorpion.setFlipX(false);
scorpion.anims.play('scorpionpunch', true);
leader2damagetakentxt.x = spinal.x
leader2health -= 10  - leader2defenserating
scorpioncurrentdamage += 10 - leader2defenserating
leader2currentdamagetaken = scorpioncurrentdamage
leader2damagetakenfloatup = true
}
}
}

if (scorpiontarget == 'Kano') {
if (activefighter1name == 'Kano') {
fighter1health -= 100  - fighter1defenserating
scorpioncurrentdamage += 100 - fighter1defenserating
fighter1currentdamagetaken = scorpioncurrentdamage
fighter1damagetakenfloatup = true
kanoidle = false
kanospear = true
fighter1spear = true
fighter1status = 'spear'
if (kano.x < scorpion.x -200 ) {
kano.x += 40;
kano.y -= 8;
}
if (kano.x > scorpion.x -201 ) {
scorpionspeargr.visible = false
scorpion.setFlipX(false);
scorpion.anims.play('scorpionpunch', true);
fighter1damagetakentxt.x = kano.x
fighter1health -= 10  - fighter1defenserating
scorpioncurrentdamage += 10 - fighter1defenserating
fighter1currentdamagetaken = scorpioncurrentdamage
fighter1damagetakenfloatup = true
}
}
}

if (scorpiontarget == 'Orchid') {
if (activefighter2name == 'Orchid') {
fighter2health -= 100  - fighter2defenserating
scorpioncurrentdamage += 100 - fighter2defenserating
fighter2currentdamagetaken = scorpioncurrentdamage
fighter2damagetakenfloatup = true
orchididle = false
orchidspear = true
fighter2spear = true
fighter2status = 'spear'
if (orchid.x < scorpion.x -200 ) {
orchid.x += 40;
orchid.y -= 8;
}
if (orchid.x > scorpion.x -201 ) {
scorpionspeargr.visible = false
scorpion.setFlipX(false);
scorpion.anims.play('scorpionpunch', true);
fighter2damagetakentxt.x = orchid.x
fighter2health -= 10  - fighter2defenserating
scorpioncurrentdamage += 10 - fighter2defenserating
fighter2currentdamagetaken = scorpioncurrentdamage
fighter2damagetakenfloatup = true
}
}
}

if (scorpiontarget == 'Jago') {
if (activefighter3name == 'Jago') {
fighter3health -= 100  - fighter3defenserating
scorpioncurrentdamage += 100 - fighter3defenserating
fighter3currentdamagetaken = scorpioncurrentdamage
fighter3damagetakenfloatup = true
jagoidle = false
jagospear = true
fighter3spear = true
fighter3status = 'spear'
if (jago.x < scorpion.x -200 ) {
jago.x += 40;
jago.y -= 8;
}
if (jago.x > scorpion.x -201 ) {
scorpionspeargr.visible = false
scorpion.setFlipX(false);
scorpion.anims.play('scorpionpunch', true);
fighter3damagetakentxt.x = jago.x
fighter3health -= 10  - fighter3defenserating
scorpioncurrentdamage += 10 - fighter3defenserating
fighter3currentdamagetaken = scorpioncurrentdamage
fighter3damagetakenfloatup = true
}
}
}

if (scorpiontarget == 'Kunglao') {
if (activefighter4name == 'Kunglao') {
fighter4health -= 100  - fighter4defenserating
scorpioncurrentdamage += 100 - fighter4defenserating
fighter4currentdamagetaken = scorpioncurrentdamage
fighter4damagetakenfloatup = true
kunglaoidle = false
kunglaospear = true
fighter4spear = true
fighter4status = 'spear'
if (kunglao.x < scorpion.x -200 ) {
kunglao.x += 40;
kunglao.y -= 8;
}
if (kunglao.x > scorpion.x -201 ) {
scorpionspeargr.visible = false
scorpion.setFlipX(false);
scorpion.anims.play('scorpionpunch', true);
fighter4damagetakentxt.x = kunglao.x
fighter4health -= 10  - fighter4defenserating
scorpioncurrentdamage += 10 - fighter4defenserating
fighter4currentdamagetaken = scorpioncurrentdamage
fighter4damagetakenfloatup = true
}
}
}

if (scorpiontarget == 'Terra') {
if (activefighter5name == 'Terra') {
fighter5health -= 100  - fighter5defenserating
scorpioncurrentdamage += 100 - fighter5defenserating
fighter5currentdamagetaken = scorpioncurrentdamage
fighter5damagetakenfloatup = true
terraidle = false
terraspear = true
fighter5spear = true
fighter5status = 'spear'
if (terra.x < scorpion.x -200 ) {
terra.x += 40;
terra.y -= 8;
}
if (terra.x > scorpion.x -201 ) {
scorpionspeargr.visible = false
scorpion.setFlipX(false);
scorpion.anims.play('scorpionpunch', true);
fighter5damagetakentxt.x = terra.x
fighter5health -= 10  - fighter5defenserating
scorpioncurrentdamage += 10 - fighter5defenserating
fighter5currentdamagetaken = scorpioncurrentdamage
fighter5damagetakenfloatup = true
}
}
}

if (scorpiontarget == 'Sonja') {
if (activefighter6name == 'Sonja') {
fighter6health -= 100  - fighter6defenserating
scorpioncurrentdamage += 100 - fighter6defenserating
fighter6currentdamagetaken = scorpioncurrentdamage
fighter6damagetakenfloatup = true
sonjaidle = false
sonjaspear = true
fighter6spear = true
fighter6status = 'spear'
if (sonja.x < scorpion.x -200 ) {
sonja.x += 40;
sonja.y -= 8;
}
if (sonja.x > scorpion.x -201 ) {
scorpionspeargr.visible = false
scorpion.setFlipX(false);
scorpion.anims.play('scorpionpunch', true);
fighter6damagetakentxt.x = sonja.x
fighter6health -= 10  - fighter6defenserating
scorpioncurrentdamage += 10 - fighter6defenserating
fighter6currentdamagetaken = scorpioncurrentdamage
fighter6damagetakenfloatup = true
}
}
}

if (scorpiontarget == 'Rosa') {
if (activesupport1name == 'Rosa') {
support1health -= 100  - support1defenserating
scorpioncurrentdamage += 100 - support1defenserating
support1currentdamagetaken = scorpioncurrentdamage
support1damagetakenfloatup = true
rosaidle = false
rosaspear = true
support1spear = true
support1status = 'spear'
if (rosa.x < scorpion.x -200 ) {
rosa.x += 40;
rosa.y -= 8;
}
if (rosa.x > scorpion.x -201 ) {
scorpionspeargr.visible = false
scorpion.setFlipX(false);
scorpion.anims.play('scorpionpunch', true);
support1damagetakentxt.x = rosa.x
support1health -= 10  - support1defenserating
scorpioncurrentdamage += 10 - support1defenserating
support1currentdamagetaken = scorpioncurrentdamage
support1damagetakenfloatup = true
}
}
}

if (scorpiontarget == 'Mog') {
if (activesupport2name == 'Mog') {
support2health -= 100  - support2defenserating
scorpioncurrentdamage += 100 - support2defenserating
support2currentdamagetaken = scorpioncurrentdamage
support2damagetakenfloatup = true
mogidle = false
mogspear = true
support2spear = true
support2status = 'spear'
if (mog.x < scorpion.x -200 ) {
mog.x += 40;
mog.y -= 8;
}
if (mog.x > scorpion.x -201 ) {
scorpionspeargr.visible = false
scorpion.setFlipX(false);
scorpion.anims.play('scorpionpunch', true);
support2damagetakentxt.x = mog.x
support2health -= 10  - support2defenserating
scorpioncurrentdamage += 10 - support2defenserating
support2currentdamagetaken = scorpioncurrentdamage
support2damagetakenfloatup = true
}
}
}
}
if (scorpionspearnumber < 1 ) {
enemy1action = 0


if (scorpiontarget == 'Kang') {
if (activeleader1name == 'Kang') {
kang.x = leader1x
kang.y = leader1y
kangspear = false
kangidle = true
leader1spear = false
leader1status = 'normal'
}
}

if (scorpiontarget == 'Spinal') {
if (activeleader2name == 'Spinal') {
spinal.x = leader2x
spinal.y = leader2y
spinalspear = false
spinalidle = true
leader2spear = false
leader2status = 'normal'
}
}

if (scorpiontarget == 'Kano') {
if (activefighter1name == 'Kano') {
kano.x = fighter1x
kano.y = fighter1y
kanospear = false
kanoidle = true
fighter1spear = false
fighter1status = 'normal'
}
}

if (scorpiontarget == 'Orchid') {
if (activefighter2name == 'Orchid') {
orchid.x = fighter2x
orchid.y = fighter2y
orchidspear = false
orchididle = true
fighter2spear = false
fighter2status = 'normal'
}
}

if (scorpiontarget == 'Jago') {
if (activefighter3name == 'Jago') {
jago.x = fighter3x
jago.y = fighter3y
jagospear = false
jagoidle = true
fighter3spear = false
fighter3status = 'normal'
}
}

if (scorpiontarget == 'Kunglao') {
if (activefighter4name == 'Kunglao') {
kunglao.x = fighter4x
kunglao.y = fighter4y
kunglaospear = false
kunglaoidle = true
fighter4spear = false
fighter4status = 'normal'
}
}

if (scorpiontarget == 'Terra') {
if (activefighter5name == 'Terra') {
terra.x = fighter5x
terra.y = fighter5y
terraspear = false
terraidle = true
fighter5spear = false
fighter5status = 'normal'
}
}

if (scorpiontarget == 'Sonja') {
if (activefighter6name == 'Sonja') {
sonja.x = fighter6x
sonja.y = fighter6y
sonjaspear = false
sonjaidle = true
fighter6spear = false
fighter6status = 'normal'
}
}

if (scorpiontarget == 'Rosa') {
if (activesupport1name == 'Rosa') {
rosa.x = support1x
rosa.y = support1y
rosaspear = false
rosaidle = true
support1spear = false
support1status = 'normal'
}
}

if (scorpiontarget == 'Mog') {
if (activesupport2name == 'Mog') {
mog.x = support2x
mog.y = support2y
mogspear = false
mogidle = true
support2spear = false
support2status = 'normal'
}
}

scorpionspeargr.visible = false
scorpionspearnumber = 7
scorpionselectedmove = ''
isscorpionattackmovepicked = false
isscorpionpickingtarget = true
scorpioncurrentdamage = 0
scorpion.setFlipX(false);
scorpionspeargr.visible = false
resetdamagetxtpositions()
scorpion.anims.play('scorpionready', true);
}
}
}
}



//setscreenstats
function setscreenstats(){
if (lairstatscreenname == 'Rosa') {
lairstatscreenmaxhealth = rosamaxhealth
lairstatscreenactionregen = rosaactionregen
lairstatscreenattackrating = rosaattackrating
lairstatscreendefenserating = rosadefenserating
lairstatscreensupportrating = rosasupportrating
rosastatcure.visible = true
rosastatheal.visible = true
rosastatfast.visible = true
rosastatshell.visible = true
rosastatbow.visible = true
}
if (lairstatscreenname == 'Mog') {
lairstatscreenmaxhealth = mogmaxhealth
lairstatscreenactionregen = mogactionregen
lairstatscreenattackrating = mogattackrating
lairstatscreendefenserating = mogdefenserating
lairstatscreensupportrating = mogsupportrating
mogstatmoon.visible = true
mogstatpower.visible = true
mogstatdance.visible = true
mogstatdream.visible = true
mogstatbull.visible = true
}
if (lairstatscreenname == 'Kang') {
lairstatscreenmaxhealth = kangmaxhealth
lairstatscreenactionregen = kangactionregen
lairstatscreenattackrating = kangattackrating
lairstatscreendefenserating = kangdefenserating
lairstatscreensupportrating = kangsupportrating
kangstatflykick.visible = true
kangstatfireball.visible = true
kangstatbicycle.visible = true
kangstatdragon.visible = true
kangstatprayer.visible = true
}
if (lairstatscreenname == 'Spinal') {
lairstatscreenmaxhealth = spinalmaxhealth
lairstatscreenactionregen = spinalactionregen
lairstatscreenattackrating = spinalattackrating
lairstatscreendefenserating = spinaldefenserating
lairstatscreensupportrating = spinalsupportrating
spinalstatslice.visible = true
spinalstatslash.visible = true
spinalstatbash.visible = true
spinalstatspike.visible = true
spinalstatblock.visible = true
}
if (lairstatscreenname == 'Kano') {
lairstatscreenmaxhealth = kanomaxhealth
lairstatscreenactionregen = kanoactionregen
lairstatscreenattackrating = kanoattackrating
lairstatscreendefenserating = kanodefenserating
lairstatscreensupportrating = kanosupportrating
kanostatblades.visible = true
kanostatcut.visible = true
kanostatlaser.visible = true
kanostathell.visible = true
kanostatkick.visible = true
}
if (lairstatscreenname == 'Orchid') {
lairstatscreenmaxhealth = orchidmaxhealth
lairstatscreenactionregen = orchidactionregen
lairstatscreenattackrating = orchidattackrating
lairstatscreendefenserating = orchiddefenserating
lairstatscreensupportrating = orchidsupportrating
orchidstatwheel.visible = true
orchidstatfireba.visible = true
orchidstatbaton.visible = true
orchidstatcat.visible = true
orchidstatfit.visible = true

}
if (lairstatscreenname == 'Jago') {
lairstatscreenmaxhealth = jagomaxhealth
lairstatscreenactionregen = jagoactionregen
lairstatscreenattackrating = jagoattackrating
lairstatscreendefenserating = jagodefenserating
lairstatscreensupportrating = jagosupportrating
jagostatsword.visible = true
jagostatplasma.visible = true
jagostatfocus.visible = true
jagostatrkick.visible = true
jagostatstab.visible = true

}
if (lairstatscreenname == 'Kunglao') {
lairstatscreenmaxhealth = kunglaomaxhealth
lairstatscreenactionregen = kunglaoactionregen
lairstatscreenattackrating = kunglaoattackrating
lairstatscreendefenserating = kunglaodefenserating
lairstatscreensupportrating = kunglaosupportrating
kunglaostatpalmkick.visible = true
kunglaostathatthrow.visible = true
kunglaostatwhirl.visible = true
kunglaostatbrim.visible = true
kunglaostatkick.visible = true

}
if (lairstatscreenname == 'Terra') {
lairstatscreenmaxhealth = terramaxhealth
lairstatscreenactionregen = terraactionregen
lairstatscreenattackrating = terraattackrating
lairstatscreendefenserating = terradefenserating
lairstatscreensupportrating = terrasupportrating
terrastatfire.visible = true
terrastatice.visible = true
terrastatwind.visible = true
terrastatearth.visible = true
terrastatcall.visible = true

}
if (lairstatscreenname == 'Sonja') {
lairstatscreenmaxhealth = sonjamaxhealth
lairstatscreenactionregen = sonjaactionregen
lairstatscreenattackrating = sonjaattackrating
lairstatscreendefenserating = sonjadefenserating
lairstatscreensupportrating = sonjasupportrating
sonjastathandst.visible = true
sonjastatblaster.visible = true
sonjastatkiss.visible = true
sonjastatdancer.visible = true
sonjastatkicks.visible = true

}
}

//hidestatbuttons
function hidestatbuttons(){
if (lairstatscreenname == 'Rosa') {
rosastatcure.visible = false
rosastatheal.visible = false
rosastatfast.visible = false
rosastatshell.visible = false
rosastatbow.visible = false
}
if (lairstatscreenname == 'Mog') {
mogstatmoon.visible = false
mogstatpower.visible = false
mogstatdance.visible = false
mogstatdream.visible = false
mogstatbull.visible = false
}
if (lairstatscreenname == 'Kang') {
kangstatflykick.visible = false
kangstatfireball.visible = false
kangstatbicycle.visible = false
kangstatdragon.visible = false
kangstatprayer.visible = false
}
if (lairstatscreenname == 'Spinal') {
spinalstatslice.visible = false
spinalstatslash.visible = false
spinalstatbash.visible = false
spinalstatspike.visible = false
spinalstatblock.visible = false
}
if (lairstatscreenname == 'Kano') {
kanostatblades.visible = false
kanostatcut.visible = false
kanostatlaser.visible = false
kanostathell.visible = false
kanostatkick.visible = false
}
if (lairstatscreenname == 'Orchid') {
orchidstatwheel.visible = false
orchidstatfireba.visible = false
orchidstatbaton.visible = false
orchidstatcat.visible = false
orchidstatfit.visible = false
}
if (lairstatscreenname == 'Jago') {
jagostatsword.visible = false
jagostatplasma.visible = false
jagostatfocus.visible = false
jagostatrkick.visible = false
jagostatstab.visible = false
}
if (lairstatscreenname == 'Kunglao') {
kunglaostatpalmkick.visible = false
kunglaostathatthrow.visible = false
kunglaostatwhirl.visible = false
kunglaostatbrim.visible = false
kunglaostatkick.visible = false
}
if (lairstatscreenname == 'Terra') {
terrastatfire.visible = false
terrastatice.visible = false
terrastatwind.visible = false
terrastatearth.visible = false
terrastatcall.visible = false
}
if (lairstatscreenname == 'Sonja') {
sonjastathandst.visible = false
sonjastatblaster.visible = false
sonjastatkiss.visible = false
sonjastatdancer.visible = false
sonjastatkicks.visible = false
}
}




//statbuttoninfo
//setbuttonstatinfo
function setstatbuttoninfo(){
if (statbuttoninfo == 'rosabutton1'){
rosabasehealingamount = support1supportrating + rosabonushealamount;
rosacharge1healingamount = support1supportrating + rosabonushealamount + 1000;
rosacharge2healingamount = support1supportrating + rosabonushealamount + 3000;
rosacharge3healingamount = support1supportrating + rosabonushealamount + 4000;
rosacharge4healingamount = support1supportrating + rosabonushealamount + 5000;
rosacharge5healingamount = support1supportrating + rosabonushealamount + 6000;
lairstatbuttoninfo1 = '         Cure'
lairstatbuttoninfo2 = ' A healing spell to restore health'
lairstatbuttoninfo3 = ' amount healed grows with charges.'
lairstatbuttoninfo4 = '          0' +'  '+ rosabasehealingamount     + ' Target'
lairstatbuttoninfo5 = '          1' +'  '+ rosacharge1healingamount  + ' Target'
lairstatbuttoninfo6 = '          2' +'  '+ rosacharge2healingamount  + ' Target'
lairstatbuttoninfo7 = '          3' +'  '+ rosacharge3healingamount  + ' Target'
lairstatbuttoninfo8 = '          4' +'  '+ rosacharge4healingamount  + ' Target ' + 2000 + ' Group'
lairstatbuttoninfo9 = '          5' +'  '+ rosacharge5healingamount  + ' Target ' + 3000 + ' Group'
}
if (statbuttoninfo == 'rosabutton2'){
rosabasehealingamount = support1supportrating + rosabonushealamount;
rosacharge1healingamount = support1supportrating + rosabonushealamount + 1000;
rosacharge2healingamount = support1supportrating + rosabonushealamount + 2000;
rosacharge3healingamount = support1supportrating + rosabonushealamount + 3000;
rosacharge4healingamount = support1supportrating + rosabonushealamount + 4000;
rosacharge5healingamount = support1supportrating + rosabonushealamount + 4000;
lairstatbuttoninfo1 = '         Heal'
lairstatbuttoninfo2 = ' Spell to remove negative status'
lairstatbuttoninfo3 = 'removes group effect with 5th charge.'
lairstatbuttoninfo4 = '          0' +'  '+ rosabasehealingamount     + ' Target'
lairstatbuttoninfo5 = '          1' +'  '+ rosacharge1healingamount  + ' Target'
lairstatbuttoninfo6 = '          2' +'  '+ rosacharge2healingamount  + ' Target'
lairstatbuttoninfo7 = '          3' +'  '+ rosacharge3healingamount  + ' Target'
lairstatbuttoninfo8 = '          4' +'  '+ rosacharge4healingamount  + ' Target 1 ' + '/ 2'
lairstatbuttoninfo9 = '          5' +'  '+ rosacharge5healingamount  + ' Target ' + 1000 + ' Group'
}
if (statbuttoninfo == 'rosabutton3'){
lairstatbuttoninfo1 = '         Fast'
lairstatbuttoninfo2 = ' Spell to speed up action recovery'
lairstatbuttoninfo3 = 'effects group with 5th charge.'
lairstatbuttoninfo4 = '          0' +'  '+ '+0.5'  + ' Target'
lairstatbuttoninfo5 = '          1' +'  '+ '+1.0'  + ' Target'
lairstatbuttoninfo6 = '          2' +'  '+ '+1.5'  + ' Target'
lairstatbuttoninfo7 = '          3' +'  '+ '+2.0'  + ' Target'
lairstatbuttoninfo8 = '          4' +'  '+ '+2.5'  + ' Target'
lairstatbuttoninfo9 = '          5' +'  '+ '+3.0'  + ' Target ' + '/ +1' + '/ Group'
}
if (statbuttoninfo == 'rosabutton4'){
lairstatbuttoninfo1 = '         Shell'
lairstatbuttoninfo2 = ' Spell to increase defenses'
lairstatbuttoninfo3 = 'effects group with 5th charge.'
lairstatbuttoninfo4 = '          0' +'  '+ '+25'  + ' Target'
lairstatbuttoninfo5 = '          1' +'  '+ '+35'  + ' Target'
lairstatbuttoninfo6 = '          2' +'  '+ '+45'  + ' Target'
lairstatbuttoninfo7 = '          3' +'  '+ '+55'  + ' Target' 
lairstatbuttoninfo8 = '          4' +'  '+ '+55'  + ' Target 1 ' + '/ 2 '
lairstatbuttoninfo9 = '          5' +'  '+ '+60'  + ' Target 1 ' + '/ 2 ' + ' +25' + '/ Group'
}
if (statbuttoninfo == 'rosabutton5'){
lairstatbuttoninfo1 = '         Bow'
lairstatbuttoninfo2 = ' Spell to attack enemy'
lairstatbuttoninfo3 = 'Damage done shields group.'
lairstatbuttoninfo4 = '          0' +'  '+ support1attackrating * 0.5
lairstatbuttoninfo5 = '          1' +'  '+ support1attackrating * 1.0
lairstatbuttoninfo6 = '          2' +'  '+ support1attackrating * 1.5
lairstatbuttoninfo7 = '          3' +'  '+ support1attackrating * 2.0
lairstatbuttoninfo8 = '          4' +'  '+ support1attackrating * 2.5
lairstatbuttoninfo9 = '          5' +'  '+ support1attackrating * 3.5
}

if (statbuttoninfo == 'mogbutton1'){
mogbasehealingamount = support2attackrating + mogbonushealamount;
mogcharge1healingamount = support2supportrating + mogbonushealamount + 2000;
mogcharge2healingamount = support2supportrating + mogbonushealamount + 3000;
mogcharge3healingamount = support2supportrating + mogbonushealamount + 4000;
mogcharge4healingamount = support2supportrating + mogbonushealamount + 5000;
mogcharge5healingamount = support2supportrating + mogbonushealamount + 7000;
lairstatbuttoninfo1 = '        Moon'
lairstatbuttoninfo2 = ' A spell to raise max health'
lairstatbuttoninfo3 = ' amount grows with charges.'
lairstatbuttoninfo4 = '          0' +'  '+ mogbasehealingamount     + ' Group'
lairstatbuttoninfo5 = '          1' +'  '+ mogcharge1healingamount  + ' Group'
lairstatbuttoninfo6 = '          2' +'  '+ mogcharge2healingamount  + ' Group'
lairstatbuttoninfo7 = '          3' +'  '+ mogcharge3healingamount  + ' Group'
lairstatbuttoninfo8 = '          4' +'  '+ mogcharge4healingamount  + ' Group'
lairstatbuttoninfo9 = '          5' +'  '+ mogcharge5healingamount  + ' Group' 
}

if (statbuttoninfo == 'mogbutton2'){
mogbasehealingamount = support2attackrating + mogbonushealamount;
mogcharge1healingamount = support2supportrating + mogbonushealamount + 200;
mogcharge2healingamount = support2supportrating + mogbonushealamount + 300;
mogcharge3healingamount = support2supportrating + mogbonushealamount + 400;
mogcharge4healingamount = support2supportrating + mogbonushealamount + 500;
mogcharge5healingamount = support2supportrating + mogbonushealamount + 700;
lairstatbuttoninfo1 = '        Power'
lairstatbuttoninfo2 = ' A spell to raise attack power'
lairstatbuttoninfo3 = ' amount grows with charges.'
lairstatbuttoninfo4 = '          0' +'  '+ mogbasehealingamount     + ' Group'
lairstatbuttoninfo5 = '          1' +'  '+ mogcharge1healingamount  + ' Group'
lairstatbuttoninfo6 = '          2' +'  '+ mogcharge2healingamount  + ' Group'
lairstatbuttoninfo7 = '          3' +'  '+ mogcharge3healingamount  + ' Group'
lairstatbuttoninfo8 = '          4' +'  '+ mogcharge4healingamount  + ' Group'
lairstatbuttoninfo9 = '          5' +'  '+ mogcharge5healingamount  + ' Group' 
}

if (statbuttoninfo == 'mogbutton3'){

lairstatbuttoninfo1 = '        Dance'
lairstatbuttoninfo2 = ' A spell to give actiontime'
lairstatbuttoninfo3 = ' 5th charge grants a short action burst'
lairstatbuttoninfo4 = '          0' +'  '+ ' 20'     + ' Group'
lairstatbuttoninfo5 = '          1' +'  '+ ' 40'  + ' Group'
lairstatbuttoninfo6 = '          2' +'  '+ ' 60'  + ' Group'
lairstatbuttoninfo7 = '          3' +'  '+ ' 80'  + ' Group'
lairstatbuttoninfo8 = '          4' +'  '+ ' 100'  + ' Group'
lairstatbuttoninfo9 = '          5' +'  '+ ' 100'  + ' Group' + ' 2.5 regen time burst'
}
if (statbuttoninfo == 'mogbutton4'){
mogbasehealingamount = support2attackrating + mogbonushealamount;
mogcharge1healingamount = support2supportrating + mogbonushealamount + 400;
mogcharge2healingamount = support2supportrating + mogbonushealamount + 600;
mogcharge3healingamount = support2supportrating + mogbonushealamount + 800;
mogcharge4healingamount = support2supportrating + mogbonushealamount + 1000;
mogcharge5healingamount = support2supportrating + mogbonushealamount + 1500;
lairstatbuttoninfo1 = '        Dream'
lairstatbuttoninfo2 = ' A spell to raise support'
lairstatbuttoninfo3 = ' Amount raised rises with charges'
lairstatbuttoninfo4 = '          0' +'  '+ mogbasehealingamount     + ' Group'
lairstatbuttoninfo5 = '          1' +'  '+ mogcharge1healingamount  + ' Group'
lairstatbuttoninfo6 = '          2' +'  '+ mogcharge2healingamount  + ' Group'
lairstatbuttoninfo7 = '          3' +'  '+ mogcharge3healingamount  + ' Group'
lairstatbuttoninfo8 = '          4' +'  '+ mogcharge4healingamount  + ' Group'
lairstatbuttoninfo9 = '          5' +'  '+ mogcharge5healingamount  + ' Group' 
}
if (statbuttoninfo == 'mogbutton5'){

lairstatbuttoninfo1 = '        Bull'
lairstatbuttoninfo2 = ' A spell to grant charge time'
lairstatbuttoninfo3 = ' Amount granted rises with charges'
lairstatbuttoninfo4 = '          0' +'  '+ '20'  + ' Group'
lairstatbuttoninfo5 = '          1' +'  '+ '40'  + ' Group'
lairstatbuttoninfo6 = '          2' +'  '+ '60'  + ' Group'
lairstatbuttoninfo7 = '          3' +'  '+ '80'  + ' Group'
lairstatbuttoninfo8 = '          4' +'  '+ '100' + ' Group'
lairstatbuttoninfo9 = '          5' +'  '+ '100' + ' Group' + '+1 Charge'
}
}

function removestatbuttoninfo(){
    lairstatbuttoninfo1 = ''
    lairstatbuttoninfo2 = ''
    lairstatbuttoninfo3 = ''
    lairstatbuttoninfo4 = ''
    lairstatbuttoninfo5 = ''
    lairstatbuttoninfo6 = ''
    lairstatbuttoninfo7 = ''
    lairstatbuttoninfo8 = ''
    lairstatbuttoninfo9 = ''
}



//battlegraphics
//battlegraphicsoff
function battlegraphicsoff ()
{
kangspells.visible = false
kanobladespells.visible = false
kanospells.visible = false
kanospellsfx.visible = false
kanospells.visible = false
kanobladebleed.visible = false
orchidspells.visible = false
jagospells.visible = false
kunglaospells.visible = false
sonjaspells.visible = false
sonjablasterexplode.visible = false
rosaspells.visible = false
mogspells.visible = false
terraspells.visible = false
subzerospells.visible = false
scorpionspeargr.visible = false
orchidfirebaexplode.visible = false
kangfireballexplode.visible = false
kangprayerboltstrike.visible = false
enemy1healthtxt.visible = false
enemy1leader1damagetxt.visible = false
enemy1leader2damagetxt.visible = false
enemy1fighter1damagetxt.visible = false
enemy1fighter2damagetxt.visible = false
enemy1fighter3damagetxt.visible = false
enemy1fighter4damagetxt.visible = false
enemy1fighter5damagetxt.visible = false
enemy1fighter6damagetxt.visible = false
support1damagetakentxt.visible = false
support2damagetakentxt.visible = false
leader1damagetakentxt.visible = false
leader2damagetakentxt.visible = false
fighter1damagetakentxt.visible = false
fighter2damagetakentxt.visible = false
fighter3damagetakentxt.visible = false
fighter4damagetakentxt.visible = false
fighter5damagetakentxt.visible = false
fighter6damagetakentxt.visible = false
enemytargetplate.visible = false
enemy1targettxt.visible = false
enemy1uihealthbar.visible = false
rosabuttonhide()
mogbuttonhide()
kangbuttonhide()
spinalbuttonhide()
kanobuttonhide()
orchidbuttonhide()
jagobuttonhide()
kunglaobuttonhide()
terrabuttonhide()
sonjabuttonhide()

}


if (battlemode == true) {
if (subzerobattle == true) {
    enemy1x = 1200
    subzero.x = 1200
    
}
if (scorpionbattle == true) {
    enemy1x = 1200
    scorpion.x = 1200
    
}
}



//update
function update ()
{

if (actionquecountdown == true){
    focusboostimage.y -= 2
}

if (lairstatscreenshowbasicstatsoff == true){
    lairstatscreenmaxhealthtxt.visible = false
    lairstatscreenmaxhealthtxt.visible = false
    lairstatscreenactionregentxt.visible = false
    lairstatscreenattackratingtxt.visible = false
    lairstatscreendefenseratingtxt.visible = false
    lairstatscreensupportratingtxt.visible = false
}

if (lairstatscreenshow == false){
    lairstatscreen.visible = false
    lairstatscreennametxt.visible = false
    lairstatscreenmaxhealthtxt.visible = false
    lairstatscreenactionregentxt.visible = false
    lairstatscreenattackratingtxt.visible = false
    lairstatscreendefenseratingtxt.visible = false
    lairstatscreensupportratingtxt.visible = false
    statscreenuibox1.visible = false
    statscreenuibox2.visible = false
    statscreenuibox3.visible = false
    statscreenuibox4.visible = false
    statscreenuibox5.visible = false
    xoutbutton.visible = false
    removestatbuttoninfo()

}

if (lairstatscreenshow == true){

    lairstatscreen.visible = true
    lairstatscreennametxt.visible = true
    statscreenuibox1.visible = true
    statscreenuibox2.visible = true
    statscreenuibox3.visible = true
    statscreenuibox4.visible = true
    statscreenuibox5.visible = true
    xoutbutton.visible = true
    if (lairstatscreenshowbasicstatsoff == false){
    lairstatscreenmaxhealthtxt.visible = true
    lairstatscreenactionregentxt.visible = true
    lairstatscreenattackratingtxt.visible = true
    lairstatscreendefenseratingtxt.visible = true
    lairstatscreensupportratingtxt.visible = true

}
}

if (isrosapickingtarget == true ){
this.input.setDefaultCursor('url(assets/ui/healpointer.cur), pointer');
}

if (isrosapickingtarget == false ){
this.input.setDefaultCursor('url(assets/ui/fmpointer.cur), pointer');
}

    

    if (this.background.tilePositionX > 600)
    {
   if (this.background.tilePositionX < 800)
    {
   if (subzeroalive == true)
    {
    battlemode = true
    subzero.visible = true
    subzerobattle = true
    subzerohealth = enemy1health
    subzeronameplate.visible = true
    enemy1healthtxt.visible = true
    enemy1uiactionbar.visible = true
    enemytargetplate.visible = true
   

    }
    if (subzeroalive == false)
    {
    battlemode = false
    subzero.x = 1200
    subzero.rotation += .1;
    subzero.setScale -= 0.1;
    subzero.y -=  3;
    subzerospells.y -= 3;
    enemy1health += 5000;
    subzerobattle = false
    subzeronameplate.visible = false
    enemy1healthtxt.visible = false
    enemy1uiactionbar.visible = false
    enemytargetplate.visible = false
    
    }
    }
    }

if (this.background.tilePositionX > 900)
    {
   if (this.background.tilePositionX < 1000)
    {
   if (scorpionalive == true)
    {
    if (enemy1health > 100000){
    enemy1health = 100000
    }
    battlemode = true
    enemy1healthtxt.visible = true
    scorpion.visible = true
    scorpionbattle = true
    scorpionhealth = enemy1health
    scorpionnameplate.visible = true
    enemy1healthtxt.visible = true
    enemy1uiactionbar.visible = true
    enemytargetplate.visible = true
    }
    if (scorpionalive == false)
    {
    battlemode = false
    scorpion.x = 1200
    scorpion.rotation += .1;
    scorpion.setScale -= 0.1;
    scorpion.y -=  3;
    scorpionbattle = false
    scorpionnameplate.visible = false
    enemy1healthtxt.visible = false
    enemy1uiactionbar.visible = false
    enemytargetplate.visible = false
    }
    }
    }


if (battlemode == true) {


rosabuttonshow()
mogbuttonshow()
kangbuttonshow()
spinalbuttonshow()
kanobuttonshow()
orchidbuttonshow()
jagobuttonshow()
kunglaobuttonshow()
terrabuttonshow()
sonjabuttonshow()
hidestatbuttons()
lairstatscreenshow = false
lairstatscreenselected = false
lairstatscreenname = ''
enemy1targettxt.visible = true
enemy1uihealthbar.visible = true

//damagerriser
//damagefloat

if (support1damagetakenfloatup == true){
support1damagetakentxt.visible = true
support1damagebeingtakentxt.visible = true
support1damagetakentxt.y -= 1
}
if (support1damagetakentxt.y < support1y - 50){
support1damagetakenfloatup = false
support1damagetakentxt.visible = false
support1damagebeingtakentxt.visible = false
support1damagetakentxt.y = support1y + 80
support1currentdamagetaken = 0
}

if (support2damagetakenfloatup == true){
support2damagetakentxt.visible = true
support2damagebeingtakentxt.visible = true
support2damagetakentxt.y -= 1
}
if (support2damagetakentxt.y < support2y - 50){
support2damagetakenfloatup = false
support2damagetakentxt.visible = false
support2damagebeingtakentxt.visible = false
support2damagetakentxt.y = support2y + 80
support2currentdamagetaken = 0
}

if (leader1damagetakenfloatup == true){
leader1damagetakentxt.visible = true
leader1damagebeingtakentxt.visible = true
leader1damagetakentxt.y -= 1
}
if (leader1damagetakentxt.y < leader1y - 50){
leader1damagetakenfloatup = false
leader1damagetakentxt.visible = false
leader1damagebeingtakentxt.visible = false
leader1damagetakentxt.y = leader1y + 80
leader1currentdamagetaken = 0
}

if (leader2damagetakenfloatup == true){
leader2damagetakentxt.visible = true
leader2damagebeingtakentxt.visible = true
leader2damagetakentxt.y -= 1
}
if (leader2damagetakentxt.y < leader2y - 50){
leader2damagetakenfloatup = false
leader2damagetakentxt.visible = false
leader2damagebeingtakentxt.visible = false
leader2damagetakentxt.y = leader2y + 80
leader2currentdamagetaken = 0
}

if (fighter1damagetakenfloatup == true){
fighter1damagetakentxt.visible = true
fighter1damagebeingtakentxt.visible = true
fighter1damagetakentxt.y -= 1
}
if (fighter1damagetakentxt.y < fighter1y - 50){
fighter1damagetakenfloatup = false
fighter1damagetakentxt.visible = false
fighter1damagebeingtakentxt.visible = false
fighter1damagetakentxt.y = fighter1y + 80
fighter1currentdamagetaken = 0
}

if (fighter2damagetakenfloatup == true){
fighter2damagetakentxt.visible = true
fighter2damagebeingtakentxt.visible = true
fighter2damagetakentxt.y -= 1
}
if (fighter2damagetakentxt.y < fighter2y - 50){
fighter2damagetakenfloatup = false
fighter2damagetakentxt.visible = false
fighter2damagebeingtakentxt.visible = false
fighter2damagetakentxt.y = fighter2y + 80
fighter2currentdamagetaken = 0
}

if (fighter3damagetakenfloatup == true){
fighter3damagetakentxt.visible = true
fighter3damagebeingtakentxt.visible = true
fighter3damagetakentxt.y -= 1
}
if (fighter3damagetakentxt.y < fighter3y - 50){
fighter3damagetakenfloatup = false
fighter3damagetakentxt.visible = false
fighter3damagebeingtakentxt.visible = false
fighter3damagetakentxt.y = fighter3y + 80
fighter3currentdamagetaken = 0
}

if (fighter4damagetakenfloatup == true){
fighter4damagetakentxt.visible = true
fighter4damagebeingtakentxt.visible = true
fighter4damagetakentxt.y -= 1
}
if (fighter4damagetakentxt.y < fighter4y - 50){
fighter4damagetakenfloatup = false
fighter4damagetakentxt.visible = false
fighter4damagebeingtakentxt.visible = false
fighter4damagetakentxt.y = fighter4y + 80
fighter4currentdamagetaken = 0
}

if (fighter5damagetakenfloatup == true){
fighter5damagetakentxt.visible = true
fighter5damagebeingtakentxt.visible = true
fighter5damagetakentxt.y -= 1
}
if (fighter5damagetakentxt.y < fighter5y - 50){
fighter5damagetakenfloatup = false
fighter5damagetakentxt.visible = false
fighter5damagebeingtakentxt.visible = false
fighter5damagetakentxt.y = fighter5y + 80
fighter5currentdamagetaken = 0
}

if (fighter6damagetakenfloatup == true){
fighter6damagetakentxt.visible = true
fighter6damagebeingtakentxt.visible = true
fighter6damagetakentxt.y -= 1
}
if (fighter6damagetakentxt.y < fighter6y - 50){
fighter6damagetakenfloatup = false
fighter6damagetakentxt.visible = false
fighter6damagebeingtakentxt.visible = false
fighter6damagetakentxt.y = fighter6y + 80
fighter6currentdamagetaken = 0
}

//enemydamagefloat

if (leader1damagefloatup == true){
enemy1leader1damagetxt.visible = true
enemy1leader1damagetxt.y -= 10
}
if (enemy1leader1damagetxt.y < 5){
leader1damagefloatup = false
enemy1leader1damagetxt.visible = false
enemy1leader1damagetxt.y = 400
leader1currentdamage = 0
}
if (leader2damagefloatup == true){
enemy1leader2damagetxt.visible = true
enemy1leader2damagetxt.y -= 10
}
if (enemy1leader2damagetxt.y < 5){
leader2damagefloatup = false
enemy1leader2damagetxt.visible = false
enemy1leader2damagetxt.y = 400
leader2currentdamage = 0
}
if (fighter1damagefloatup == true){
enemy1fighter1damagetxt.visible = true
enemy1fighter1damagetxt.y -= 10
}
if (enemy1fighter1damagetxt.y < 5){
fighter1damagefloatup= false
enemy1fighter1damagetxt.visible = false
enemy1fighter1damagetxt.y = 400
fighter1currentdamage = 0
}
if (fighter2damagefloatup == true){
enemy1fighter2damagetxt.visible = true
enemy1fighter2damagetxt.y -= 10
}
if (enemy1fighter2damagetxt.y < 5){
fighter2damagefloatup= false
enemy1fighter2damagetxt.visible = false
enemy1fighter2damagetxt.y = 400
fighter2currentdamage = 0
}
if (fighter3damagefloatup == true){
enemy1fighter3damagetxt.visible = true
enemy1fighter3damagetxt.y -= 10
}
if (enemy1fighter3damagetxt.y < 5){
fighter3damagefloatup= false
enemy1fighter3damagetxt.visible = false
enemy1fighter3damagetxt.y = 400
fighter3currentdamage = 0
}
if (fighter4damagefloatup == true){
enemy1fighter4damagetxt.visible = true
enemy1fighter4damagetxt.y -= 10
}
if (enemy1fighter4damagetxt.y < 5){
fighter4damagefloatup= false
enemy1fighter4damagetxt.visible = false
enemy1fighter4damagetxt.y = 400
fighter4currentdamage = 0
}
if (fighter5damagefloatup == true){
enemy1fighter5damagetxt.visible = true
enemy1fighter5damagetxt.y -= 10
}
if (enemy1fighter5damagetxt.y < 5){
fighter5damagefloatup= false
enemy1fighter5damagetxt.visible = false
enemy1fighter5damagetxt.y = 400
fighter5currentdamage = 0
}
if (fighter6damagefloatup == true){
enemy1fighter6damagetxt.visible = true
enemy1fighter6damagetxt.y -= 10
}
if (enemy1fighter6damagetxt.y < 5){
fighter6damagefloatup= false
enemy1fighter6damagetxt.visible = false
enemy1fighter6damagetxt.y = 400
fighter6currentdamage = 0
}

if (subzerobattle == true) {

enemy1healthtxt.visible = true
kangattacktargetx = subzero.x
kangattacktargety = subzero.y
spinalattacktargetx = subzero.x
spinalattacktargety = subzero.y
comboattacktargetx = subzero.x
comboattacktargety = subzero.y
kanoattacktargetx = subzero.x
kanoattacktargety = subzero.y
orchidattacktargetx = subzero.x
orchidattacktargety = subzero.y
jagoattacktargetx = subzero.x
jagoattacktargety = subzero.y
kunglaoattacktargetx = subzero.x
kunglaoattacktargety = subzero.y
sonjaattacktargetx = subzero.x
sonjaattacktargety = subzero.y
terraspelltargetx = subzero.x
terraspelltargety = subzero.y
}
if (scorpionbattle == true) {
kangattacktargetx = scorpion.x
kangattacktargety = scorpion.y
spinalattacktargetx = scorpion.x
spinalattacktargety = scorpion.y
comboattacktargetx = scorpion.x
comboattacktargety = scorpion.y
kanoattacktargetx = scorpion.x
kanoattacktargety = scorpion.y
orchidattacktargetx = scorpion.x
orchidattacktargety = scorpion.y
jagoattacktargetx = scorpion.x
jagoattacktargety = scorpion.y
kunglaoattacktargetx = scorpion.x
kunglaoattacktargety = scorpion.y
sonjaattacktargetx = scorpion.x
sonjaattacktargety = scorpion.y
terraspelltargetx = scorpion.x
terraspelltargety = scorpion.y
}
}

kangprayerboltstrike.x = kang.x -75
rosaspells.x = rosaspelltargetx -90
rosaspells.y = rosaspelltargety -140
terraspells.x = terraspelltargetx -90
terraspells.y = terraspelltargety -140
mogspells.x = 150
mogspells.y = 240

torch.anims.play('torch', true);
backdragon.anims.play('backdragon', true);

//keys 
if (battlemode == false) {
    battlegraphicsoff()
    if (this.background.tilePositionX < 0)
    {
    this.background.tilePositionX += 1;
    this.background2.tilePositionX += 0.2;
    torch.x -= 1;
    backdragon.x -= 1;
    }
    
    if (this.background.tilePositionX > 1037)
    {
    this.background.tilePositionX -= 1;
    this.background2.tilePositionX -= 0.2;
    torch.x += 1;
    backdragon.x += 1;
    }

    if (cursors.left.isDown)
    {
  
    this.background.tilePositionX -= 1;
    this.background2.tilePositionX -= 0.2;
    torch.x += 1;
    backdragon.x += 1;
    subzero.x += 1;
    scorpion.x += 1;
    
      if (kangactive == true) {
       kang.setFlipX(true);
       kang.anims.play('kangwalk', true);
       }
       if (spinalactive == true) {
       spinal.setFlipX(true);
       spinal.anims.play('spinalwalk', true);
       }
       if (glaciusactive == true) {
       glacius.setFlipX(true);
       glacius.anims.play('glaciuswalk', true);
       }
       if (comboactive == true) {
       combo.setFlipX(true);
       combo.anims.play('combowalk', true);
       }
        if (kanoactive == true) {
       kano.setFlipX(true);
       kano.anims.play('kanowalk', true);
       }
        if (sindelactive == true) {
       sindel.setFlipX(true);
       sindel.anims.play('sindelwalk', true);
       }
         if (kabalactive == true) {
       kabal.setFlipX(true);
       kabal.anims.play('kabalwalk', true);
       }
        if (jagoactive == true) {
       jago.setFlipX(true);
       jago.anims.play('jagowalk', true);
       }
       if (cyraxactive == true) {
       cyrax.setFlipX(true);
       cyrax.anims.play('cyraxwalk', true);
       }
        if (kunglaoactive == true) {
       kunglao.setFlipX(true);
       kunglao.anims.play('kunglaowalk', true);
       }
        if (sonjaactive == true) {
       sonja.setFlipX(true);
       sonja.anims.play('sonjawalk', true);
       }
         if (sektoractive == true) {
       sektor.setFlipX(true);
       sektor.anims.play('sektorwalk', true);
       }
         if (orchidactive == true) {
       orchid.setFlipX(true);
       orchid.anims.play('orchidwalk', true);
       }
        if (cecilactive == true) {
       cecil.setFlipX(false);
       cecil.anims.play('cecilwalk', true);
       }
       if (rosaactive == true) {
       rosa.setFlipX(false);
       rosa.anims.play('rosawalk', true);
       }
         if (cyanactive == true) {
       cyan.setFlipX(false);
       cyan.anims.play('cyanwalk', true);
       }
         if (golbezactive == true) {
       golbez.setFlipX(false);
       golbez.anims.play('golbezwalk', true);
       }
         if (kainactive == true) {
       kain.setFlipX(false);
       kain.anims.play('kainwalk', true);
       }
        if (terraactive == true) {
       terra.setFlipX(false);
       terra.anims.play('terrawalk', true);
       }
          if (mogactive == true) {
       mog.setFlipX(false);
       mog.anims.play('mogwalk', true);
       }
    }
    
    else if (cursors.right.isDown)
    {
  
    this.background.tilePositionX += 1;
    this.background2.tilePositionX += 0.2;
    torch.x -= 1;
    backdragon.x -= 1;
    subzero.x -= 1;
    scorpion.x -=1;

      if (kangactive == true) {
       kang.anims.play('kangwalk', true);
       }
       if (spinalactive == true) {
       spinal.anims.play('spinalwalk', true);
       }
       if (glaciusactive == true) {
       glacius.anims.play('glaciuswalk', true);
       }
       if (comboactive == true) {
       combo.anims.play('combowalk', true);
       }
       if (kanoactive == true) {
       kano.anims.play('kanowalk', true);
       }
         if (sindelactive == true) {
       sindel.anims.play('sindelwalk', true);
       }
          if (kabalactive == true) {
       kabal.anims.play('kabalwalk', true);
       }
       if (jagoactive == true) {
       jago.anims.play('jagowalk', true);
       }
        if (cyraxactive == true) {
       cyrax.anims.play('cyraxwalk', true);
       }
       if (kunglaoactive == true) {
       kunglao.anims.play('kunglaowalk', true);
       }
       if (sonjaactive == true) {
       sonja.anims.play('sonjawalk', true);
       }
        if (sektoractive == true) {
       sektor.anims.play('sektorwalk', true);
       }
       if (orchidactive == true) {
       orchid.anims.play('orchidwalk', true);
       }
       if (cecilactive == true) {
       cecil.anims.play('cecilwalk', true);
       }
       if (rosaactive == true) {
       rosa.anims.play('rosawalk', true);
       }
         if (cyanactive == true) {
       cyan.anims.play('cyanwalk', true);
       }
       if (golbezactive == true) {
       golbez.anims.play('golbezwalk', true);
       }
         if (kainactive == true) {
       kain.anims.play('kainwalk', true);
       }
          if (terraactive == true) {
       terra.anims.play('terrawalk', true);
       }
         if (mogactive == true) {
       mog.anims.play('mogwalk', true);
       }
    }
    
    else
    {
       if (kangactive == true) {
       kang.setFlipX(false);
       kang.anims.play('kangidle', true);
              }
       if (spinalactive == true) {
       spinal.setFlipX(false);
       spinal.anims.play('spinalidle', true);
       }
       if (glaciusactive == true) {
       glacius.setFlipX(false);
       glacius.anims.play('glaciusidle', true);
       }
       if (comboactive == true) {
       combo.setFlipX(false);
       combo.anims.play('comboidle', true);
       }
       if (kanoactive == true) {
       kano.setFlipX(false);
       kano.anims.play('kanoidle', true);
       }
       if (sindelactive == true) {
       sindel.setFlipX(false);
       sindel.anims.play('sindelidle', true);
       }
        if (kabalactive == true) {
       kabal.setFlipX(false);
       kabal.anims.play('kabalidle', true);
       }
       if (jagoactive == true) {
       jago.setFlipX(false);
       jago.anims.play('jagoidle', true);
       } 
       if (cyraxactive == true) {
       cyrax.setFlipX(false);
       cyrax.anims.play('cyraxidle', true);
       }  
       if (kunglaoactive == true) {
       kunglao.setFlipX(false);
       kunglao.anims.play('kunglaoidle', true);
       }  
       if (sonjaactive == true) {
       sonja.setFlipX(false);
       sonja.anims.play('sonjaidle', true);
       }
        if (sektoractive == true) {
       sektor.setFlipX(false);
       sektor.anims.play('sektoridle', true);
       }
        if (orchidactive == true) {
       orchid.setFlipX(false);
       orchid.anims.play('orchididle', true);
       }
          if (cecilactive == true) {
       cecil.setFlipX(true);
       cecil.anims.play('cecilidle', true);
       }
        if (rosaactive == true) {
       rosa.setFlipX(true);
       rosa.anims.play('rosaidle', true);
       }
         if (cyanactive == true) {
       cyan.setFlipX(true);
       cyan.anims.play('cyanidle', true);
       }
         if (golbezactive == true) {
       golbez.setFlipX(true);
       golbez.anims.play('golbezidle', true);
       }
        if (kainactive == true) {
       kain.setFlipX(true);
       kain.anims.play('kainidle', true);
       }
          if (terraactive == true) {
       terra.setFlipX(true);
       terra.anims.play('terraidle', true);
       }
         if (mogactive == true) {
       mog.setFlipX(true);
       mog.anims.play('mogidle', true);
       }
    }
}
    //***********************************
    //battlemodekeys
    //idle
if (battlemode == true) {
      if (kangactive == true) {
      if (kangidle == true) {
       kang.setFlipX(false);
       kang.anims.play('kangidle', true);
}
}
     if (kangactive == true) {
      if (kangfrozen == true) {
       kang.anims.stop('kangidle', true);
       kang.setTint(0x0000ff);
}
}
 if (kangactive == true) {
      if (kangspear == true) {
       kang.anims.play('kangspear', true);
}
}

  if (kangactive == true) {
      if (kangdead == true) {
       kang.anims.play('kangdead', true);
}
}
     if (spinalactive == true) {
      if (spinalidle == true) {
       spinal.setFlipX(false);
       spinal.anims.play('spinalidle', true);
}
}
     if (spinalactive == true) {
      if (spinalfrozen == true) {
       spinal.anims.stop('spinalidle', true);
       spinal.setTint(0x0000ff);
}
}
  if (spinalactive == true) {
      if (spinaldead == true) {
       spinal.anims.play('spinaldead', true);
}
}

 if (spinalactive == true) {
      if (spinalspear == true) {
       spinal.anims.play('spinalspear', true);
}
}
     if (comboactive == true) {
      if (comboidle == true) {
       combo.setFlipX(false);
       combo.anims.play('comboidle', true);
}
}
     if (comboactive == true) {
      if (combofrozen == true) {
       combo.anims.stop('comboidle', true);
       combo.setTint(0x0000ff);
}
}
  if (comboactive == true) {
      if (combodead == true) {
       combo.anims.play('combodead', true);
}
}

      if (glaciusactive == true) {
      if (glaciusidle == true) {
       glacius.setFlipX(false);
       glacius.anims.play('glaciusidle', true);
}
}
    if (glaciusactive == true) {
      if (glaciusdead == true) {
       glacius.anims.play('glaciusdead', true);
}
}
    if (kanoactive == true) {
      if (kanospear == true) {
       kano.anims.play('kanospear', true);
}
}

    if (kanoactive == true) {
      if (kanoidle == true) {
       kano.setFlipX(false);
       kano.anims.play('kanoidle', true);
}
}
      if (kanoactive == true) {
      if (kanofrozen == true) {
       kano.anims.stop('kanoidle', true);
       kano.setTint(0x0000ff);
}
}
    if (kanoactive == true) {
      if (kanodead == true) {
       kano.anims.play('kanodead', true);
}
}
 if (sindelactive == true) {
      if (sindelidle == true) {
       sindel.setFlipX(false);
       sindel.anims.play('sindelidle', true);
}
}
 if (kabalactive == true) {
      if (kabalidle == true) {
       kabal.setFlipX(false);
       kabal.anims.play('kabalidle', true);
}
}
if (kabalactive == true) {
      if (kabaldead == true) {
       kabal.anims.play('kabaldead', true);
}
}

 if (jagoactive == true) {
      if (jagospear == true) {
       jago.anims.play('jagospear', true);
}
}
 if (jagoactive == true) {
      if (jagoidle == true) {
       jago.setFlipX(false);
       jago.anims.play('jagoidle', true);
}
}
  if (jagoactive == true) {
      if (jagofrozen == true) {
       jago.anims.stop('jagoidle', true);
       jago.setTint(0x0000ff);
}
}
  if (jagoactive == true) {
      if (jagodead == true) {
       jago.anims.play('jagodead', true);
}
}
 if (cyraxactive == true) {
      if (cyraxidle == true) {
       cyrax.setFlipX(false);
       cyrax.anims.play('cyraxidle', true);
}
}
 if (cecilactive == true) {
      if (cecilidle == true) {
       cecil.setFlipX(true);
       cecil.anims.play('cecilidle', true);
}
}
   if (cecilactive == true) {
      if (cecildead == true) {
       cecil.anims.play('cecildead', true);
}
}
   if (rosaactive == true) {
      if (rosaspear == true) {
       rosa.anims.play('rosaspear', true);
}
}
   if (rosaactive == true) {
      if (rosaidle == true) {
       rosa.setFlipX(true);
       rosa.anims.play('rosaidle', true);
}
}
     if (rosaactive == true) {
      if (rosafrozen == true) {
       rosa.anims.stop('rosaidle', true);
       rosa.setTint(0x0000ff);
}
}
  if (rosaactive == true) {
      if (rosadead == true) {
       rosa.anims.play('rosadead', true);
}
}
 if (cyanactive == true) {
      if (cyanidle == true) {
       cyan.setFlipX(true);
       cyan.anims.play('cyanidle', true);
}
}
  if (cyanactive == true) {
      if (cyandead == true) {
       cyan.anims.play('cyandead', true);
}
}
 if (golbezactive == true) {
      if (golbezidle == true) {
       golbez.setFlipX(true);
       golbez.anims.play('golbezidle', true);
}
}
  if (golbezactive == true) {
      if (golbezdead == true) {
       golbez.anims.play('golbezdead', true);
}
}
 if (kainactive == true) {
      if (kainidle == true) {
       kain.setFlipX(false);
       kain.anims.play('kainidle', true);
}
}
  if (kainactive == true) {
      if (kaindead == true) {
       kain.anims.play('kaindead', true);
}
}
      if (terraactive == true) {
      if (terraspear == true) {
       terra.anims.play('terraspear', true);
}
}

      if (terraactive == true) {
      if (terraidle == true) {
       terra.setFlipX(true);
       terra.anims.play('terraidle', true);
}
}
     if (terraactive == true) {
      if (terrafrozen == true) {
       terra.anims.stop('terraidle', true);
       terra.setTint(0x0000ff);
}
}
  if (terraactive == true) {
      if (terradead == true) {
       terra.anims.play('terradead', true);
}
}

    if (mogactive == true) {
      if (mogspear == true) {
       mog.anims.play('mogspear', true);
}
} 
 if (mogactive == true) {
      if (mogidle == true) {
       mog.setFlipX(true);
       mog.anims.play('mogidle', true);
}
}
  if (mogactive == true) {
      if (mogfrozen == true) {
       mog.anims.stop('mogidle', true);
       mog.setTint(0x0000ff);
}
}
  if (mogactive == true) {
      if (mogdead == true) {
       mog.anims.play('mogdead', true);
}
}
  if (kunglaoactive == true) {
      if (kunglaospear == true) {
       kunglao.anims.play('kunglaospear', true);
}
}
  if (kunglaoactive == true) {
      if (kunglaoidle == true) {
       kunglao.setFlipX(false);
       kunglao.anims.play('kunglaoidle', true);
}
}
     if (kunglaoactive == true) {
      if (kunglaofrozen == true) {
       kunglao.anims.stop('kunglaoidle', true);
       kunglao.setTint(0x0000ff);
}
}
  if (kunglaoactive == true) {
      if (kunglaodead == true) {
       kunglao.anims.play('kunglaodead', true);
}
}

 if (sonjaactive == true) {
      if (sonjaspear == true) {
       sonja.anims.play('sonjaspear', true);
}
}

 if (sonjaactive == true) {
      if (sonjaidle == true) {
       sonja.setFlipX(false);
       sonja.anims.play('sonjaidle', true);
}
}
     if (sonjaactive == true) {
      if (sonjafrozen == true) {
       sonja.anims.stop('sonjaidle', true);
       sonja.setTint(0x0000ff);
}
}
  if (sonjaactive == true) {
      if (sonjadead == true) {
       sonja.anims.play('sonjadead', true);
}
}
 if (sektoractive == true) {
      if (sektoridle == true) {
       sektor.setFlipX(false);
       sektor.anims.play('sektoridle', true);
}
}
  if (sektoractive == true) {
      if (sektordead == true) {
       sektor.anims.play('sektordead', true);
}
}
 if (comboactive == true) {
      if (comboidle == true) {
       combo.setFlipX(false);
       combo.anims.play('comboidle', true);
}
}
     if (comboactive == true) {
      if (combofrozen == true) {
       combo.anims.stop('comboidle', true);
       combo.setTint(0x0000ff);
}
}

      if (comboactive == true) {
      if (combodead == true) {
       combo.anims.play('combodead', true);
}
}
      if (orchidactive == true) {
      if (orchidspear == true) {
       orchid.anims.play('orchidspear', true);
}
}
 if (orchidactive == true) {
      if (orchididle == true) {
       orchid.setFlipX(false);
       orchid.anims.play('orchididle', true);
}
}
    if (orchidactive == true) {
      if (orchidfrozen == true) {
       orchid.anims.stop('orchididle', true);
       orchid.setTint(0x0000ff);
}
}
  if (orchidactive == true) {
      if (orchiddead == true) {
       orchid.anims.play('orchiddead', true);
}
}
//*************************************
//battlemodeidlekeys end
// subzerobattle
//*************************************
//subzero status
     if (subzerostatus == 'ready') {
           subzero.anims.play('subzeroready', true);
           subzerospells.visible = false

           }
   if (subzerostatus == 'iceblast') {
           subzero.anims.play('subzeroiceblast', true);
           subzerospells.visible = true

           }
   if (subzerostatus == 'slide') {
           subzero.anims.play('subzeroslide', true);
            }
//***********************************
        if (scorpionstatus == 'ready') {
           scorpion.anims.play('scorpionready', true);
           }




//spellsvisible
//spellvisible
if (kangactive == true) {
//kangspellvisible
if (iskangattackingfireball == false){
if (iskangtargetpicked == false){
kangspells.visible = false
}
}

}
//kanospellvisible
if (iskanoattackingblades == false){
if (iskanotargetpicked == false){
kanobladespells.visible = false
}
}
if (iskanoattackinglaser == false){
if (iskanotargetpicked == false){
kanospells.visible = false
}
}
if (iskanoattackinglaser == false){
if (iskanotargetpicked == false){
kanospellsfx.visible = false
}
}
if (iskanoattackinghell == false){
if (iskanotargetpicked == false){
kanospells.visible = false
}
}
if (isorchidattackingfireba == false){
if (isorchidtargetpicked == false){
orchidspells.visible = false
}
}

if (isorchidfirebaexplode == false){
orchidfirebaexplode.visible = false
}

if (iskangfireballexplode == false){
kangfireballexplode.visible = false
}

if (iskanobladebleed == false){
kanobladebleed.visible = false
}

if (issonjablasterexplode == false){
sonjablasterexplode.visible = false
}

if (isjagoattackingplasma == false){
if (isjagotargetpicked == false){
jagospells.visible = false
}
}
if (iskunglaoattackinghatthrow == false){
if (iskunglaotargetpicked == false){
kunglaospells.visible = false
}
}
if (issonjaattackingblaster == false){
if (issonjatargetpicked == false){
sonjaspells.visible = false
}
}
     //rosacastingoff
      if (isrosacastingnow == false) {
     rosaspells.visible = false
     rosaidle = true

           }
       else if (isrosacastingnow == true) {
       rosaspells.visible = true
       rosaidle = false
       rosa.anims.play('rosacasting', true);
       
       }

     //mogcastingoff
      if (ismogcastingnow == false) {
      mogspells.visible = false
      mogidle = true

           }
       else if (ismogcastingnow == true) {
       mogspells.visible = true
       mogidle = false
       mog.anims.play('mogcasting', true);

       }
   //terracastingoff
      if (isterracastingnow == false) {
     terraspells.visible = false
     terraidle = true

           }
       else if (isterracastingnow == true) {
       terraspells.visible = true
       terraidle = false
       terra.anims.play('terracasting', true);
       
       }

if (isrosatargetpicked == true) {
if (kangactive == true) {
kang.clearTint();
}
if (spinalactive == true) {
spinal.clearTint();
}
if (comboactive == true) {
combo.clearTint();
}
if (glaciusactive == true) {
glacius.clearTint();
}
if (kanoactive == true) {
kano.clearTint();
}
if (sindelactive == true) {
sindel.clearTint();
}
if (kabalactive == true) {
kabal.clearTint();
}
if (jagoactive == true) {
jago.clearTint();
}
if (cyraxactive == true) {
cyrax.clearTint();
}
if (cecilactive == true) {
cecil.clearTint();
}
if (rosaactive == true) {
rosa.clearTint();
}
if (cyanactive == true) {
cyan.clearTint();
}
if (golbezactive == true) {
golbez.clearTint();
}
if (kainactive == true) {
kain.clearTint();
}
if (terraactive == true) {
terra.clearTint();
}
if (mogactive == true) {
mog.clearTint();
}
if (kunglaoactive == true) {
kunglao.clearTint();
}
if (sonjaactive == true) {
sonja.clearTint();
}
if (sektoractive == true) {
sektor.clearTint();
}
if (comboactive == true) {
combo.clearTint();
}
if (orchidactive == true) {
orchid.clearTint();
}
}

if (ismogtargetpicked == true) {
if (kangactive == true) {
kang.clearTint();
}
if (spinalactive == true) {
spinal.clearTint();
}
if (comboactive == true) {
combo.clearTint();
}
if (glaciusactive == true) {
glacius.clearTint();
}
if (kanoactive == true) {
kano.clearTint();
}
if (sindelactive == true) {
sindel.clearTint();
}
if (kabalactive == true) {
kabal.clearTint();
}
if (jagoactive == true) {
jago.clearTint();
}
if (cyraxactive == true) {
cyrax.clearTint();
}
if (cecilactive == true) {
cecil.clearTint();
}
if (mogactive == true) {
mog.clearTint();
}
if (cyanactive == true) {
cyan.clearTint();
}
if (golbezactive == true) {
golbez.clearTint();
}
if (kainactive == true) {
kain.clearTint();
}
if (terraactive == true) {
terra.clearTint();
}
if (mogactive == true) {
mog.clearTint();
}
if (kunglaoactive == true) {
kunglao.clearTint();
}
if (sonjaactive == true) {
sonja.clearTint();
}
if (sektoractive == true) {
sektor.clearTint();
}
if (comboactive == true) {
combo.clearTint();
}
if (orchidactive == true) {
orchid.clearTint();
}
}
}


if (leader1status == 'normal'){
frozenuileader1.visible =  false 
}
if (leader1status == 'frozen'){
frozenuileader1.visible =  true 
}
if (leader2status == 'normal'){
frozenuileader2.visible =  false 
}
if (leader2status == 'frozen'){
frozenuileader2.visible =  true 
}
if (fighter1status == 'normal'){
frozenuifighter1.visible =  false 
}
if (fighter1status == 'frozen'){
frozenuifighter1.visible =  true 
}
if (fighter2status == 'normal'){
frozenuifighter2.visible =  false 
}
if (fighter2status == 'frozen'){
frozenuifighter2.visible =  true 
}
if (fighter3status == 'normal'){
frozenuifighter3.visible =  false 
}
if (fighter3status == 'frozen'){
frozenuifighter3.visible =  true 
}
if (fighter4status == 'normal'){
frozenuifighter4.visible =  false 
}
if (fighter4status == 'frozen'){
frozenuifighter4.visible =  true 
}
if (fighter5status == 'normal'){
frozenuifighter5.visible =  false 
}
if (fighter5status == 'frozen'){
frozenuifighter5.visible =  true 
}
if (fighter6status == 'normal'){
frozenuifighter6.visible =  false 
}
if (fighter6status == 'frozen'){
frozenuifighter6.visible =  true 
}
if (support1status == 'normal'){
frozenuisupport1.visible =  false 
}
if (support1status == 'frozen'){
frozenuisupport1.visible =  true 
}
if (support2status == 'normal'){
frozenuisupport2.visible =  false 
}
if (support2status == 'frozen'){
frozenuisupport2.visible =  true 
}


enemy1healthtxt.setText([
enemy1health
]);

lairstatscreennametxt.setText([
lairstatscreenname
]);
lairstatscreenmaxhealthtxt.setText([
'Health' + ' / ' + lairstatscreenmaxhealth
]);
lairstatscreenactionregentxt.setText([
'Action' + ' / ' + lairstatscreenactionregen
]);
lairstatscreenattackratingtxt.setText([
'Attack' + ' / ' + lairstatscreenattackrating
]);
lairstatscreendefenseratingtxt.setText([
'Defense' + ' / ' + lairstatscreendefenserating
]);
lairstatscreensupportratingtxt.setText([
'Support' + ' / ' + lairstatscreensupportrating
]);
lairstatbuttoninfo1txt.setText([
lairstatbuttoninfo1
]);
lairstatbuttoninfo2txt.setText([
lairstatbuttoninfo2
]);
lairstatbuttoninfo3txt.setText([
lairstatbuttoninfo3
]);
lairstatbuttoninfo4txt.setText([
lairstatbuttoninfo4
]);
lairstatbuttoninfo5txt.setText([
lairstatbuttoninfo5
]);
lairstatbuttoninfo6txt.setText([
lairstatbuttoninfo6
]);
lairstatbuttoninfo7txt.setText([
lairstatbuttoninfo7
]);
lairstatbuttoninfo8txt.setText([
lairstatbuttoninfo8
]);
lairstatbuttoninfo9txt.setText([
lairstatbuttoninfo9
]);


leader1healthtxt.setText([
leader1health + '/' + leader1maxhealth
]);
leader2healthtxt.setText([
leader2health + '/' + leader2maxhealth
]);
support1healthtxt.setText([
support1health + '/' + support1maxhealth
]);
support2healthtxt.setText([
support2health + '/' + support2maxhealth
]);
fighter1healthtxt.setText([
fighter1health + '/' + fighter1maxhealth
]);
fighter2healthtxt.setText([
fighter2health + '/' + fighter2maxhealth
]);
fighter3healthtxt.setText([
fighter3health + '/' + fighter3maxhealth
]);
fighter4healthtxt.setText([
fighter4health + '/' + fighter4maxhealth
]);
fighter5healthtxt.setText([
fighter5health + '/' + fighter5maxhealth
]);
fighter6healthtxt.setText([
fighter6health + '/' + fighter6maxhealth
]);


leader1actiontxt.setText([
leader1action
]);
leader2actiontxt.setText([
leader2action
]);
fighter1actiontxt.setText([
fighter1action
]);
fighter2actiontxt.setText([
fighter2action
]);
fighter3actiontxt.setText([
fighter3action
]);
fighter4actiontxt.setText([
fighter4action
]);
fighter5actiontxt.setText([
fighter5action
]);
fighter6actiontxt.setText([
fighter6action
]);
support1actiontxt.setText([
support1action
]);
support2actiontxt.setText([
support2action
]);
enemy1actiontxt.setText([
enemy1action
]);


if (subzerobattle == true){
    enemy1targettxt.setText([
    subzerotarget
    ]);
}
if (scorpionbattle == true){
    enemy1targettxt.setText([
    scorpiontarget
    ]);
}

actionquenumbertxt.setText([
actionquenumber
 ]);
actionqueeffecttxt.setText([
actionqueeffectnumber
 ]);


support1chargetxt.setText([
support1focustime
 ]);
support2chargetxt.setText([
support2focustime
 ]);
leader1chargetxt.setText([
leader1focustime
 ]);
leader2chargetxt.setText([
leader2focustime
 ]);
fighter1chargetxt.setText([
fighter1focustime
 ]);
fighter2chargetxt.setText([
fighter2focustime
 ]);
fighter3chargetxt.setText([
fighter3focustime
 ]);
fighter4chargetxt.setText([
fighter4focustime
 ]);
fighter5chargetxt.setText([
fighter5focustime
 ]);
fighter6chargetxt.setText([
fighter6focustime
 ]);

support1damagetakentxt.setText([
support1currentdamagetaken
 ]);
support2damagetakentxt.setText([
support2currentdamagetaken
 ]);
leader1damagetakentxt.setText([
leader1currentdamagetaken
 ]);
leader2damagetakentxt.setText([
leader2currentdamagetaken
 ]);
fighter1damagetakentxt.setText([
fighter1currentdamagetaken
 ]);
fighter2damagetakentxt.setText([
fighter2currentdamagetaken
 ]);
fighter3damagetakentxt.setText([
fighter3currentdamagetaken
 ]);
fighter4damagetakentxt.setText([
fighter4currentdamagetaken
 ]);
fighter5damagetakentxt.setText([
fighter5currentdamagetaken
 ]);
fighter6damagetakentxt.setText([
fighter6currentdamagetaken
 ]);

support1damagebeingtakentxt.setText([
'-' + support1currentdamagetaken
 ]);
support2damagebeingtakentxt.setText([
'-' + support2currentdamagetaken
 ]);
leader1damagebeingtakentxt.setText([
'-' + leader1currentdamagetaken
 ]);
leader2damagebeingtakentxt.setText([
'-' + leader2currentdamagetaken
 ]);
fighter1damagebeingtakentxt.setText([
'-' + fighter1currentdamagetaken
 ]);
fighter2damagebeingtakentxt.setText([
'-' + fighter2currentdamagetaken
 ]);
fighter3damagebeingtakentxt.setText([
'-' + fighter3currentdamagetaken
 ]);
fighter4damagebeingtakentxt.setText([
'-' + fighter4currentdamagetaken
 ]);
fighter5damagebeingtakentxt.setText([
'-' + fighter5currentdamagetaken
 ]);
fighter6damagebeingtakentxt.setText([
'-' + fighter6currentdamagetaken
 ]);

enemy1leader1damagetxt.setText([
this.leader1name +' '+ leader1currentdamage
 ]);
enemy1leader2damagetxt.setText([
this.leader2name +' '+ leader2currentdamage
 ]);
enemy1fighter1damagetxt.setText([
this.fighter1name +' '+ fighter1currentdamage
 ]);
enemy1fighter2damagetxt.setText([
this.fighter2name +' '+ fighter2currentdamage
 ]);
enemy1fighter3damagetxt.setText([
this.fighter3name +' '+ fighter3currentdamage
 ]);
enemy1fighter4damagetxt.setText([
this.fighter4name +' '+ fighter4currentdamage
 ]);
enemy1fighter5damagetxt.setText([
this.fighter5name +' '+ fighter5currentdamage
 ]);
enemy1fighter6damagetxt.setText([
this.fighter6name +' '+ fighter6currentdamage
 ]);

text.setText([
        
         
    ]);

}
</script>
</html>
